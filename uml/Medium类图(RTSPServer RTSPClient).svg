<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="7195px" preserveAspectRatio="none" style="width:4781px;height:7195px;" version="1.1" viewBox="0 0 4781 7195" width="4781px" zoomAndPan="magnify"><defs><filter height="300%" id="fmopi22pz7573" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class Medium--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="348.459" id="Medium" style="stroke: #A80036; stroke-width: 1.5;" width="544" x="3133.5" y="6754"/><ellipse cx="3379.25" cy="6770" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3377.8281,6775.3594 Q3375.9688,6775.3594 3374.875,6773.9688 Q3373.7813,6772.5781 3373.7813,6769.5938 Q3373.7813,6767.0625 3374.9453,6765.4063 Q3376.1094,6763.75 3378.0938,6763.75 Q3379.5625,6763.75 3380.0313,6763.875 Q3380.5,6764.0781 3380.5,6764.0781 Q3380.5,6764.0781 3380.5,6764.0078 Q3380.5,6763.9375 3381.1094,6763.0156 L3382.1563,6766.6719 L3380.8281,6767.0781 Q3380.3594,6765.5313 3379.6953,6764.8672 Q3379.0313,6764.2031 3377.9688,6764.2031 Q3377.5781,6764.2031 3376.8125,6765.7344 Q3376.0469,6767.2656 3376.0469,6769.5156 Q3376.0469,6771.9844 3376.7109,6773.375 Q3377.375,6774.7656 3377.9063,6774.7656 Q3378.9688,6774.7656 3379.7266,6774 Q3380.4844,6773.2344 3380.8281,6771.5781 L3382.1563,6772.1719 Q3381.8281,6773.5781 3380.9297,6774.4688 Q3380.0313,6775.3594 3377.8281,6775.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="44" x="3399.75" y="6775.5576">Medium</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3134.5" x2="3676.5" y1="6786" y2="6786"/><polygon fill="none" points="3144.5,6794.0115,3148.5,6798.0115,3144.5,6802.0115,3140.5,6798.0115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3153.5" y="6802.606">friend class MediaLookupTable;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3141.5" y="6811.0344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3153.5" y="6817.6289">UsageEnvironment&amp; fEnviron;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3141.5" y="6826.0574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="3153.5" y="6832.6519">char fMediumName[mediumNameMaxLen];</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3141.5" y="6841.0803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3153.5" y="6847.6748">TaskToken fNextTask;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3134.5" x2="3676.5" y1="6854.0918" y2="6854.0918"/><ellipse cx="3144.5" cy="6867.1033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="518" x="3153.5" y="6870.6978">static Boolean lookupByName(UsageEnvironment&amp; env, char const* mediumName, Medium*&amp; resultMedium);</text><ellipse cx="3144.5" cy="6882.1262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="3153.5" y="6885.7207">static void close(UsageEnvironment&amp; env, char const* mediumName);</text><ellipse cx="3144.5" cy="6897.1492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3153.5" y="6900.7437">static void close(Medium* medium);</text><ellipse cx="3144.5" cy="6912.1721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="3153.5" y="6915.7666">UsageEnvironment&amp; envir() const;</text><ellipse cx="3144.5" cy="6927.1951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="3153.5" y="6930.7896">char const* name() const;</text><ellipse cx="3144.5" cy="6942.218" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="3153.5" y="6945.8125">virtual Boolean isSource() const;</text><ellipse cx="3144.5" cy="6957.241" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3153.5" y="6960.8354">virtual Boolean isSink() const;</text><ellipse cx="3144.5" cy="6972.2639" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="3153.5" y="6975.8584">virtual Boolean isRTCPInstance() const;</text><ellipse cx="3144.5" cy="6987.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3153.5" y="6990.8813">virtual Boolean isRTSPClient() const;</text><ellipse cx="3144.5" cy="7002.3098" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="3153.5" y="7005.9043">virtual Boolean isRTSPServer() const;</text><ellipse cx="3144.5" cy="7017.3328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="3153.5" y="7020.9272">virtual Boolean isMediaSession() const;</text><ellipse cx="3144.5" cy="7032.3557" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="3153.5" y="7035.9502">virtual Boolean isServerMediaSession() const;</text><ellipse cx="3144.5" cy="7047.3787" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="3153.5" y="7050.9731">virtual Boolean isDarwinInjector() const;</text><polygon fill="#FFFF44" points="3144.5,7057.4016,3148.5,7061.4016,3144.5,7065.4016,3140.5,7061.4016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="3153.5" y="7065.9961">Medium(UsageEnvironment&amp; env);</text><polygon fill="#FFFF44" points="3144.5,7072.4246,3148.5,7076.4246,3144.5,7080.4246,3140.5,7076.4246" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="3153.5" y="7081.019">virtual ~Medium();</text><polygon fill="#FFFF44" points="3144.5,7087.4475,3148.5,7091.4475,3144.5,7095.4475,3140.5,7091.4475" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="3153.5" y="7096.042">TaskToken&amp; nextTask();</text><!--class GenericMediaServer--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="363.4819" id="GenericMediaServer" style="stroke: #A80036; stroke-width: 1.5;" width="619" x="2289" y="5459"/><ellipse cx="2538.75" cy="5475" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2537.3281,5480.3594 Q2535.4688,5480.3594 2534.375,5478.9688 Q2533.2813,5477.5781 2533.2813,5474.5938 Q2533.2813,5472.0625 2534.4453,5470.4063 Q2535.6094,5468.75 2537.5938,5468.75 Q2539.0625,5468.75 2539.5313,5468.875 Q2540,5469.0781 2540,5469.0781 Q2540,5469.0781 2540,5469.0078 Q2540,5468.9375 2540.6094,5468.0156 L2541.6563,5471.6719 L2540.3281,5472.0781 Q2539.8594,5470.5313 2539.1953,5469.8672 Q2538.5313,5469.2031 2537.4688,5469.2031 Q2537.0781,5469.2031 2536.3125,5470.7344 Q2535.5469,5472.2656 2535.5469,5474.5156 Q2535.5469,5476.9844 2536.2109,5478.375 Q2536.875,5479.7656 2537.4063,5479.7656 Q2538.4688,5479.7656 2539.2266,5479 Q2539.9844,5478.2344 2540.3281,5476.5781 L2541.6563,5477.1719 Q2541.3281,5478.5781 2540.4297,5479.4688 Q2539.5313,5480.3594 2537.3281,5480.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="111" x="2559.25" y="5480.5576">GenericMediaServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2290" x2="2907" y1="5491" y2="5491"/><polygon fill="none" points="2300,5499.0115,2304,5503.0115,2300,5507.0115,2296,5503.0115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2309" y="5507.606">virtual ClientConnection*</text><polygon fill="none" points="2300,5514.0344,2304,5518.0344,2300,5522.0344,2296,5518.0344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="2309" y="5522.6289">int fServerSocket;</text><polygon fill="none" points="2300,5529.0574,2304,5533.0574,2300,5537.0574,2296,5533.0574" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="2309" y="5537.6519">Port fServerPort;</text><polygon fill="none" points="2300,5544.0803,2304,5548.0803,2300,5552.0803,2296,5548.0803" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2309" y="5552.6748">HashTable* fServerMediaSessions;</text><polygon fill="none" points="2300,5559.1033,2304,5563.1033,2300,5567.1033,2296,5563.1033" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2309" y="5567.6978">HashTable* fClientConnections;</text><polygon fill="none" points="2300,5574.1262,2304,5578.1262,2300,5582.1262,2296,5578.1262" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2309" y="5582.7207">HashTable* fClientSessions;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2290" x2="2907" y1="5589.1377" y2="5589.1377"/><ellipse cx="2300" cy="5602.1492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2309" y="5605.7437">void addServerMediaSession(ServerMediaSession* serverMediaSession);</text><ellipse cx="2300" cy="5617.1721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="593" x="2309" y="5620.7666">virtual ServerMediaSession* lookupServerMediaSession(char const* streamName, Boolean isFirstLookupInSession = True);</text><ellipse cx="2300" cy="5632.1951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2309" y="5635.7896">void removeServerMediaSession(ServerMediaSession* serverMediaSession);</text><ellipse cx="2300" cy="5647.218" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="2309" y="5650.8125">void removeServerMediaSession(char const* streamName);</text><ellipse cx="2300" cy="5662.241" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="2309" y="5665.8354">void closeAllClientSessionsForServerMediaSession(ServerMediaSession* serverMediaSession);</text><ellipse cx="2300" cy="5677.2639" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="2309" y="5680.8584">void closeAllClientSessionsForServerMediaSession(char const* streamName);</text><ellipse cx="2300" cy="5692.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="2309" y="5695.8813">void deleteServerMediaSession(ServerMediaSession* serverMediaSession);</text><ellipse cx="2300" cy="5707.3098" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="2309" y="5710.9043">void deleteServerMediaSession(char const* streamName);</text><polygon fill="#FFFF44" points="2300,5717.3328,2304,5721.3328,2300,5725.3328,2296,5721.3328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="2309" y="5725.9272">GenericMediaServer(UsageEnvironment&amp; env, int ourSocket, Port ourPort);</text><polygon fill="#FFFF44" points="2300,5732.3557,2304,5736.3557,2300,5740.3557,2296,5736.3557" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2309" y="5740.9502">virtual ~GenericMediaServer();</text><polygon fill="#FFFF44" points="2300,5747.3787,2304,5751.3787,2300,5755.3787,2296,5751.3787" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="2309" y="5755.9731">static int setUpOurSocket(UsageEnvironment&amp; env, Port&amp; ourPort);</text><polygon fill="#FFFF44" points="2300,5762.4016,2304,5766.4016,2300,5770.4016,2296,5766.4016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="2309" y="5770.9961">static void incomingConnectionHandler(void*, int /*mask*/);</text><polygon fill="#FFFF44" points="2300,5777.4246,2304,5781.4246,2300,5785.4246,2296,5781.4246" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2309" y="5786.019">void incomingConnectionHandler();</text><polygon fill="#FFFF44" points="2300,5792.4475,2304,5796.4475,2300,5800.4475,2296,5796.4475" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="2309" y="5801.042">void incomingConnectionHandlerOnSocket(int serverSocket);</text><polygon fill="#FFFF44" points="2300,5807.4705,2304,5811.4705,2300,5815.4705,2296,5811.4705" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="2309" y="5816.0649">createNewClientConnection(int clientSocket, struct sockaddr_in clientAddr) = 0;</text><!--class ClientConnection--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="273.3442" id="ClientConnection" style="stroke: #A80036; stroke-width: 1.5;" width="501" x="2529" y="4074"/><ellipse cx="2727.75" cy="4090" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2726.3281,4095.3594 Q2724.4688,4095.3594 2723.375,4093.9688 Q2722.2813,4092.5781 2722.2813,4089.5938 Q2722.2813,4087.0625 2723.4453,4085.4063 Q2724.6094,4083.75 2726.5938,4083.75 Q2728.0625,4083.75 2728.5313,4083.875 Q2729,4084.0781 2729,4084.0781 Q2729,4084.0781 2729,4084.0078 Q2729,4083.9375 2729.6094,4083.0156 L2730.6563,4086.6719 L2729.3281,4087.0781 Q2728.8594,4085.5313 2728.1953,4084.8672 Q2727.5313,4084.2031 2726.4688,4084.2031 Q2726.0781,4084.2031 2725.3125,4085.7344 Q2724.5469,4087.2656 2724.5469,4089.5156 Q2724.5469,4091.9844 2725.2109,4093.375 Q2725.875,4094.7656 2726.4063,4094.7656 Q2727.4688,4094.7656 2728.2266,4094 Q2728.9844,4093.2344 2729.3281,4091.5781 L2730.6563,4092.1719 Q2730.3281,4093.5781 2729.4297,4094.4688 Q2728.5313,4095.3594 2726.3281,4095.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="95" x="2748.25" y="4095.5576">ClientConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2530" x2="3029" y1="4106" y2="4106"/><polygon fill="none" points="2540,4114.0115,2544,4118.0115,2540,4122.0115,2536,4118.0115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2549" y="4122.606">friend class GenericMediaServer;</text><polygon fill="none" points="2540,4129.0344,2544,4133.0344,2540,4137.0344,2536,4133.0344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2549" y="4137.6289">GenericMediaServer&amp; fOurServer;</text><polygon fill="none" points="2540,4144.0574,2544,4148.0574,2540,4152.0574,2536,4148.0574" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="2549" y="4152.6519">int fOurSocket;</text><polygon fill="none" points="2540,4159.0803,2544,4163.0803,2540,4167.0803,2536,4163.0803" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2549" y="4167.6748">struct sockaddr_in fClientAddr;</text><polygon fill="none" points="2540,4174.1033,2544,4178.1033,2540,4182.1033,2536,4178.1033" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="2549" y="4182.6978">unsigned char fRequestBuffer[REQUEST_BUFFER_SIZE];</text><polygon fill="none" points="2540,4189.1262,2544,4193.1262,2540,4197.1262,2536,4193.1262" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="2549" y="4197.7207">unsigned char fResponseBuffer[RESPONSE_BUFFER_SIZE];</text><polygon fill="none" points="2540,4204.1492,2544,4208.1492,2540,4212.1492,2536,4208.1492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="2549" y="4212.7437">unsigned fRequestBytesAlreadySeen, fRequestBufferBytesLeft;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2530" x2="3029" y1="4219.1606" y2="4219.1606"/><polygon fill="#FFFF44" points="2540,4227.1721,2544,4231.1721,2540,4235.1721,2536,4231.1721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="2549" y="4235.7666">ClientConnection(GenericMediaServer&amp; ourServer, int clientSocket, struct sockaddr_in clientAddr);</text><polygon fill="#FFFF44" points="2540,4242.1951,2544,4246.1951,2540,4250.1951,2536,4246.1951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2549" y="4250.7896">virtual ~ClientConnection();</text><polygon fill="#FFFF44" points="2540,4257.218,2544,4261.218,2540,4265.218,2536,4261.218" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="2549" y="4265.8125">UsageEnvironment&amp; envir() { return fOurServer.envir(); }</text><polygon fill="#FFFF44" points="2540,4272.241,2544,4276.241,2540,4280.241,2536,4276.241" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2549" y="4280.8354">void closeSockets();</text><polygon fill="#FFFF44" points="2540,4287.2639,2544,4291.2639,2540,4295.2639,2536,4291.2639" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="2549" y="4295.8584">static void incomingRequestHandler(void*, int /*mask*/);</text><polygon fill="#FFFF44" points="2540,4302.2869,2544,4306.2869,2540,4310.2869,2536,4306.2869" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="2549" y="4310.8813">void incomingRequestHandler();</text><polygon fill="#FFFF44" points="2540,4317.3098,2544,4321.3098,2540,4325.3098,2536,4321.3098" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="2549" y="4325.9043">virtual void handleRequestBytes(int newBytesRead) = 0;</text><polygon fill="#FFFF44" points="2540,4332.3328,2544,4336.3328,2540,4340.3328,2536,4336.3328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2549" y="4340.9272">void resetRequestBuffer();</text><!--class ClientSession--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="153.1606" id="ClientSession" style="stroke: #A80036; stroke-width: 1.5;" width="359" x="2063" y="4134"/><ellipse cx="2199.25" cy="4150" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2197.8281,4155.3594 Q2195.9688,4155.3594 2194.875,4153.9688 Q2193.7813,4152.5781 2193.7813,4149.5938 Q2193.7813,4147.0625 2194.9453,4145.4063 Q2196.1094,4143.75 2198.0938,4143.75 Q2199.5625,4143.75 2200.0313,4143.875 Q2200.5,4144.0781 2200.5,4144.0781 Q2200.5,4144.0781 2200.5,4144.0078 Q2200.5,4143.9375 2201.1094,4143.0156 L2202.1563,4146.6719 L2200.8281,4147.0781 Q2200.3594,4145.5313 2199.6953,4144.8672 Q2199.0313,4144.2031 2197.9688,4144.2031 Q2197.5781,4144.2031 2196.8125,4145.7344 Q2196.0469,4147.2656 2196.0469,4149.5156 Q2196.0469,4151.9844 2196.7109,4153.375 Q2197.375,4154.7656 2197.9063,4154.7656 Q2198.9688,4154.7656 2199.7266,4154 Q2200.4844,4153.2344 2200.8281,4151.5781 L2202.1563,4152.1719 Q2201.8281,4153.5781 2200.9297,4154.4688 Q2200.0313,4155.3594 2197.8281,4155.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="2219.75" y="4155.5576">ClientSession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2064" x2="2421" y1="4166" y2="4166"/><polygon fill="none" points="2074,4174.0115,2078,4178.0115,2074,4182.0115,2070,4178.0115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2083" y="4182.606">friend class GenericMediaServer;</text><polygon fill="none" points="2074,4189.0344,2078,4193.0344,2074,4197.0344,2070,4193.0344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2083" y="4197.6289">GenericMediaServer&amp; fOurServer;</text><polygon fill="none" points="2074,4204.0574,2078,4208.0574,2074,4212.0574,2070,4208.0574" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2083" y="4212.6519">u_int32_t fOurSessionId;</text><polygon fill="none" points="2074,4219.0803,2078,4223.0803,2074,4227.0803,2070,4223.0803" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="2083" y="4227.6748">ServerMediaSession* fOurServerMediaSession;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2064" x2="2421" y1="4234.0918" y2="4234.0918"/><ellipse cx="2074" cy="4247.1033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="2083" y="4250.6978">ClientSession(GenericMediaServer&amp; ourServer, u_int32_t sessionId);</text><ellipse cx="2074" cy="4262.1262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="2083" y="4265.7207">virtual ~ClientSession();</text><ellipse cx="2074" cy="4277.1492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2083" y="4280.7437">UsageEnvironment&amp; envir();</text><!--class RTSPServer--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="844.2163" id="RTSPServer" style="stroke: #A80036; stroke-width: 1.5;" width="631" x="1807" y="1807"/><ellipse cx="2084.75" cy="1823" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2083.3281,1828.3594 Q2081.4688,1828.3594 2080.375,1826.9688 Q2079.2813,1825.5781 2079.2813,1822.5938 Q2079.2813,1820.0625 2080.4453,1818.4063 Q2081.6094,1816.75 2083.5938,1816.75 Q2085.0625,1816.75 2085.5313,1816.875 Q2086,1817.0781 2086,1817.0781 Q2086,1817.0781 2086,1817.0078 Q2086,1816.9375 2086.6094,1816.0156 L2087.6563,1819.6719 L2086.3281,1820.0781 Q2085.8594,1818.5313 2085.1953,1817.8672 Q2084.5313,1817.2031 2083.4688,1817.2031 Q2083.0781,1817.2031 2082.3125,1818.7344 Q2081.5469,1820.2656 2081.5469,1822.5156 Q2081.5469,1824.9844 2082.2109,1826.375 Q2082.875,1827.7656 2083.4063,1827.7656 Q2084.4688,1827.7656 2085.2266,1827 Q2085.9844,1826.2344 2086.3281,1824.5781 L2087.6563,1825.1719 Q2087.3281,1826.5781 2086.4297,1827.4688 Q2085.5313,1828.3594 2083.3281,1828.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="2105.25" y="1828.5576">RTSPServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1808" x2="2437" y1="1839" y2="1839"/><ellipse cx="1818" cy="1852.0115" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="1827" y="1855.606">UserAuthenticationDatabase* authDatabase = NULL,</text><ellipse cx="1818" cy="1867.0344" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="368" x="1827" y="1870.6289">char const* remoteClientNameOrAddress, portNumBits remoteClientPortNum,</text><ellipse cx="1818" cy="1882.0574" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1827" y="1885.6519">responseHandlerForREGISTER* responseHandler,</text><ellipse cx="1818" cy="1897.0803" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="1827" y="1900.6748">char const* username = NULL, char const* password = NULL,</text><ellipse cx="1818" cy="1912.1033" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1827" y="1915.6978">Boolean receiveOurStreamViaTCP = False,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1827" y="1930.7207">int ourSocket, Port ourPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="1827" y="1945.7437">UserAuthenticationDatabase* authDatabase,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="1954.1721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1827" y="1960.7666">friend class RTSPClientConnection;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="1969.1951"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1827" y="1975.7896">friend class RTSPClientSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="1984.218"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1827" y="1990.8125">friend class ServerMediaSessionIterator;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="1999.241"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1827" y="2005.8354">friend class RegisterRequestRecord;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2014.2639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="1827" y="2020.8584">int fHTTPServerSocket;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2029.2869"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1827" y="2035.8813">Port fHTTPServerPort;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2044.3098"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="1827" y="2050.9043">HashTable* fClientConnectionsForHTTPTunneling;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2059.3328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1827" y="2065.9272">HashTable* fTCPStreamingDatabase;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2074.3557"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="1827" y="2080.9502">HashTable* fPendingRegisterRequests;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2089.3787"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1827" y="2095.9731">unsigned fRegisterRequestCounter;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2104.4016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="1827" y="2110.9961">UserAuthenticationDatabase* fAuthDB;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2119.4246"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1827" y="2126.019">unsigned fReclamationTestSeconds;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2134.4475"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="1827" y="2141.042">Boolean fAllowStreamingRTPOverTCP;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1808" x2="2437" y1="2147.459" y2="2147.459"/><ellipse cx="1818" cy="2160.4705" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="1827" y="2164.0649">static RTSPServer* createNew(UsageEnvironment&amp; env, Port ourPort = 554,</text><ellipse cx="1818" cy="2175.4934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1827" y="2179.0879">unsigned reclamationTestSeconds = 65);</text><ellipse cx="1818" cy="2190.5164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="1827" y="2194.1108">static Boolean lookupByName(UsageEnvironment&amp; env, char const* name,</text><ellipse cx="1818" cy="2205.5393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1827" y="2209.1338">RTSPServer*&amp; resultServer);</text><ellipse cx="1818" cy="2220.5623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="605" x="1827" y="2224.1567">typedef void(responseHandlerForREGISTER)(RTSPServer* rtspServer, unsigned requestId, int resultCode, char* resultString);</text><ellipse cx="1818" cy="2235.5852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1827" y="2239.1797">unsigned registerStream(ServerMediaSession* serverMediaSession,</text><ellipse cx="1818" cy="2250.6082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1827" y="2254.2026">char const* proxyURLSuffix = NULL);</text><ellipse cx="1818" cy="2265.6311" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="445" x="1827" y="2269.2256">char* rtspURL(ServerMediaSession const* serverMediaSession, int clientSocket = -1) const;</text><ellipse cx="1818" cy="2280.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="1827" y="2284.2485">char* rtspURLPrefix(int clientSocket = -1) const;</text><ellipse cx="1818" cy="2295.677" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="1827" y="2299.2715">UserAuthenticationDatabase* setAuthenticationDatabase(UserAuthenticationDatabase* newDB);</text><ellipse cx="1818" cy="2310.7" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1827" y="2314.2944">void disableStreamingRTPOverTCP();</text><ellipse cx="1818" cy="2325.7229" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="1827" y="2329.3174">Boolean setUpTunnelingOverHTTP(Port httpPort);</text><ellipse cx="1818" cy="2340.7458" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="1827" y="2344.3403">portNumBits httpServerPortNum() const; // in host byte order.  (Returns 0 if not present.)</text><polygon fill="#FFFF44" points="1818,2350.7688,1822,2354.7688,1818,2358.7688,1814,2354.7688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="1827" y="2359.3633">RTSPServer(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="1827" y="2374.3862">unsigned reclamationTestSeconds);</text><polygon fill="#FFFF44" points="1818,2380.8147,1822,2384.8147,1818,2388.8147,1814,2384.8147" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1827" y="2389.4092">virtual ~RTSPServer();</text><polygon fill="#FFFF44" points="1818,2395.8376,1822,2399.8376,1818,2403.8376,1814,2399.8376" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1827" y="2404.4321">virtual char const* allowedCommandNames();</text><polygon fill="#FFFF44" points="1818,2410.8606,1822,2414.8606,1818,2418.8606,1814,2414.8606" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="1827" y="2419.4551">virtual Boolean weImplementREGISTER(char const* proxyURLSuffix, char*&amp; responseStr);</text><polygon fill="#FFFF44" points="1818,2425.8835,1822,2429.8835,1818,2433.8835,1814,2429.8835" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="1827" y="2434.478">virtual void implementCmd_REGISTER(char const* url, char const* urlSuffix, int socketToRemoteServer,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="1827" y="2449.501">Boolean deliverViaTCP, char const* proxyURLSuffix);</text><polygon fill="#FFFF44" points="1818,2455.9294,1822,2459.9294,1818,2463.9294,1814,2459.9294" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="487" x="1827" y="2464.5239">virtual UserAuthenticationDatabase* getAuthenticationDatabaseForCommand(char const* cmdName);</text><polygon fill="#FFFF44" points="1818,2470.9524,1822,2474.9524,1818,2478.9524,1814,2474.9524" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="1827" y="2479.5469">virtual Boolean specialClientAccessCheck(int clientSocket, struct sockaddr_in&amp; clientAddr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1827" y="2494.5698">char const* urlSuffix);</text><polygon fill="#FFFF44" points="1818,2500.9983,1822,2504.9983,1818,2508.9983,1814,2504.9983" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="1827" y="2509.5928">virtual Boolean specialClientUserAccessCheck(int clientSocket, struct sockaddr_in&amp; clientAddr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1827" y="2524.6157">char const* urlSuffix, char const* username);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2533.0442"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1827" y="2539.6387">virtual Boolean isRTSPServer() const;</text><polygon fill="#FFFF44" points="1818,2546.0671,1822,2550.0671,1818,2554.0671,1814,2550.0671" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="1827" y="2554.6616">virtual ClientConnection* createNewClientConnection(int clientSocket, struct sockaddr_in clientAddr);</text><polygon fill="#FFFF44" points="1818,2561.0901,1822,2565.0901,1818,2569.0901,1814,2565.0901" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="1827" y="2569.6846">virtual ClientSession* createNewClientSession(u_int32_t sessionId);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2578.113"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="1827" y="2584.7075">static void incomingConnectionHandlerHTTP(void*, int /*mask*/);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2593.136"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1827" y="2599.7305">void incomingConnectionHandlerHTTP();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2608.1589"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="1827" y="2614.7534">void noteTCPStreamingOnSocket(int socketNum, RTSPClientSession* clientSession, unsigned trackNum);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2623.1819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="514" x="1827" y="2629.7764">void unnoteTCPStreamingOnSocket(int socketNum, RTSPClientSession* clientSession, unsigned trackNum);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="2638.2048"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="1827" y="2644.7993">void stopTCPStreamingOnSocket(int socketNum);</text><!--class RTSPClientConnection--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="754.0786" id="RTSPClientConnection" style="stroke: #A80036; stroke-width: 1.5;" width="677" x="2266" y="993"/><ellipse cx="2536.75" cy="1009" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2535.3281,1014.3594 Q2533.4688,1014.3594 2532.375,1012.9688 Q2531.2813,1011.5781 2531.2813,1008.5938 Q2531.2813,1006.0625 2532.4453,1004.4063 Q2533.6094,1002.75 2535.5938,1002.75 Q2537.0625,1002.75 2537.5313,1002.875 Q2538,1003.0781 2538,1003.0781 Q2538,1003.0781 2538,1003.0078 Q2538,1002.9375 2538.6094,1002.0156 L2539.6563,1005.6719 L2538.3281,1006.0781 Q2537.8594,1004.5313 2537.1953,1003.8672 Q2536.5313,1003.2031 2535.4688,1003.2031 Q2535.0781,1003.2031 2534.3125,1004.7344 Q2533.5469,1006.2656 2533.5469,1008.5156 Q2533.5469,1010.9844 2534.2109,1012.375 Q2534.875,1013.7656 2535.4063,1013.7656 Q2536.4688,1013.7656 2537.2266,1013 Q2537.9844,1012.2344 2538.3281,1010.5781 L2539.6563,1011.1719 Q2539.3281,1012.5781 2538.4297,1013.4688 Q2537.5313,1014.3594 2535.3281,1014.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="127" x="2557.25" y="1014.5576">RTSPClientConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2267" x2="2942" y1="1025" y2="1025"/><polygon fill="none" points="2277,1033.0115,2281,1037.0115,2277,1041.0115,2273,1037.0115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="2286" y="1041.606">friend class RTSPServer;</text><polygon fill="none" points="2277,1048.0344,2281,1052.0344,2277,1056.0344,2273,1052.0344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2286" y="1056.6289">char* urlSuffix, unsigned urlSuffixMaxSize,</text><polygon fill="none" points="2277,1063.0574,2281,1067.0574,2277,1071.0574,2273,1067.0574" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="2286" y="1071.6519">char* sessionCookie, unsigned sessionCookieMaxSize,</text><polygon fill="none" points="2277,1078.0803,2281,1082.0803,2277,1086.0803,2273,1082.0803" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="2286" y="1086.6748">RTSPServer&amp; fOurRTSPServer;</text><polygon fill="none" points="2277,1093.1033,2281,1097.1033,2277,1101.1033,2273,1097.1033" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2286" y="1101.6978">int&amp; fClientInputSocket;</text><polygon fill="none" points="2277,1108.1262,2281,1112.1262,2277,1116.1262,2273,1112.1262" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="2286" y="1116.7207">int fClientOutputSocket;</text><polygon fill="none" points="2277,1123.1492,2281,1127.1492,2277,1131.1492,2273,1127.1492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2286" y="1131.7437">Boolean fIsActive;</text><polygon fill="none" points="2277,1138.1721,2281,1142.1721,2277,1146.1721,2273,1142.1721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2286" y="1146.7666">unsigned char* fLastCRLF;</text><polygon fill="none" points="2277,1153.1951,2281,1157.1951,2277,1161.1951,2273,1157.1951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="2286" y="1161.7896">unsigned fRecursionCount;</text><polygon fill="none" points="2277,1168.218,2281,1172.218,2277,1176.218,2273,1172.218" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2286" y="1176.8125">char const* fCurrentCSeq;</text><polygon fill="none" points="2277,1183.241,2281,1187.241,2277,1191.241,2273,1187.241" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2286" y="1191.8354">Authenticator fCurrentAuthenticator;</text><polygon fill="none" points="2277,1198.2639,2281,1202.2639,2277,1206.2639,2273,1202.2639" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="2286" y="1206.8584">char* fOurSessionCookie;</text><polygon fill="none" points="2277,1213.2869,2281,1217.2869,2277,1221.2869,2273,1217.2869" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2286" y="1221.8813">unsigned fBase64RemainderCount;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2267" x2="2942" y1="1228.2983" y2="1228.2983"/><polygon fill="#FFFF44" points="2277,1236.3098,2281,1240.3098,2277,1244.3098,2273,1240.3098" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="2286" y="1244.9043">virtual void handleRequestBytes(int newBytesRead);</text><polygon fill="#FFFF44" points="2277,1251.3328,2281,1255.3328,2277,1259.3328,2273,1255.3328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="2286" y="1259.9272">RTSPClientConnection(RTSPServer&amp; ourServer, int clientSocket, struct sockaddr_in clientAddr);</text><polygon fill="#FFFF44" points="2277,1266.3557,2281,1270.3557,2277,1274.3557,2273,1270.3557" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2286" y="1274.9502">virtual ~RTSPClientConnection();</text><polygon fill="#FFFF44" points="2277,1281.3787,2281,1285.3787,2277,1289.3787,2273,1285.3787" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2286" y="1289.9731">virtual void handleCmd_OPTIONS();</text><polygon fill="#FFFF44" points="2277,1296.4016,2281,1300.4016,2277,1304.4016,2273,1300.4016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="2286" y="1304.9961">virtual void handleCmd_GET_PARAMETER(char const* fullRequestStr);</text><polygon fill="#FFFF44" points="2277,1311.4246,2281,1315.4246,2277,1319.4246,2273,1315.4246" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="2286" y="1320.019">virtual void handleCmd_SET_PARAMETER(char const* fullRequestStr);</text><polygon fill="#FFFF44" points="2277,1326.4475,2281,1330.4475,2277,1334.4475,2273,1330.4475" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="2286" y="1335.042">virtual void handleCmd_DESCRIBE(char const* urlPreSuffix, char const* urlSuffix, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="2277,1341.4705,2281,1345.4705,2277,1349.4705,2273,1345.4705" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="480" x="2286" y="1350.0649">virtual void handleCmd_REGISTER(char const* url, char const* urlSuffix, char const* fullRequestStr,</text><polygon fill="#FFFF44" points="2277,1356.4934,2281,1360.4934,2277,1364.4934,2273,1360.4934" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="2286" y="1365.0879">Boolean reuseConnection, Boolean deliverViaTCP, char const* proxyURLSuffix);</text><polygon fill="#FFFF44" points="2277,1371.5164,2281,1375.5164,2277,1379.5164,2273,1375.5164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2286" y="1380.1108">virtual void handleCmd_bad();</text><polygon fill="#FFFF44" points="2277,1386.5393,2281,1390.5393,2277,1394.5393,2273,1390.5393" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2286" y="1395.1338">virtual void handleCmd_notSupported();</text><polygon fill="#FFFF44" points="2277,1401.5623,2281,1405.5623,2277,1409.5623,2273,1405.5623" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2286" y="1410.1567">virtual void handleCmd_notFound();</text><polygon fill="#FFFF44" points="2277,1416.5852,2281,1420.5852,2277,1424.5852,2273,1420.5852" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2286" y="1425.1797">virtual void handleCmd_sessionNotFound();</text><polygon fill="#FFFF44" points="2277,1431.6082,2281,1435.6082,2277,1439.6082,2273,1435.6082" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="2286" y="1440.2026">virtual void handleCmd_unsupportedTransport();</text><polygon fill="#FFFF44" points="2277,1446.6311,2281,1450.6311,2277,1454.6311,2273,1450.6311" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="2286" y="1455.2256">virtual Boolean parseHTTPRequestString(char* resultCmdName, unsigned resultCmdNameMaxSize,</text><polygon fill="#FFFF44" points="2277,1461.6541,2281,1465.6541,2277,1469.6541,2273,1465.6541" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="2286" y="1470.2485">char* acceptStr, unsigned acceptStrMaxSize);</text><polygon fill="#FFFF44" points="2277,1476.677,2281,1480.677,2277,1484.677,2273,1480.677" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2286" y="1485.2715">virtual void handleHTTPCmd_notSupported();</text><polygon fill="#FFFF44" points="2277,1491.7,2281,1495.7,2277,1499.7,2273,1495.7" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2286" y="1500.2944">virtual void handleHTTPCmd_notFound();</text><polygon fill="#FFFF44" points="2277,1506.7229,2281,1510.7229,2277,1514.7229,2273,1510.7229" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="2286" y="1515.3174">virtual void handleHTTPCmd_OPTIONS();</text><polygon fill="#FFFF44" points="2277,1521.7458,2281,1525.7458,2277,1529.7458,2273,1525.7458" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="2286" y="1530.3403">virtual void handleHTTPCmd_TunnelingGET(char const* sessionCookie);</text><polygon fill="#FFFF44" points="2277,1536.7688,2281,1540.7688,2277,1544.7688,2273,1540.7688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="651" x="2286" y="1545.3633">virtual Boolean handleHTTPCmd_TunnelingPOST(char const* sessionCookie, unsigned char const* extraData, unsigned extraDataSize);</text><polygon fill="#FFFF44" points="2277,1551.7917,2281,1555.7917,2277,1559.7917,2273,1555.7917" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="2286" y="1560.3862">virtual void handleHTTPCmd_StreamingGET(char const* urlSuffix, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="2277,1566.8147,2281,1570.8147,2277,1574.8147,2273,1570.8147" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2286" y="1575.4092">void resetRequestBuffer();</text><polygon fill="#FFFF44" points="2277,1581.8376,2281,1585.8376,2277,1589.8376,2273,1585.8376" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2286" y="1590.4321">void closeSockets();</text><polygon fill="#FFFF44" points="2277,1596.8606,2281,1600.8606,2277,1604.8606,2273,1600.8606" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="2286" y="1605.4551">static void handleAlternativeRequestByte(void*, u_int8_t requestByte);</text><polygon fill="#FFFF44" points="2277,1611.8835,2281,1615.8835,2277,1619.8835,2273,1615.8835" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="2286" y="1620.478">void handleAlternativeRequestByte1(u_int8_t requestByte);</text><polygon fill="#FFFF44" points="2277,1626.9065,2281,1630.9065,2277,1634.9065,2273,1630.9065" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="480" x="2286" y="1635.501">Boolean authenticationOK(char const* cmdName, char const* urlSuffix, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="2277,1641.9294,2281,1645.9294,2277,1649.9294,2273,1645.9294" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="522" x="2286" y="1650.5239">void changeClientInputSocket(int newSocketNum, unsigned char const* extraData, unsigned extraDataSize);</text><polygon fill="#FFFF44" points="2277,1656.9524,2281,1660.9524,2277,1664.9524,2273,1660.9524" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="2286" y="1665.5469">static void continueHandlingREGISTER(ParamsForREGISTER* params);</text><polygon fill="#FFFF44" points="2277,1671.9753,2281,1675.9753,2277,1679.9753,2273,1675.9753" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="2286" y="1680.5698">virtual void continueHandlingREGISTER1(ParamsForREGISTER* params);</text><polygon fill="#FFFF44" points="2277,1686.9983,2281,1690.9983,2277,1694.9983,2273,1690.9983" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="2286" y="1695.5928">void setRTSPResponse(char const* responseStr);</text><polygon fill="#FFFF44" points="2277,1702.0212,2281,1706.0212,2277,1710.0212,2273,1706.0212" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="2286" y="1710.6157">void setRTSPResponse(char const* responseStr, u_int32_t sessionId);</text><polygon fill="#FFFF44" points="2277,1717.0442,2281,1721.0442,2277,1725.0442,2273,1721.0442" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2286" y="1725.6387">void setRTSPResponse(char const* responseStr, char const* contentStr);</text><polygon fill="#FFFF44" points="2277,1732.0671,2281,1736.0671,2277,1740.0671,2273,1736.0671" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="457" x="2286" y="1740.6616">void setRTSPResponse(char const* responseStr, u_int32_t sessionId, char const* contentStr);</text><!--class RTSPClientSession--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="558.7803" id="RTSPClientSession" style="stroke: #A80036; stroke-width: 1.5;" width="599" x="1823" y="2951.5"/><ellipse cx="2063.25" cy="2967.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2061.8281,2972.8594 Q2059.9688,2972.8594 2058.875,2971.4688 Q2057.7813,2970.0781 2057.7813,2967.0938 Q2057.7813,2964.5625 2058.9453,2962.9063 Q2060.1094,2961.25 2062.0938,2961.25 Q2063.5625,2961.25 2064.0313,2961.375 Q2064.5,2961.5781 2064.5,2961.5781 Q2064.5,2961.5781 2064.5,2961.5078 Q2064.5,2961.4375 2065.1094,2960.5156 L2066.1563,2964.1719 L2064.8281,2964.5781 Q2064.3594,2963.0313 2063.6953,2962.3672 Q2063.0313,2961.7031 2061.9688,2961.7031 Q2061.5781,2961.7031 2060.8125,2963.2344 Q2060.0469,2964.7656 2060.0469,2967.0156 Q2060.0469,2969.4844 2060.7109,2970.875 Q2061.375,2972.2656 2061.9063,2972.2656 Q2062.9688,2972.2656 2063.7266,2971.5 Q2064.4844,2970.7344 2064.8281,2969.0781 L2066.1563,2969.6719 Q2065.8281,2971.0781 2064.9297,2971.9688 Q2064.0313,2972.8594 2061.8281,2972.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="2083.75" y="2973.0576">RTSPClientSession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1824" x2="2421" y1="2983.5" y2="2983.5"/><polygon fill="none" points="1834,2991.5115,1838,2995.5115,1834,2999.5115,1830,2995.5115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="1843" y="3000.106">friend class RTSPServer;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1843" y="3015.1289">char const* cmdName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="1843" y="3030.1519">char const* urlPreSuffix, char const* urlSuffix,</text><polygon fill="none" points="1834,3036.5803,1838,3040.5803,1834,3044.5803,1830,3040.5803" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="1843" y="3045.1748">RTSPServer&amp; fOurRTSPServer;</text><polygon fill="none" points="1834,3051.6033,1838,3055.6033,1834,3059.6033,1830,3055.6033" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="1843" y="3060.1978">Boolean fIsMulticast, fStreamAfterSETUP;</text><polygon fill="none" points="1834,3066.6262,1838,3070.6262,1834,3074.6262,1830,3070.6262" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1843" y="3075.2207">unsigned char fTCPStreamIdCount;</text><polygon fill="none" points="1834,3081.6492,1838,3085.6492,1834,3089.6492,1830,3085.6492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1843" y="3090.2437">TaskToken fLivenessCheckTask;</text><polygon fill="none" points="1834,3096.6721,1838,3100.6721,1834,3104.6721,1830,3100.6721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1843" y="3105.2666">unsigned fNumStreamStates;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1824" x2="2421" y1="3111.6836" y2="3111.6836"/><polygon fill="#FFFF44" points="1834,3119.6951,1838,3123.6951,1834,3127.6951,1830,3123.6951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="1843" y="3128.2896">RTSPClientSession(RTSPServer&amp; ourServer, u_int32_t sessionId);</text><polygon fill="#FFFF44" points="1834,3134.718,1838,3138.718,1834,3142.718,1830,3138.718" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1843" y="3143.3125">virtual ~RTSPClientSession();</text><polygon fill="#FFFF44" points="1834,3149.741,1838,3153.741,1834,3157.741,1830,3153.741" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="1843" y="3158.3354">virtual void handleCmd_SETUP(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="1843" y="3173.3584">char const* urlPreSuffix, char const* urlSuffix, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="1834,3179.7869,1838,3183.7869,1834,3187.7869,1830,3183.7869" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="398" x="1843" y="3188.3813">virtual void handleCmd_withinSession(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1843" y="3203.4043">char const* fullRequestStr);</text><polygon fill="#FFFF44" points="1834,3209.8328,1838,3213.8328,1834,3217.8328,1830,3213.8328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="1843" y="3218.4272">virtual void handleCmd_TEARDOWN(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1843" y="3233.4502">ServerMediaSubsession* subsession);</text><polygon fill="#FFFF44" points="1834,3239.8787,1838,3243.8787,1834,3247.8787,1830,3243.8787" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="1843" y="3248.4731">virtual void handleCmd_PLAY(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="1843" y="3263.4961">ServerMediaSubsession* subsession, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="1834,3269.9246,1838,3273.9246,1834,3277.9246,1830,3273.9246" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="1843" y="3278.519">virtual void handleCmd_PAUSE(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1843" y="3293.542">ServerMediaSubsession* subsession);</text><polygon fill="#FFFF44" points="1834,3299.9705,1838,3303.9705,1834,3307.9705,1830,3303.9705" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="1843" y="3308.5649">virtual void handleCmd_GET_PARAMETER(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="1843" y="3323.5879">ServerMediaSubsession* subsession, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="1834,3330.0164,1838,3334.0164,1834,3338.0164,1830,3334.0164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="1843" y="3338.6108">virtual void handleCmd_SET_PARAMETER(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="1843" y="3353.6338">ServerMediaSubsession* subsession, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="1834,3360.0623,1838,3364.0623,1834,3368.0623,1830,3364.0623" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="1843" y="3368.6567">void deleteStreamByTrack(unsigned trackNum);</text><polygon fill="#FFFF44" points="1834,3375.0852,1838,3379.0852,1834,3383.0852,1830,3379.0852" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="1843" y="3383.6797">void reclaimStreamStates();</text><polygon fill="#FFFF44" points="1834,3390.1082,1838,3394.1082,1834,3398.1082,1830,3394.1082" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="1843" y="3398.7026">Boolean isMulticast();</text><polygon fill="#FFFF44" points="1834,3405.1311,1838,3409.1311,1834,3413.1311,1830,3409.1311" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1843" y="3413.7256">void noteLiveness();</text><polygon fill="#FFFF44" points="1834,3420.1541,1838,3424.1541,1834,3428.1541,1830,3424.1541" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="1843" y="3428.7485">static void noteClientLiveness(RTSPClientSession* clientSession);</text><polygon fill="#FFFF44" points="1834,3435.177,1838,3439.177,1834,3443.177,1830,3439.177" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="1843" y="3443.7715">static void livenessTimeoutTask(RTSPClientSession* clientSession);</text><polygon fill="#FFFF44" points="1834,3450.2,1838,3454.2,1834,3458.2,1830,3454.2" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="458" x="1843" y="3458.7944">void setRTSPResponse(RTSPClientConnection* ourClientConnection, char const* responseStr);</text><polygon fill="#FFFF44" points="1834,3465.2229,1838,3469.2229,1834,3473.2229,1830,3469.2229" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="1843" y="3473.8174">void setRTSPResponse(RTSPClientConnection* ourClientConnection, char const* responseStr, u_int32_t sessionId);</text><polygon fill="#FFFF44" points="1834,3480.2458,1838,3484.2458,1834,3488.2458,1830,3484.2458" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="573" x="1843" y="3488.8403">void setRTSPResponse(RTSPClientConnection* ourClientConnection, char const* responseStr, char const* contentStr);</text><polygon fill="#FFFF44" points="1834,3495.2688,1838,3499.2688,1834,3503.2688,1830,3499.2688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="1843" y="3503.8633">Boolean usesTCPTransport() const;</text><!--class ServerMediaSessionIterator--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="108.0918" id="ServerMediaSessionIterator" style="stroke: #A80036; stroke-width: 1.5;" width="272" x="1515.5" y="3177"/><ellipse cx="1571.25" cy="3193" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1569.8281,3198.3594 Q1567.9688,3198.3594 1566.875,3196.9688 Q1565.7813,3195.5781 1565.7813,3192.5938 Q1565.7813,3190.0625 1566.9453,3188.4063 Q1568.1094,3186.75 1570.0938,3186.75 Q1571.5625,3186.75 1572.0313,3186.875 Q1572.5,3187.0781 1572.5,3187.0781 Q1572.5,3187.0781 1572.5,3187.0078 Q1572.5,3186.9375 1573.1094,3186.0156 L1574.1563,3189.6719 L1572.8281,3190.0781 Q1572.3594,3188.5313 1571.6953,3187.8672 Q1571.0313,3187.2031 1569.9688,3187.2031 Q1569.5781,3187.2031 1568.8125,3188.7344 Q1568.0469,3190.2656 1568.0469,3192.5156 Q1568.0469,3194.9844 1568.7109,3196.375 Q1569.375,3197.7656 1569.9063,3197.7656 Q1570.9688,3197.7656 1571.7266,3197 Q1572.4844,3196.2344 1572.8281,3194.5781 L1574.1563,3195.1719 Q1573.8281,3196.5781 1572.9297,3197.4688 Q1572.0313,3198.3594 1569.8281,3198.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="1591.75" y="3198.5576">ServerMediaSessionIterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1516.5" x2="1786.5" y1="3209" y2="3209"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1523.5" y="3219.0115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="1535.5" y="3225.606">HashTable::Iterator* fOurIterator;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1516.5" x2="1786.5" y1="3232.0229" y2="3232.0229"/><ellipse cx="1526.5" cy="3245.0344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="1535.5" y="3248.6289">ServerMediaSessionIterator(RTSPServer&amp; server);</text><ellipse cx="1526.5" cy="3260.0574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="1535.5" y="3263.6519">virtual ~ServerMediaSessionIterator();</text><ellipse cx="1526.5" cy="3275.0803" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1535.5" y="3278.6748">ServerMediaSession* next();</text><!--class RegisterRequestRecord--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="183.2065" id="RegisterRequestRecord" style="stroke: #A80036; stroke-width: 1.5;" width="550" x="930.5" y="3139.5"/><ellipse cx="1134.25" cy="3155.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1132.8281,3160.8594 Q1130.9688,3160.8594 1129.875,3159.4688 Q1128.7813,3158.0781 1128.7813,3155.0938 Q1128.7813,3152.5625 1129.9453,3150.9063 Q1131.1094,3149.25 1133.0938,3149.25 Q1134.5625,3149.25 1135.0313,3149.375 Q1135.5,3149.5781 1135.5,3149.5781 Q1135.5,3149.5781 1135.5,3149.5078 Q1135.5,3149.4375 1136.1094,3148.5156 L1137.1563,3152.1719 L1135.8281,3152.5781 Q1135.3594,3151.0313 1134.6953,3150.3672 Q1134.0313,3149.7031 1132.9688,3149.7031 Q1132.5781,3149.7031 1131.8125,3151.2344 Q1131.0469,3152.7656 1131.0469,3155.0156 Q1131.0469,3157.4844 1131.7109,3158.875 Q1132.375,3160.2656 1132.9063,3160.2656 Q1133.9688,3160.2656 1134.7266,3159.5 Q1135.4844,3158.7344 1135.8281,3157.0781 L1137.1563,3157.6719 Q1136.8281,3159.0781 1135.9297,3159.9688 Q1135.0313,3160.8594 1132.8281,3160.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="134" x="1154.75" y="3161.0576">RegisterRequestRecord</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="931.5" x2="1479.5" y1="3171.5" y2="3171.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="950.5" y="3188.106">char const* remoteClientNameOrAddress, portNumBits remoteClientPortNum, char const* rtspURLToRegister,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="950.5" y="3203.1289">RTSPServer::responseHandlerForREGISTER* responseHandler, Authenticator* authenticator,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="938.5" y="3211.5574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="950.5" y="3218.1519">RTSPServer&amp; fOurServer;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="938.5" y="3226.5803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="950.5" y="3233.1748">unsigned fRequestId;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="938.5" y="3241.6033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="950.5" y="3248.1978">RTSPServer::responseHandlerForREGISTER* fResponseHandler;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="931.5" x2="1479.5" y1="3254.6147" y2="3254.6147"/><ellipse cx="941.5" cy="3267.6262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="950.5" y="3271.2207">RegisterRequestRecord(RTSPServer&amp; ourServer, unsigned requestId,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="950.5" y="3286.2437">Boolean requestStreamingViaTCP, char const* proxyURLSuffix);</text><ellipse cx="941.5" cy="3297.6721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="950.5" y="3301.2666">virtual ~RegisterRequestRecord();</text><ellipse cx="941.5" cy="3312.6951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="950.5" y="3316.2896">void handleResponse(int resultCode, char* resultString);</text><!--class RTSPRegisterSender--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="318.4131" id="RTSPRegisterSender" style="stroke: #A80036; stroke-width: 1.5;" width="650" x="174.5" y="4051.5"/><ellipse cx="435.75" cy="4067.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M434.3281,4072.8594 Q432.4688,4072.8594 431.375,4071.4688 Q430.2813,4070.0781 430.2813,4067.0938 Q430.2813,4064.5625 431.4453,4062.9063 Q432.6094,4061.25 434.5938,4061.25 Q436.0625,4061.25 436.5313,4061.375 Q437,4061.5781 437,4061.5781 Q437,4061.5781 437,4061.5078 Q437,4061.4375 437.6094,4060.5156 L438.6563,4064.1719 L437.3281,4064.5781 Q436.8594,4063.0313 436.1953,4062.3672 Q435.5313,4061.7031 434.4688,4061.7031 Q434.0781,4061.7031 433.3125,4063.2344 Q432.5469,4064.7656 432.5469,4067.0156 Q432.5469,4069.4844 433.2109,4070.875 Q433.875,4072.2656 434.4063,4072.2656 Q435.4688,4072.2656 436.2266,4071.5 Q436.9844,4070.7344 437.3281,4069.0781 L438.6563,4069.6719 Q438.3281,4071.0781 437.4297,4071.9688 Q436.5313,4072.8594 434.3281,4072.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="456.25" y="4073.0576">RTSPRegisterSender</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="175.5" x2="823.5" y1="4083.5" y2="4083.5"/><ellipse cx="185.5" cy="4096.5115" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="194.5" y="4100.106">static RTSPRegisterSender*</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="194.5" y="4115.1289">char const* remoteClientNameOrAddress, portNumBits remoteClientPortNum, char const* rtspURLToRegister,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="194.5" y="4130.1519">RTSPClient::responseHandler* rtspResponseHandler, Authenticator* authenticator = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="551" x="194.5" y="4145.1748">Boolean requestStreamingViaTCP = False, char const* proxyURLSuffix = NULL, Boolean reuseConnection = False,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="194.5" y="4160.1978">char const* remoteClientNameOrAddress, portNumBits remoteClientPortNum, char const* rtspURLToRegister,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="194.5" y="4175.2207">RTSPClient::responseHandler* rtspResponseHandler, Authenticator* authenticator,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="437" x="194.5" y="4190.2437">Boolean requestStreamingViaTCP, char const* proxyURLSuffix, Boolean reuseConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="194.5" y="4205.2666">char*&amp; cmdURL, Boolean&amp; cmdURLWasAllocated,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="194.5" y="4220.2896">char const*&amp; protocolStr,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="182.5" y="4228.718"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="194.5" y="4235.3125">portNumBits fRemoteClientPortNum;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="175.5" x2="823.5" y1="4241.7295" y2="4241.7295"/><ellipse cx="185.5" cy="4254.741" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="194.5" y="4258.3354">createNew(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="194.5" y="4273.3584">int verbosityLevel = 0, char const* applicationName = NULL);</text><ellipse cx="185.5" cy="4284.7869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="624" x="194.5" y="4288.3813">void grabConnection(int&amp; sock, struct sockaddr_in&amp; remoteAddress); // so that the socket doesn't get closed when we're deleted</text><polygon fill="#FFFF44" points="185.5,4294.8098,189.5,4298.8098,185.5,4302.8098,181.5,4298.8098" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="194.5" y="4303.4043">RTSPRegisterSender(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="194.5" y="4318.4272">int verbosityLevel, char const* applicationName);</text><polygon fill="#FFFF44" points="185.5,4324.8557,189.5,4328.8557,185.5,4332.8557,181.5,4328.8557" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="194.5" y="4333.4502">virtual ~RTSPRegisterSender();</text><polygon fill="#FFFF44" points="185.5,4339.8787,189.5,4343.8787,185.5,4347.8787,181.5,4343.8787" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="194.5" y="4348.4731">virtual Boolean setRequestFields(RequestRecord* request,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="194.5" y="4363.4961">char*&amp; extraHeaders, Boolean&amp; extraHeadersWereAllocated);</text><!--class RTSPClient--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="1940.8916" id="RTSPClient" style="stroke: #A80036; stroke-width: 1.5;" width="714" x="690.5" y="4670"/><ellipse cx="1011.25" cy="4686" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1009.8281,4691.3594 Q1007.9688,4691.3594 1006.875,4689.9688 Q1005.7813,4688.5781 1005.7813,4685.5938 Q1005.7813,4683.0625 1006.9453,4681.4063 Q1008.1094,4679.75 1010.0938,4679.75 Q1011.5625,4679.75 1012.0313,4679.875 Q1012.5,4680.0781 1012.5,4680.0781 Q1012.5,4680.0781 1012.5,4680.0078 Q1012.5,4679.9375 1013.1094,4679.0156 L1014.1563,4682.6719 L1012.8281,4683.0781 Q1012.3594,4681.5313 1011.6953,4680.8672 Q1011.0313,4680.2031 1009.9688,4680.2031 Q1009.5781,4680.2031 1008.8125,4681.7344 Q1008.0469,4683.2656 1008.0469,4685.5156 Q1008.0469,4687.9844 1008.7109,4689.375 Q1009.375,4690.7656 1009.9063,4690.7656 Q1010.9688,4690.7656 1011.7266,4690 Q1012.4844,4689.2344 1012.8281,4687.5781 L1014.1563,4688.1719 Q1013.8281,4689.5781 1012.9297,4690.4688 Q1012.0313,4691.3594 1009.8281,4691.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="1031.75" y="4691.5576">RTSPClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="691.5" x2="1403.5" y1="4702" y2="4702"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="710.5" y="4718.606">int verbosityLevel = 0,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="710.5" y="4733.6289">char const* applicationName = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="710.5" y="4748.6519">portNumBits tunnelOverHTTPPortNum = 0,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="710.5" y="4763.6748">Boolean streamOutgoing = False,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="710.5" y="4778.6978">Boolean streamUsingTCP = False,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="710.5" y="4793.7207">Boolean forceMulticastOnUnspecified = False,</text><ellipse cx="701.5" cy="4805.1492" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="710.5" y="4808.7437">double start = 0.0f, double end = -1.0f, float scale = 1.0f,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="710.5" y="4823.7666">double start = 0.0f, double end = -1.0f, float scale = 1.0f,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="710.5" y="4838.7896">char const* absStartTime, char const* absEndTime = NULL, float scale = 1.0f,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="710.5" y="4853.8125">char const* absStartTime, char const* absEndTime = NULL, float scale = 1.0f,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="710.5" y="4868.8354">char const* parameterName, char const* parameterValue,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="710.5" y="4883.8584">char const* sourceName,</text><ellipse cx="701.5" cy="4895.2869" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="710.5" y="4898.8813">static unsigned responseBufferSize;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="710.5" y="4913.9043">char*&amp; cmdURL, Boolean&amp; cmdURLWasAllocated,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="710.5" y="4928.9272">char const*&amp; protocolStr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="710.5" y="4943.9502">char*&amp; serverAddressStr, portNumBits&amp; serverPortNum,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="710.5" y="4958.9731">char const* scaleParamsStr, const char* speedParamsStr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="710.5" y="4973.9961">char const*&amp; prefix,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="710.5" y="4989.019">char const*&amp; separator,</text><ellipse cx="701.5" cy="5000.4475" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="710.5" y="5004.042">u_int16_t desiredMaxIncomingPacketSize;</text><polygon fill="none" points="701.5,5010.4705,705.5,5014.4705,701.5,5018.4705,697.5,5014.4705" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="710.5" y="5019.0649">int fVerbosityLevel;</text><polygon fill="none" points="701.5,5025.4934,705.5,5029.4934,701.5,5033.4934,697.5,5029.4934" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="710.5" y="5034.0879">unsigned fCSeq;</text><polygon fill="none" points="701.5,5040.5164,705.5,5044.5164,701.5,5048.5164,697.5,5044.5164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="710.5" y="5049.1108">Authenticator fCurrentAuthenticator;</text><polygon fill="none" points="701.5,5055.5393,705.5,5059.5393,701.5,5063.5393,697.5,5059.5393" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="710.5" y="5064.1338">Boolean fAllowBasicAuthentication;</text><polygon fill="none" points="701.5,5070.5623,705.5,5074.5623,701.5,5078.5623,697.5,5074.5623" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="710.5" y="5079.1567">netAddressBits fServerAddress;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5087.5852"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="710.5" y="5094.1797">portNumBits fTunnelOverHTTPPortNum;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5102.6082"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="710.5" y="5109.2026">char* fUserAgentHeaderStr;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5117.6311"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="710.5" y="5124.2256">unsigned fUserAgentHeaderStrLen;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5132.6541"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="710.5" y="5139.2485">int fInputSocketNum, fOutputSocketNum;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5147.677"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="710.5" y="5154.2715">char* fBaseURL;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5162.7"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="710.5" y="5169.2944">char* fLastSessionId;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5177.7229"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="410" x="710.5" y="5184.3174">unsigned fSessionTimeoutParameter; // optionally set in response "Session:" headers</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5192.7458"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="710.5" y="5199.3403">char* fResponseBuffer;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5207.7688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="710.5" y="5214.3633">unsigned fResponseBytesAlreadySeen, fResponseBufferBytesLeft;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5222.7917"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="543" x="710.5" y="5229.3862">RequestQueue fRequestsAwaitingConnection, fRequestsAwaitingHTTPTunneling, fRequestsAwaitingResponse;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5237.8147"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="710.5" y="5244.4092">char fSessionCookie[33];</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5252.8376"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="710.5" y="5259.4321">unsigned fSessionCookieCounter;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="5267.8606"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="710.5" y="5274.4551">Boolean fHTTPTunnelingConnectionIsPending;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="691.5" x2="1403.5" y1="5280.8721" y2="5280.8721"/><ellipse cx="701.5" cy="5293.8835" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="710.5" y="5297.478">static RTSPClient* createNew(UsageEnvironment&amp; env, char const* rtspURL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="710.5" y="5312.501">int socketNumToServer = -1);</text><ellipse cx="701.5" cy="5323.9294" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="710.5" y="5327.5239">typedef void(responseHandler)(RTSPClient* rtspClient,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="710.5" y="5342.5469">int resultCode, char* resultString);</text><ellipse cx="701.5" cy="5353.9753" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="710.5" y="5357.5698">unsigned sendDescribeCommand(responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5368.9983" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="518" x="710.5" y="5372.5928">unsigned sendOptionsCommand(responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5384.0212" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="668" x="710.5" y="5387.6157">unsigned sendAnnounceCommand(char const* sdpDescription, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5399.0442" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="483" x="710.5" y="5402.6387">unsigned sendSetupCommand(MediaSubsession&amp; subsession, responseHandler* responseHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="710.5" y="5417.6616">Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5429.0901" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="439" x="710.5" y="5432.6846">unsigned sendPlayCommand(MediaSession&amp; session, responseHandler* responseHandler,</text><ellipse cx="701.5" cy="5444.113" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="710.5" y="5447.7075">Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5459.136" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="710.5" y="5462.7305">unsigned sendPlayCommand(MediaSubsession&amp; subsession, responseHandler* responseHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="710.5" y="5477.7534">Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5489.1819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="439" x="710.5" y="5492.7764">unsigned sendPlayCommand(MediaSession&amp; session, responseHandler* responseHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="710.5" y="5507.7993">Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5519.2278" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="710.5" y="5522.8223">unsigned sendPlayCommand(MediaSubsession&amp; subsession, responseHandler* responseHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="710.5" y="5537.8452">Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5549.2737" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="632" x="710.5" y="5552.8682">unsigned sendPauseCommand(MediaSession&amp; session, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5564.2966" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="668" x="710.5" y="5567.8911">unsigned sendPauseCommand(MediaSubsession&amp; subsession, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5579.3196" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="637" x="710.5" y="5582.9141">unsigned sendRecordCommand(MediaSession&amp; session, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5594.3425" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="673" x="710.5" y="5597.937">unsigned sendRecordCommand(MediaSubsession&amp; subsession, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5609.3655" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="710.5" y="5612.96">unsigned sendTeardownCommand(MediaSession&amp; session, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5624.3884" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="688" x="710.5" y="5627.9829">unsigned sendTeardownCommand(MediaSubsession&amp; subsession, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5639.4114" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="710.5" y="5643.0059">unsigned sendSetParameterCommand(MediaSession&amp; session, responseHandler* responseHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="710.5" y="5658.0288">Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5669.4573" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="626" x="710.5" y="5673.0518">unsigned sendGetParameterCommand(MediaSession&amp; session, responseHandler* responseHandler, char const* parameterName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="710.5" y="5688.0747">Authenticator* authenticator = NULL);</text><ellipse cx="701.5" cy="5699.5032" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="710.5" y="5703.0977">void sendDummyUDPPackets(MediaSession&amp; session, unsigned numDummyPackets = 2);</text><ellipse cx="701.5" cy="5714.5261" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="466" x="710.5" y="5718.1206">void sendDummyUDPPackets(MediaSubsession&amp; subsession, unsigned numDummyPackets = 2);</text><ellipse cx="701.5" cy="5729.5491" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="710.5" y="5733.1436">void setSpeed(MediaSession&amp; session, float speed = 1.0f);</text><ellipse cx="701.5" cy="5744.572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="450" x="710.5" y="5748.1665">Boolean changeResponseHandler(unsigned cseq, responseHandler* newResponseHandler);</text><ellipse cx="701.5" cy="5759.595" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="710.5" y="5763.1895">int socketNum() const { return fInputSocketNum; }</text><ellipse cx="701.5" cy="5774.6179" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="710.5" y="5778.2124">static Boolean lookupByName(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="710.5" y="5793.2354">RTSPClient*&amp; resultClient);</text><ellipse cx="701.5" cy="5804.6638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="710.5" y="5808.2583">static Boolean parseRTSPURL(UsageEnvironment&amp; env, char const* url,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="559" x="710.5" y="5823.2813">char*&amp; username, char*&amp; password, NetAddress&amp; address, portNumBits&amp; portNum, char const** urlSuffix = NULL);</text><ellipse cx="701.5" cy="5834.7097" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="710.5" y="5838.3042">void setUserAgentString(char const* userAgentName);</text><ellipse cx="701.5" cy="5849.7327" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="710.5" y="5853.3271">void disallowBasicAuthentication() { fAllowBasicAuthentication = False; }</text><ellipse cx="701.5" cy="5864.7556" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="710.5" y="5868.3501">unsigned sessionTimeoutParameter() const { return fSessionTimeoutParameter; }</text><ellipse cx="701.5" cy="5879.7786" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="710.5" y="5883.373">char const* url() const { return fBaseURL; }</text><polygon fill="#FFFF44" points="701.5,5889.8015,705.5,5893.8015,701.5,5897.8015,697.5,5893.8015" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="710.5" y="5898.396">RTSPClient(UsageEnvironment&amp; env, char const* rtspURL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="538" x="710.5" y="5913.4189">int verbosityLevel, char const* applicationName, portNumBits tunnelOverHTTPPortNum, int socketNumToServer);</text><polygon fill="#FFFF44" points="701.5,5919.8474,705.5,5923.8474,701.5,5927.8474,697.5,5923.8474" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="710.5" y="5928.4419">virtual ~RTSPClient();</text><polygon fill="#FFFF44" points="701.5,5934.8704,705.5,5938.8704,701.5,5942.8704,697.5,5938.8704" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="710.5" y="5943.4648">void reset();</text><polygon fill="#FFFF44" points="701.5,5949.8933,705.5,5953.8933,701.5,5957.8933,697.5,5953.8933" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="710.5" y="5958.4878">void setBaseURL(char const* url);</text><polygon fill="#FFFF44" points="701.5,5964.9163,705.5,5968.9163,701.5,5972.9163,697.5,5968.9163" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="710.5" y="5973.5107">int grabSocket(); // allows a subclass to reuse our input socket, so that it won't get closed when we're deleted</text><polygon fill="#FFFF44" points="701.5,5979.9392,705.5,5983.9392,701.5,5987.9392,697.5,5983.9392" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="710.5" y="5988.5337">virtual unsigned sendRequest(RequestRecord* request);</text><polygon fill="#FFFF44" points="701.5,5994.9622,705.5,5998.9622,701.5,6002.9622,697.5,5998.9622" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="710.5" y="6003.5566">virtual Boolean setRequestFields(RequestRecord* request,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="710.5" y="6018.5796">char*&amp; extraHeaders, Boolean&amp; extraHeadersWereAllocated);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6027.0081"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="710.5" y="6033.6025">virtual Boolean isRTSPClient() const;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6042.031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="710.5" y="6048.6255">void resetTCPSockets();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6057.054"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="710.5" y="6063.6484">void resetResponseBuffer();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6072.0769"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="710.5" y="6078.6714">int openConnection(); // -1: failure; 0: pending; 1: success</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6087.0999"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="645" x="710.5" y="6093.6943">int connectToServer(int socketNum, portNumBits remotePortNum); // used to implement "openConnection()"; result values are the same</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6102.1228"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="710.5" y="6108.7173">char* createAuthenticatorString(char const* cmd, char const* url);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6117.1458"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="710.5" y="6123.7402">char* createBlocksizeString(Boolean streamUsingTCP);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6132.1687"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="710.5" y="6138.7632">void handleRequestError(RequestRecord* request);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6147.1917"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="710.5" y="6153.7861">Boolean parseResponseCode(char const* line, unsigned&amp; responseCode, char const*&amp; responseString);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6162.2146"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="710.5" y="6168.8091">void handleIncomingRequest();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6177.2375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="710.5" y="6183.832">static Boolean checkForHeader(char const* line, char const* headerName, unsigned headerNameLength, char const*&amp; headerParams);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6192.2605"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="710.5" y="6198.855">Boolean parseTransportParams(char const* paramsStr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="710.5" y="6213.8779">unsigned char&amp; rtpChannelId, unsigned char&amp; rtcpChannelId);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6222.3064"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="710.5" y="6228.9009">Boolean parseScaleParam(char const* paramStr, float&amp; scale);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6237.3293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="710.5" y="6243.9238">Boolean parseSpeedParam(char const* paramStr, float&amp; speed);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6252.3523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="471" x="710.5" y="6258.9468">Boolean parseRTPInfoParams(char const*&amp; paramStr, u_int16_t&amp; seqNum, u_int32_t&amp; timestamp);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6267.3752"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="625" x="710.5" y="6273.9697">Boolean handleSETUPResponse(MediaSubsession&amp; subsession, char const* sessionParamsStr, char const* transportParamsStr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="710.5" y="6288.9927">Boolean streamUsingTCP);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6297.4211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="710.5" y="6304.0156">Boolean handlePLAYResponse(MediaSession&amp; session, MediaSubsession&amp; subsession,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="710.5" y="6319.0386">char const* rangeParamsStr, char const* rtpInfoParamsStr);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6327.467"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="710.5" y="6334.0615">Boolean handleTEARDOWNResponse(MediaSession&amp; session, MediaSubsession&amp; subsession);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6342.49"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482" x="710.5" y="6349.0845">Boolean handleGET_PARAMETERResponse(char const* parameterName, char*&amp; resultValueString);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6357.5129"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="710.5" y="6364.1074">Boolean handleAuthenticationFailure(char const* wwwAuthenticateParamsStr);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6372.5359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="710.5" y="6379.1304">Boolean resendCommand(RequestRecord* request);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6387.5588"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="710.5" y="6394.1533">char const* sessionURL(MediaSession const&amp; session) const;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6402.5818"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="710.5" y="6409.1763">static void handleAlternativeRequestByte(void*, u_int8_t requestByte);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6417.6047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="710.5" y="6424.1992">void handleAlternativeRequestByte1(u_int8_t requestByte);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6432.6277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="710.5" y="6439.2222">void constructSubsessionURL(MediaSubsession const&amp; subsession,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="710.5" y="6454.2451">char const*&amp; suffix);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6462.6736"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="710.5" y="6469.2681">Boolean setupHTTPTunneling1(); // send the HTTP "GET"</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6477.6965"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="710.5" y="6484.291">static void responseHandlerForHTTP_GET(RTSPClient* rtspClient, int responseCode, char* responseString);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6492.7195"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="710.5" y="6499.314">void responseHandlerForHTTP_GET1(int responseCode, char* responseString);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6507.7424"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="710.5" y="6514.3369">Boolean setupHTTPTunneling2(); // send the HTTP "POST"</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6522.7654"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="710.5" y="6529.3599">static void connectionHandler(void*, int /*mask*/);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6537.7883"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="710.5" y="6544.3828">void connectionHandler1();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6552.8113"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="710.5" y="6559.4058">static void incomingDataHandler(void*, int /*mask*/);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6567.8342"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="710.5" y="6574.4287">void incomingDataHandler1();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6582.8572"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="710.5" y="6589.4517">void handleResponseBytes(int newBytesRead);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="698.5" y="6597.8801"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="710.5" y="6604.4746">unsigned char fTCPStreamIdCount; // used for (optional) RTP/TCP</text><!--class RequestRecord_REGISTER--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="198.2295" id="RequestRecord_REGISTER" style="stroke: #A80036; stroke-width: 1.5;" width="649" x="6" y="5541.5"/><ellipse cx="248.75" cy="5557.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M247.3281,5562.8594 Q245.4688,5562.8594 244.375,5561.4688 Q243.2813,5560.0781 243.2813,5557.0938 Q243.2813,5554.5625 244.4453,5552.9063 Q245.6094,5551.25 247.5938,5551.25 Q249.0625,5551.25 249.5313,5551.375 Q250,5551.5781 250,5551.5781 Q250,5551.5781 250,5551.5078 Q250,5551.4375 250.6094,5550.5156 L251.6563,5554.1719 L250.3281,5554.5781 Q249.8594,5553.0313 249.1953,5552.3672 Q248.5313,5551.7031 247.4688,5551.7031 Q247.0781,5551.7031 246.3125,5553.2344 Q245.5469,5554.7656 245.5469,5557.0156 Q245.5469,5559.4844 246.2109,5560.875 Q246.875,5562.2656 247.4063,5562.2656 Q248.4688,5562.2656 249.2266,5561.5 Q249.9844,5560.7344 250.3281,5559.0781 L251.6563,5559.6719 Q251.3281,5561.0781 250.4297,5561.9688 Q249.5313,5562.8594 247.3281,5562.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="155" x="269.25" y="5563.0576">RequestRecord_REGISTER</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="654" y1="5573.5" y2="5573.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="5583.5115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="26" y="5590.106">char* fRTSPURLToRegister;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="5598.5344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="26" y="5605.1289">Boolean fReuseConnection, fRequestStreamingViaTCP;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="5613.5574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="26" y="5620.1519">char* fProxyURLSuffix;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="654" y1="5626.5688" y2="5626.5688"/><ellipse cx="17" cy="5639.5803" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="623" x="26" y="5643.1748">RequestRecord_REGISTER(unsigned cseq, RTSPClient::responseHandler* rtspResponseHandler, char const* rtspURLToRegister,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="26" y="5658.1978">Boolean reuseConnection, Boolean requestStreamingViaTCP, char const* proxyURLSuffix);</text><ellipse cx="17" cy="5669.6262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="26" y="5673.2207">virtual ~RequestRecord_REGISTER();</text><ellipse cx="17" cy="5684.6492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="26" y="5688.2437">char const* rtspURLToRegister() const { return fRTSPURLToRegister; }</text><ellipse cx="17" cy="5699.6721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="26" y="5703.2666">Boolean reuseConnection() const { return fReuseConnection; }</text><ellipse cx="17" cy="5714.6951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379" x="26" y="5718.2896">Boolean requestStreamingViaTCP() const { return fRequestStreamingViaTCP; }</text><ellipse cx="17" cy="5729.718" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="26" y="5733.3125">char const* proxyURLSuffix() const { return fProxyURLSuffix; }</text><!--class RequestRecord--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="513.7114" id="RequestRecord" style="stroke: #A80036; stroke-width: 1.5;" width="506" x="224.5" y="6671"/><ellipse cx="429.75" cy="6687" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M428.3281,6692.3594 Q426.4688,6692.3594 425.375,6690.9688 Q424.2813,6689.5781 424.2813,6686.5938 Q424.2813,6684.0625 425.4453,6682.4063 Q426.6094,6680.75 428.5938,6680.75 Q430.0625,6680.75 430.5313,6680.875 Q431,6681.0781 431,6681.0781 Q431,6681.0781 431,6681.0078 Q431,6680.9375 431.6094,6680.0156 L432.6563,6683.6719 L431.3281,6684.0781 Q430.8594,6682.5313 430.1953,6681.8672 Q429.5313,6681.2031 428.4688,6681.2031 Q428.0781,6681.2031 427.3125,6682.7344 Q426.5469,6684.2656 426.5469,6686.5156 Q426.5469,6688.9844 427.2109,6690.375 Q427.875,6691.7656 428.4063,6691.7656 Q429.4688,6691.7656 430.2266,6691 Q430.9844,6690.2344 431.3281,6688.5781 L432.6563,6689.1719 Q432.3281,6690.5781 431.4297,6691.4688 Q430.5313,6692.3594 428.3281,6692.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="450.25" y="6692.5576">RequestRecord</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="225.5" x2="729.5" y1="6703" y2="6703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="480" x="244.5" y="6719.606">MediaSession* session = NULL, MediaSubsession* subsession = NULL, u_int32_t booleanFlags = 0,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="244.5" y="6734.6289">char const* absStartTime, char const* absEndTime = NULL, float scale = 1.0f,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="232.5" y="6743.0574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="244.5" y="6749.6519">RequestRecord* fNext;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="232.5" y="6758.0803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="244.5" y="6764.6748">unsigned fCSeq;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="232.5" y="6773.1033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="244.5" y="6779.6978">char const* fCommandName;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="232.5" y="6788.1262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="244.5" y="6794.7207">MediaSession* fSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="232.5" y="6803.1492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="244.5" y="6809.7437">MediaSubsession* fSubsession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="232.5" y="6818.1721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="244.5" y="6824.7666">u_int32_t fBooleanFlags;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="232.5" y="6833.1951"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="244.5" y="6839.7896">double fStart, fEnd;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="232.5" y="6848.218"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="244.5" y="6854.8125">char *fAbsStartTime, *fAbsEndTime;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="232.5" y="6863.241"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="244.5" y="6869.8354">float fScale;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="232.5" y="6878.2639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="244.5" y="6884.8584">char* fContentStr;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="232.5" y="6893.2869"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="244.5" y="6899.8813">responseHandler* fHandler;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="225.5" x2="729.5" y1="6906.2983" y2="6906.2983"/><ellipse cx="235.5" cy="6919.3098" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="423" x="244.5" y="6922.9043">RequestRecord(unsigned cseq, char const* commandName, responseHandler* handler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="429" x="244.5" y="6937.9272">double start = 0.0f, double end = -1.0f, float scale = 1.0f, char const* contentStr = NULL);</text><ellipse cx="235.5" cy="6949.3557" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="244.5" y="6952.9502">RequestRecord(unsigned cseq, responseHandler* handler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="244.5" y="6967.9731">MediaSession* session = NULL, MediaSubsession* subsession = NULL);</text><ellipse cx="235.5" cy="6979.4016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="244.5" y="6982.9961">virtual ~RequestRecord();</text><ellipse cx="235.5" cy="6994.4246" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="244.5" y="6998.019">RequestRecord*&amp; next() { return fNext; }</text><ellipse cx="235.5" cy="7009.4475" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="244.5" y="7013.042">unsigned&amp; cseq() { return fCSeq; }</text><ellipse cx="235.5" cy="7024.4705" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="244.5" y="7028.0649">char const* commandName() const { return fCommandName; }</text><ellipse cx="235.5" cy="7039.4934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="244.5" y="7043.0879">MediaSession* session() const { return fSession; }</text><ellipse cx="235.5" cy="7054.5164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="244.5" y="7058.1108">MediaSubsession* subsession() const { return fSubsession; }</text><ellipse cx="235.5" cy="7069.5393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="244.5" y="7073.1338">u_int32_t booleanFlags() const { return fBooleanFlags; }</text><ellipse cx="235.5" cy="7084.5623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="244.5" y="7088.1567">double start() const { return fStart; }</text><ellipse cx="235.5" cy="7099.5852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="244.5" y="7103.1797">double end() const { return fEnd; }</text><ellipse cx="235.5" cy="7114.6082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="244.5" y="7118.2026">char const* absStartTime() const { return fAbsStartTime; }</text><ellipse cx="235.5" cy="7129.6311" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="244.5" y="7133.2256">char const* absEndTime() const { return fAbsEndTime; }</text><ellipse cx="235.5" cy="7144.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="244.5" y="7148.2485">float scale() const { return fScale; }</text><ellipse cx="235.5" cy="7159.677" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="244.5" y="7163.2715">char* contentStr() const { return fContentStr; }</text><ellipse cx="235.5" cy="7174.7" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="244.5" y="7178.2944">responseHandler*&amp; handler() { return fHandler; }</text><!--class RTSPServerWithREGISTERProxying--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="393.5278" id="RTSPServerWithREGISTERProxying" style="stroke: #A80036; stroke-width: 1.5;" width="524" x="930.5" y="1173"/><ellipse cx="1089.25" cy="1189" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1087.8281,1194.3594 Q1085.9688,1194.3594 1084.875,1192.9688 Q1083.7813,1191.5781 1083.7813,1188.5938 Q1083.7813,1186.0625 1084.9453,1184.4063 Q1086.1094,1182.75 1088.0938,1182.75 Q1089.5625,1182.75 1090.0313,1182.875 Q1090.5,1183.0781 1090.5,1183.0781 Q1090.5,1183.0781 1090.5,1183.0078 Q1090.5,1182.9375 1091.1094,1182.0156 L1092.1563,1185.6719 L1090.8281,1186.0781 Q1090.3594,1184.5313 1089.6953,1183.8672 Q1089.0313,1183.2031 1087.9688,1183.2031 Q1087.5781,1183.2031 1086.8125,1184.7344 Q1086.0469,1186.2656 1086.0469,1188.5156 Q1086.0469,1190.9844 1086.7109,1192.375 Q1087.375,1193.7656 1087.9063,1193.7656 Q1088.9688,1193.7656 1089.7266,1193 Q1090.4844,1192.2344 1090.8281,1190.5781 L1092.1563,1191.1719 Q1091.8281,1192.5781 1090.9297,1193.4688 Q1090.0313,1194.3594 1087.8281,1194.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="1109.75" y="1194.5576">RTSPServerWithREGISTERProxying</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="931.5" x2="1453.5" y1="1205" y2="1205"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="950.5" y="1221.606">UserAuthenticationDatabase* authDatabase = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="950.5" y="1236.6289">UserAuthenticationDatabase* authDatabaseForREGISTER = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="950.5" y="1251.6519">unsigned reclamationTestSeconds = 65,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="950.5" y="1266.6748">Boolean streamRTPOverTCP = False,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="953.5" y="1281.6978"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="498" x="950.5" y="1296.7207">UserAuthenticationDatabase* authDatabase, UserAuthenticationDatabase* authDatabaseForREGISTER,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="950.5" y="1311.7437">unsigned reclamationTestSeconds,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="938.5" y="1320.1721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="950.5" y="1326.7666">Boolean fStreamRTPOverTCP;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="938.5" y="1335.1951"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="950.5" y="1341.7896">int fVerbosityLevelForProxying;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="938.5" y="1350.218"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="950.5" y="1356.8125">unsigned fRegisteredProxyCounter;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="938.5" y="1365.241"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="950.5" y="1371.8354">char* fAllowedCommandNames;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="938.5" y="1380.2639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="950.5" y="1386.8584">UserAuthenticationDatabase* fAuthDBForREGISTER;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="931.5" x2="1453.5" y1="1393.2754" y2="1393.2754"/><ellipse cx="941.5" cy="1406.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="479" x="950.5" y="1409.8813">static RTSPServerWithREGISTERProxying* createNew(UsageEnvironment&amp; env, Port ourPort = 554,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="950.5" y="1424.9043">int verbosityLevelForProxying = 0);</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="953.5" y="1439.9272"/><polygon fill="#FFFF44" points="941.5,1446.3557,945.5,1450.3557,941.5,1454.3557,937.5,1450.3557" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="428" x="950.5" y="1454.9502">RTSPServerWithREGISTERProxying(UsageEnvironment&amp; env, int ourSocket, Port ourPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="950.5" y="1469.9731">Boolean streamRTPOverTCP, int verbosityLevelForProxying);</text><polygon fill="#FFFF44" points="941.5,1476.4016,945.5,1480.4016,941.5,1484.4016,937.5,1480.4016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="950.5" y="1484.9961">virtual ~RTSPServerWithREGISTERProxying();</text><polygon fill="#FFFF44" points="941.5,1491.4246,945.5,1495.4246,941.5,1499.4246,937.5,1495.4246" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="950.5" y="1500.019">virtual char const* allowedCommandNames();</text><polygon fill="#FFFF44" points="941.5,1506.4475,945.5,1510.4475,941.5,1514.4475,937.5,1510.4475" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="950.5" y="1515.042">virtual Boolean weImplementREGISTER(char const* proxyURLSuffix, char*&amp; responseStr);</text><polygon fill="#FFFF44" points="941.5,1521.4705,945.5,1525.4705,941.5,1529.4705,937.5,1525.4705" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="950.5" y="1530.0649">virtual void implementCmd_REGISTER(char const* url, char const* urlSuffix, int socketToRemoteServer,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="950.5" y="1545.0879">Boolean deliverViaTCP, char const* proxyURLSuffix);</text><polygon fill="#FFFF44" points="941.5,1551.5164,945.5,1555.5164,941.5,1559.5164,937.5,1555.5164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="487" x="950.5" y="1560.1108">virtual UserAuthenticationDatabase* getAuthenticationDatabaseForCommand(char const* cmdName);</text><!--class ParamsForREGISTER--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="183.2065" id="ParamsForREGISTER" style="stroke: #A80036; stroke-width: 1.5;" width="500" x="2607.5" y="2137.5"/><ellipse cx="2791.75" cy="2153.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2790.3281,2158.8594 Q2788.4688,2158.8594 2787.375,2157.4688 Q2786.2813,2156.0781 2786.2813,2153.0938 Q2786.2813,2150.5625 2787.4453,2148.9063 Q2788.6094,2147.25 2790.5938,2147.25 Q2792.0625,2147.25 2792.5313,2147.375 Q2793,2147.5781 2793,2147.5781 Q2793,2147.5781 2793,2147.5078 Q2793,2147.4375 2793.6094,2146.5156 L2794.6563,2150.1719 L2793.3281,2150.5781 Q2792.8594,2149.0313 2792.1953,2148.3672 Q2791.5313,2147.7031 2790.4688,2147.7031 Q2790.0781,2147.7031 2789.3125,2149.2344 Q2788.5469,2150.7656 2788.5469,2153.0156 Q2788.5469,2155.4844 2789.2109,2156.875 Q2789.875,2158.2656 2790.4063,2158.2656 Q2791.4688,2158.2656 2792.2266,2157.5 Q2792.9844,2156.7344 2793.3281,2155.0781 L2794.6563,2155.6719 Q2794.3281,2157.0781 2793.4297,2157.9688 Q2792.5313,2158.8594 2790.3281,2158.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="123" x="2812.25" y="2159.0576">ParamsForREGISTER</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2608.5" x2="3106.5" y1="2169.5" y2="2169.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2615.5" y="2179.5115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2627.5" y="2186.106">friend class RTSPClientConnection;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2615.5" y="2194.5344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2627.5" y="2201.1289">RTSPClientConnection* fOurConnection;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2615.5" y="2209.5574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="2627.5" y="2216.1519">char* fURL;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2615.5" y="2224.5803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="2627.5" y="2231.1748">char* fURLSuffix;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2615.5" y="2239.6033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="2627.5" y="2246.1978">Boolean fReuseConnection, fDeliverViaTCP;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2615.5" y="2254.6262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="2627.5" y="2261.2207">char* fProxyURLSuffix;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2608.5" x2="3106.5" y1="2267.6377" y2="2267.6377"/><ellipse cx="2618.5" cy="2280.6492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="474" x="2627.5" y="2284.2437">ParamsForREGISTER(RTSPClientConnection* ourConnection, char const* url, char const* urlSuffix,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="2627.5" y="2299.2666">Boolean reuseConnection, Boolean deliverViaTCP, char const* proxyURLSuffix);</text><ellipse cx="2618.5" cy="2310.6951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2627.5" y="2314.2896">virtual ~ParamsForREGISTER();</text><!--class streamState--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="93.0688" id="streamState" style="stroke: #A80036; stroke-width: 1.5;" width="196" x="1831.5" y="4164"/><ellipse cx="1891.75" cy="4180" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1890.3281,4185.3594 Q1888.4688,4185.3594 1887.375,4183.9688 Q1886.2813,4182.5781 1886.2813,4179.5938 Q1886.2813,4177.0625 1887.4453,4175.4063 Q1888.6094,4173.75 1890.5938,4173.75 Q1892.0625,4173.75 1892.5313,4173.875 Q1893,4174.0781 1893,4174.0781 Q1893,4174.0781 1893,4174.0078 Q1893,4173.9375 1893.6094,4173.0156 L1894.6563,4176.6719 L1893.3281,4177.0781 Q1892.8594,4175.5313 1892.1953,4174.8672 Q1891.5313,4174.2031 1890.4688,4174.2031 Q1890.0781,4174.2031 1889.3125,4175.7344 Q1888.5469,4177.2656 1888.5469,4179.5156 Q1888.5469,4181.9844 1889.2109,4183.375 Q1889.875,4184.7656 1890.4063,4184.7656 Q1891.4688,4184.7656 1892.2266,4184 Q1892.9844,4183.2344 1893.3281,4181.5781 L1894.6563,4182.1719 Q1894.3281,4183.5781 1893.4297,4184.4688 Q1892.5313,4185.3594 1890.3281,4185.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="1912.25" y="4185.5576">streamState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1832.5" x2="2026.5" y1="4196" y2="4196"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="1837.5" y="4212.606">ServerMediaSubsession* subsession;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="1837.5" y="4227.6289">int tcpSocketNum;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="1837.5" y="4242.6519">void* streamToken;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1832.5" x2="2026.5" y1="4249.0688" y2="4249.0688"/><!--class RTSPServerSupportingHTTPStreaming--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="198.2295" id="RTSPServerSupportingHTTPStreaming" style="stroke: #A80036; stroke-width: 1.5;" width="536" x="2131.5" y="236"/><ellipse cx="2287.75" cy="252" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2286.3281,257.3594 Q2284.4688,257.3594 2283.375,255.9688 Q2282.2813,254.5781 2282.2813,251.5938 Q2282.2813,249.0625 2283.4453,247.4063 Q2284.6094,245.75 2286.5938,245.75 Q2288.0625,245.75 2288.5313,245.875 Q2289,246.0781 2289,246.0781 Q2289,246.0781 2289,246.0078 Q2289,245.9375 2289.6094,245.0156 L2290.6563,248.6719 L2289.3281,249.0781 Q2288.8594,247.5313 2288.1953,246.8672 Q2287.5313,246.2031 2286.4688,246.2031 Q2286.0781,246.2031 2285.3125,247.7344 Q2284.5469,249.2656 2284.5469,251.5156 Q2284.5469,253.9844 2285.2109,255.375 Q2285.875,256.7656 2286.4063,256.7656 Q2287.4688,256.7656 2288.2266,256 Q2288.9844,255.2344 2289.3281,253.5781 L2290.6563,254.1719 Q2290.3281,255.5781 2289.4297,256.4688 Q2288.5313,257.3594 2286.3281,257.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="215" x="2308.25" y="257.5576">RTSPServerSupportingHTTPStreaming</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2132.5" x2="2666.5" y1="268" y2="268"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="2137.5" y="284.606">UserAuthenticationDatabase* authDatabase = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2137.5" y="299.6289">int ourSocket, Port ourPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2137.5" y="314.6519">UserAuthenticationDatabase* authDatabase,</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2132.5" x2="2666.5" y1="321.0688" y2="321.0688"/><ellipse cx="2142.5" cy="334.0803" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="2151.5" y="337.6748">static RTSPServerSupportingHTTPStreaming* createNew(UsageEnvironment&amp; env, Port rtspPort = 554,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2151.5" y="352.6978">unsigned reclamationTestSeconds = 65);</text><ellipse cx="2142.5" cy="364.1262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="2151.5" y="367.7207">Boolean setHTTPPort(Port httpPort) { return setUpTunnelingOverHTTP(httpPort); }</text><polygon fill="#FFFF44" points="2142.5,374.1492,2146.5,378.1492,2142.5,382.1492,2138.5,378.1492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="2151.5" y="382.7437">RTSPServerSupportingHTTPStreaming(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="2151.5" y="397.7666">unsigned reclamationTestSeconds);</text><polygon fill="#FFFF44" points="2142.5,404.1951,2146.5,408.1951,2142.5,412.1951,2138.5,408.1951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="2151.5" y="412.7896">virtual ~RTSPServerSupportingHTTPStreaming();</text><polygon fill="#FFFF44" points="2142.5,419.218,2146.5,423.218,2142.5,427.218,2138.5,423.218" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="510" x="2151.5" y="427.8125">virtual RTSPClientConnection* createNewClientConnection(int clientSocket, struct sockaddr_in clientAddr);</text><!--class RTSPClientConnectionSupportingHTTPStreaming--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="168.1836" id="RTSPClientConnectionSupportingHTTPStreaming" style="stroke: #A80036; stroke-width: 1.5;" width="612" x="2281.5" y="629.5"/><ellipse cx="2445.75" cy="645.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2444.3281,650.8594 Q2442.4688,650.8594 2441.375,649.4688 Q2440.2813,648.0781 2440.2813,645.0938 Q2440.2813,642.5625 2441.4453,640.9063 Q2442.6094,639.25 2444.5938,639.25 Q2446.0625,639.25 2446.5313,639.375 Q2447,639.5781 2447,639.5781 Q2447,639.5781 2447,639.5078 Q2447,639.4375 2447.6094,638.5156 L2448.6563,642.1719 L2447.3281,642.5781 Q2446.8594,641.0313 2446.1953,640.3672 Q2445.5313,639.7031 2444.4688,639.7031 Q2444.0781,639.7031 2443.3125,641.2344 Q2442.5469,642.7656 2442.5469,645.0156 Q2442.5469,647.4844 2443.2109,648.875 Q2443.875,650.2656 2444.4063,650.2656 Q2445.4688,650.2656 2446.2266,649.5 Q2446.9844,648.7344 2447.3281,647.0781 L2448.6563,647.6719 Q2448.3281,649.0781 2447.4297,649.9688 Q2446.5313,650.8594 2444.3281,650.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="275" x="2466.25" y="651.0576">RTSPClientConnectionSupportingHTTPStreaming</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2282.5" x2="2892.5" y1="661.5" y2="661.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2289.5" y="671.5115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="2301.5" y="678.106">u_int32_t fClientSessionId;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2289.5" y="686.5344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="2301.5" y="693.1289">FramedSource* fStreamSource;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2289.5" y="701.5574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="2301.5" y="708.1519">ByteStreamMemoryBufferSource* fPlaylistSource;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2289.5" y="716.5803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2301.5" y="723.1748">TCPStreamSink* fTCPSink;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2282.5" x2="2892.5" y1="729.5918" y2="729.5918"/><ellipse cx="2292.5" cy="742.6033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="586" x="2301.5" y="746.1978">RTSPClientConnectionSupportingHTTPStreaming(RTSPServer&amp; ourServer, int clientSocket, struct sockaddr_in clientAddr);</text><ellipse cx="2292.5" cy="757.6262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="2301.5" y="761.2207">virtual ~RTSPClientConnectionSupportingHTTPStreaming();</text><polygon fill="#FFFF44" points="2292.5,767.6492,2296.5,771.6492,2292.5,775.6492,2288.5,771.6492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="2301.5" y="776.2437">virtual void handleHTTPCmd_StreamingGET(char const* urlSuffix, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="2292.5,782.6721,2296.5,786.6721,2292.5,790.6721,2288.5,786.6721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2301.5" y="791.2666">static void afterStreaming(void* clientData);</text><!--class DynamicRTSPServer--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="168.1836" id="DynamicRTSPServer" style="stroke: #A80036; stroke-width: 1.5;" width="446" x="2176.5" y="8"/><ellipse cx="2337.75" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2336.3281,29.3594 Q2334.4688,29.3594 2333.375,27.9688 Q2332.2813,26.5781 2332.2813,23.5938 Q2332.2813,21.0625 2333.4453,19.4063 Q2334.6094,17.75 2336.5938,17.75 Q2338.0625,17.75 2338.5313,17.875 Q2339,18.0781 2339,18.0781 Q2339,18.0781 2339,18.0078 Q2339,17.9375 2339.6094,17.0156 L2340.6563,20.6719 L2339.3281,21.0781 Q2338.8594,19.5313 2338.1953,18.8672 Q2337.5313,18.2031 2336.4688,18.2031 Q2336.0781,18.2031 2335.3125,19.7344 Q2334.5469,21.2656 2334.5469,23.5156 Q2334.5469,25.9844 2335.2109,27.375 Q2335.875,28.7656 2336.4063,28.7656 Q2337.4688,28.7656 2338.2266,28 Q2338.9844,27.2344 2339.3281,25.5781 L2340.6563,26.1719 Q2340.3281,27.5781 2339.4297,28.4688 Q2338.5313,29.3594 2336.3281,29.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="2358.25" y="29.5576">DynamicRTSPServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2177.5" x2="2621.5" y1="40" y2="40"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2196.5" y="56.606">UserAuthenticationDatabase* authDatabase,</text><polygon fill="none" points="2187.5,63.0344,2191.5,67.0344,2187.5,71.0344,2183.5,67.0344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2196.5" y="71.6289">virtual ServerMediaSession*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2177.5" x2="2621.5" y1="78.0459" y2="78.0459"/><ellipse cx="2187.5" cy="91.0574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="2196.5" y="94.6519">static DynamicRTSPServer* createNew(UsageEnvironment&amp; env, Port ourPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2196.5" y="109.6748">unsigned reclamationTestSeconds = 65);</text><polygon fill="#FFFF44" points="2187.5,116.1033,2191.5,120.1033,2187.5,124.1033,2183.5,120.1033" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="2196.5" y="124.6978">DynamicRTSPServer(UsageEnvironment&amp; env, int ourSocket, Port ourPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="2196.5" y="139.7207">UserAuthenticationDatabase* authDatabase, unsigned reclamationTestSeconds);</text><polygon fill="#FFFF44" points="2187.5,146.1492,2191.5,150.1492,2187.5,154.1492,2183.5,150.1492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="2196.5" y="154.7437">virtual ~DynamicRTSPServer();</text><polygon fill="#FFFF44" points="2187.5,161.1721,2191.5,165.1721,2187.5,169.1721,2183.5,165.1721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="2196.5" y="169.7666">lookupServerMediaSession(char const* streamName, Boolean isFirstLookupInSession);</text><!--class RequestQueue--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="198.2295" id="RequestQueue" style="stroke: #A80036; stroke-width: 1.5;" width="268" x="913.5" y="6829"/><ellipse cx="1001.25" cy="6845" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M999.8281,6850.3594 Q997.9688,6850.3594 996.875,6848.9688 Q995.7813,6847.5781 995.7813,6844.5938 Q995.7813,6842.0625 996.9453,6840.4063 Q998.1094,6838.75 1000.0938,6838.75 Q1001.5625,6838.75 1002.0313,6838.875 Q1002.5,6839.0781 1002.5,6839.0781 Q1002.5,6839.0781 1002.5,6839.0078 Q1002.5,6838.9375 1003.1094,6838.0156 L1004.1563,6841.6719 L1002.8281,6842.0781 Q1002.3594,6840.5313 1001.6953,6839.8672 Q1001.0313,6839.2031 999.9688,6839.2031 Q999.5781,6839.2031 998.8125,6840.7344 Q998.0469,6842.2656 998.0469,6844.5156 Q998.0469,6846.9844 998.7109,6848.375 Q999.375,6849.7656 999.9063,6849.7656 Q1000.9688,6849.7656 1001.7266,6849 Q1002.4844,6848.2344 1002.8281,6846.5781 L1004.1563,6847.1719 Q1003.8281,6848.5781 1002.9297,6849.4688 Q1002.0313,6850.3594 999.8281,6850.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="1021.75" y="6850.5576">RequestQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="914.5" x2="1180.5" y1="6861" y2="6861"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="921.5" y="6871.0115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="933.5" y="6877.606">RequestRecord* fHead;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="921.5" y="6886.0344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="933.5" y="6892.6289">RequestRecord* fTail;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="914.5" x2="1180.5" y1="6899.0459" y2="6899.0459"/><ellipse cx="924.5" cy="6912.0574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="933.5" y="6915.6519">RequestQueue();</text><ellipse cx="924.5" cy="6927.0803" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="933.5" y="6930.6748">RequestQueue(RequestQueue&amp; origQueue);</text><ellipse cx="924.5" cy="6942.1033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="933.5" y="6945.6978">virtual ~RequestQueue();</text><ellipse cx="924.5" cy="6957.1262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="933.5" y="6960.7207">void enqueue(RequestRecord* request);</text><ellipse cx="924.5" cy="6972.1492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="933.5" y="6975.7437">RequestRecord* dequeue();</text><ellipse cx="924.5" cy="6987.1721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="933.5" y="6990.7666">void putAtHead(RequestRecord* request);</text><ellipse cx="924.5" cy="7002.1951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="933.5" y="7005.7896">RequestRecord* findByCSeq(unsigned cseq);</text><ellipse cx="924.5" cy="7017.218" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="933.5" y="7020.8125">Boolean isEmpty() const { return fHead == NULL; }</text><!--class HandlerServerForREGISTERCommand--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="273.3442" id="HandlerServerForREGISTERCommand" style="stroke: #A80036; stroke-width: 1.5;" width="669" x="1490" y="1233.5"/><ellipse cx="1711.75" cy="1249.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1710.3281,1254.8594 Q1708.4688,1254.8594 1707.375,1253.4688 Q1706.2813,1252.0781 1706.2813,1249.0938 Q1706.2813,1246.5625 1707.4453,1244.9063 Q1708.6094,1243.25 1710.5938,1243.25 Q1712.0625,1243.25 1712.5313,1243.375 Q1713,1243.5781 1713,1243.5781 Q1713,1243.5781 1713,1243.5078 Q1713,1243.4375 1713.6094,1242.5156 L1714.6563,1246.1719 L1713.3281,1246.5781 Q1712.8594,1245.0313 1712.1953,1244.3672 Q1711.5313,1243.7031 1710.4688,1243.7031 Q1710.0781,1243.7031 1709.3125,1245.2344 Q1708.5469,1246.7656 1708.5469,1249.0156 Q1708.5469,1251.4844 1709.2109,1252.875 Q1709.875,1254.2656 1710.4063,1254.2656 Q1711.4688,1254.2656 1712.2266,1253.5 Q1712.9844,1252.7344 1713.3281,1251.0781 L1714.6563,1251.6719 Q1714.3281,1253.0781 1713.4297,1253.9688 Q1712.5313,1254.8594 1710.3281,1254.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="217" x="1732.25" y="1255.0576">HandlerServerForREGISTERCommand</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1491" x2="2158" y1="1265.5" y2="1265.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="1510" y="1282.106">Port ourPort = 0, UserAuthenticationDatabase* authDatabase = NULL,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1498" y="1290.5344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1510" y="1297.1289">onRTSPClientCreationFunc* fCreationFunc;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1498" y="1305.5574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1510" y="1312.1519">int fVerbosityLevel;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1498" y="1320.5803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1510" y="1327.1748">char* fApplicationName;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1491" x2="2158" y1="1333.5918" y2="1333.5918"/><ellipse cx="1501" cy="1346.6033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="601" x="1510" y="1350.1978">static HandlerServerForREGISTERCommand* createNew(UsageEnvironment&amp; env, onRTSPClientCreationFunc* creationFunc,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="1510" y="1365.2207">int verbosityLevel = 0, char const* applicationName = NULL);</text><polygon fill="#FFFF44" points="1501,1371.6492,1505,1375.6492,1501,1379.6492,1497,1375.6492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="643" x="1510" y="1380.2437">HandlerServerForREGISTERCommand(UsageEnvironment&amp; env, onRTSPClientCreationFunc* creationFunc, int ourSocket, Port ourPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="453" x="1510" y="1395.2666">UserAuthenticationDatabase* authDatabase, int verbosityLevel, char const* applicationName);</text><polygon fill="#FFFF44" points="1501,1401.6951,1505,1405.6951,1501,1409.6951,1497,1405.6951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="1510" y="1410.2896">virtual ~HandlerServerForREGISTERCommand();</text><polygon fill="#FFFF44" points="1501,1416.718,1505,1420.718,1501,1424.718,1497,1420.718" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="536" x="1510" y="1425.3125">virtual RTSPClient* createNewRTSPClient(char const* rtspURL, int verbosityLevel, char const* applicationName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1510" y="1440.3354">int socketNumToServer);</text><polygon fill="#FFFF44" points="1501,1446.7639,1505,1450.7639,1501,1454.7639,1497,1450.7639" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="1510" y="1455.3584">virtual char const* allowedCommandNames(); // we support "OPTIONS" and "REGISTER" only</text><polygon fill="#FFFF44" points="1501,1461.7869,1505,1465.7869,1501,1469.7869,1497,1465.7869" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="562" x="1510" y="1470.3813">virtual Boolean weImplementREGISTER(char const* proxyURLSuffix, char*&amp; responseStr); // redefined to return True</text><polygon fill="#FFFF44" points="1501,1476.8098,1505,1480.8098,1501,1484.8098,1497,1480.8098" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="1510" y="1485.4043">virtual void implementCmd_REGISTER(char const* url, char const* urlSuffix, int socketToRemoteServer,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="1510" y="1500.4272">Boolean deliverViaTCP, char const* proxyURLSuffix);</text><!--class ProxyRTSPClient--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="438.5967" id="ProxyRTSPClient" style="stroke: #A80036; stroke-width: 1.5;" width="500" x="3987.5" y="494"/><ellipse cx="4186.75" cy="510" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4185.3281,515.3594 Q4183.4688,515.3594 4182.375,513.9688 Q4181.2813,512.5781 4181.2813,509.5938 Q4181.2813,507.0625 4182.4453,505.4063 Q4183.6094,503.75 4185.5938,503.75 Q4187.0625,503.75 4187.5313,503.875 Q4188,504.0781 4188,504.0781 Q4188,504.0781 4188,504.0078 Q4188,503.9375 4188.6094,503.0156 L4189.6563,506.6719 L4188.3281,507.0781 Q4187.8594,505.5313 4187.1953,504.8672 Q4186.5313,504.2031 4185.4688,504.2031 Q4185.0781,504.2031 4184.3125,505.7344 Q4183.5469,507.2656 4183.5469,509.5156 Q4183.5469,511.9844 4184.2109,513.375 Q4184.875,514.7656 4185.4063,514.7656 Q4186.4688,514.7656 4187.2266,514 Q4187.9844,513.2344 4188.3281,511.5781 L4189.6563,512.1719 Q4189.3281,513.5781 4188.4297,514.4688 Q4187.5313,515.3594 4185.3281,515.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="4207.25" y="515.5576">ProxyRTSPClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3988.5" x2="4486.5" y1="526" y2="526"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="4007.5" y="542.606">char const* username, char const* password,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="551.0344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="4007.5" y="557.6289">friend class ProxyServerMediaSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="566.0574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4007.5" y="572.6519">friend class ProxyServerMediaSubsession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="581.0803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="4007.5" y="587.6748">ProxyServerMediaSession&amp; fOurServerMediaSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="596.1033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="4007.5" y="602.6978">char* fOurURL;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="611.1262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="4007.5" y="617.7207">Authenticator* fOurAuthenticator;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="626.1492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="4007.5" y="632.7437">Boolean fStreamRTPOverTCP;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="641.1721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="4007.5" y="647.7666">class ProxyServerMediaSubsession *fSetupQueueHead, *fSetupQueueTail;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="656.1951"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="4007.5" y="662.7896">unsigned fNumSetupsDone;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="671.218"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="4007.5" y="677.8125">unsigned fNextDESCRIBEDelay; // in seconds</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="686.241"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="4007.5" y="692.8354">Boolean fServerSupportsGetParameter, fLastCommandWasPLAY;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="701.2639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="4007.5" y="707.8584">TaskToken fLivenessCommandTask, fDESCRIBECommandTask, fSubsessionTimerTask;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3988.5" x2="4486.5" y1="714.2754" y2="714.2754"/><ellipse cx="3998.5" cy="727.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="474" x="4007.5" y="730.8813">ProxyRTSPClient(class ProxyServerMediaSession&amp; ourServerMediaSession, char const* rtspURL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="4007.5" y="745.9043">portNumBits tunnelOverHTTPPortNum, int verbosityLevel, int socketNumToServer);</text><ellipse cx="3998.5" cy="757.3328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="4007.5" y="760.9272">virtual ~ProxyRTSPClient();</text><ellipse cx="3998.5" cy="772.3557" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="4007.5" y="775.9502">void continueAfterDESCRIBE(char const* sdpDescription);</text><ellipse cx="3998.5" cy="787.3787" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="4007.5" y="790.9731">void continueAfterLivenessCommand(int resultCode, Boolean serverSupportsGetParameter);</text><ellipse cx="3998.5" cy="802.4016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="4007.5" y="805.9961">void continueAfterSETUP();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="814.4246"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="4007.5" y="821.019">void reset();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="829.4475"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="4007.5" y="836.042">Authenticator* auth() { return fOurAuthenticator; }</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="844.4705"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4007.5" y="851.0649">void scheduleLivenessCommand();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="859.4934"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="4007.5" y="866.0879">static void sendLivenessCommand(void* clientData);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="874.5164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4007.5" y="881.1108">void scheduleDESCRIBECommand();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="889.5393"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="4007.5" y="896.1338">static void sendDESCRIBE(void* clientData);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="904.5623"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="4007.5" y="911.1567">static void subsessionTimeout(void* clientData);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3995.5" y="919.5852"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="4007.5" y="926.1797">void handleSubsessionTimeout();</text><!--class ProxyServerMediaSession--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="489.1284" id="ProxyServerMediaSession" style="stroke: #A80036; stroke-width: 1.5;" width="450" x="4307.5" y="1125.5"/><ellipse cx="4456.75" cy="1141.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4455.3281,1146.8594 Q4453.4688,1146.8594 4452.375,1145.4688 Q4451.2813,1144.0781 4451.2813,1141.0938 Q4451.2813,1138.5625 4452.4453,1136.9063 Q4453.6094,1135.25 4455.5938,1135.25 Q4457.0625,1135.25 4457.5313,1135.375 Q4458,1135.5781 4458,1135.5781 Q4458,1135.5781 4458,1135.5078 Q4458,1135.4375 4458.6094,1134.5156 L4459.6563,1138.1719 L4458.3281,1138.5781 Q4457.8594,1137.0313 4457.1953,1136.3672 Q4456.5313,1135.7031 4455.4688,1135.7031 Q4455.0781,1135.7031 4454.3125,1137.2344 Q4453.5469,1138.7656 4453.5469,1141.0156 Q4453.5469,1143.4844 4454.2109,1144.875 Q4454.875,1146.2656 4455.4063,1146.2656 Q4456.4688,1146.2656 4457.2266,1145.5 Q4457.9844,1144.7344 4458.3281,1143.0781 L4459.6563,1143.6719 Q4459.3281,1145.0781 4458.4297,1145.9688 Q4457.5313,1146.8594 4455.3281,1146.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="143" x="4477.25" y="1147.0576">ProxyServerMediaSession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4308.5" x2="4756.5" y1="1157.5" y2="1157.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="4327.5" y="1174.106">RTSPServer* ourRTSPServer,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="4327.5" y="1189.1289">char const* inputStreamURL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="4327.5" y="1204.1519">char const* streamName = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="4327.5" y="1219.1748">char const* username = NULL, char const* password = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="4327.5" y="1234.1978">portNumBits tunnelOverHTTPPortNum = 0,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="4327.5" y="1249.2207">int verbosityLevel = 0,</text><ellipse cx="4318.5" cy="1260.6492" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="4327.5" y="1264.2437">char describeCompletedFlag;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="4327.5" y="1279.2666">char const* inputStreamURL, char const* streamName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="4327.5" y="1294.2896">char const* username, char const* password,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4327.5" y="1309.3125">portNumBits tunnelOverHTTPPortNum, int verbosityLevel,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="4327.5" y="1324.3354">int socketNumToServer,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="4327.5" y="1339.3584">createNewProxyRTSPClientFunc* ourCreateNewProxyRTSPClientFunc</text><polygon fill="none" points="4318.5,1345.7869,4322.5,1349.7869,4318.5,1353.7869,4314.5,1349.7869" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="4327.5" y="1354.3813">RTSPServer* fOurRTSPServer;</text><polygon fill="none" points="4318.5,1360.8098,4322.5,1364.8098,4318.5,1368.8098,4314.5,1364.8098" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4327.5" y="1369.4043">ProxyRTSPClient* fProxyRTSPClient;</text><polygon fill="none" points="4318.5,1375.8328,4322.5,1379.8328,4318.5,1383.8328,4314.5,1379.8328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4327.5" y="1384.4272">MediaSession* fClientMediaSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4315.5" y="1392.8557"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4327.5" y="1399.4502">friend class ProxyRTSPClient;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4315.5" y="1407.8787"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4327.5" y="1414.4731">friend class ProxyServerMediaSubsession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4315.5" y="1422.9016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4327.5" y="1429.4961">int fVerbosityLevel;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4315.5" y="1437.9246"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="4327.5" y="1444.519">class PresentationTimeSessionNormalizer* fPresentationTimeSessionNormalizer;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4315.5" y="1452.9475"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="4327.5" y="1459.542">createNewProxyRTSPClientFunc* fCreateNewProxyRTSPClientFunc;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4308.5" x2="4756.5" y1="1465.959" y2="1465.959"/><ellipse cx="4318.5" cy="1478.9705" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="4327.5" y="1482.5649">static ProxyServerMediaSession* createNew(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4327.5" y="1497.5879">int socketNumToServer = -1);</text><ellipse cx="4318.5" cy="1509.0164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="4327.5" y="1512.6108">virtual ~ProxyServerMediaSession();</text><ellipse cx="4318.5" cy="1524.0393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="4327.5" y="1527.6338">char const* url() const;</text><ellipse cx="4318.5" cy="1539.0623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="4327.5" y="1542.6567">Boolean describeCompletedSuccessfully() const { return fClientMediaSession != NULL; }</text><polygon fill="#FFFF44" points="4318.5,1549.0852,4322.5,1553.0852,4318.5,1557.0852,4314.5,1553.0852" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="400" x="4327.5" y="1557.6797">ProxyServerMediaSession(UsageEnvironment&amp; env, RTSPServer* ourRTSPServer,</text><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="295" x="4327.5" y="1577.2866">defaultCreateNewProxyRTSPClientFunc);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4315.5" y="1586.594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="4327.5" y="1593.1885">void continueAfterDESCRIBE(char const* sdpDescription);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4315.5" y="1601.6169"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="404" x="4327.5" y="1608.2114">void resetDESCRIBEState(); // undoes what was done by "contineAfterDESCRIBE()"</text><!--class ProxyServerMediaSubsession--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="318.4131" id="ProxyServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.5;" width="667" x="3904" y="2070"/><ellipse cx="4151.25" cy="2086" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4149.8281,2091.3594 Q4147.9688,2091.3594 4146.875,2089.9688 Q4145.7813,2088.5781 4145.7813,2085.5938 Q4145.7813,2083.0625 4146.9453,2081.4063 Q4148.1094,2079.75 4150.0938,2079.75 Q4151.5625,2079.75 4152.0313,2079.875 Q4152.5,2080.0781 4152.5,2080.0781 Q4152.5,2080.0781 4152.5,2080.0078 Q4152.5,2079.9375 4153.1094,2079.0156 L4154.1563,2082.6719 L4152.8281,2083.0781 Q4152.3594,2081.5313 4151.6953,2080.8672 Q4151.0313,2080.2031 4149.9688,2080.2031 Q4149.5781,2080.2031 4148.8125,2081.7344 Q4148.0469,2083.2656 4148.0469,2085.5156 Q4148.0469,2087.9844 4148.7109,2089.375 Q4149.375,2090.7656 4149.9063,2090.7656 Q4150.9688,2090.7656 4151.7266,2090 Q4152.4844,2089.2344 4152.8281,2087.5781 L4154.1563,2088.1719 Q4153.8281,2089.5781 4152.9297,2090.4688 Q4152.0313,2091.3594 4149.8281,2091.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="164" x="4171.75" y="2091.5576">ProxyServerMediaSubsession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3905" x2="4570" y1="2102" y2="2102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3924" y="2118.606">unsigned char rtpPayloadTypeIfDynamic,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3912" y="2127.0344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3924" y="2133.6289">friend class ProxyRTSPClient;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3912" y="2142.0574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="3924" y="2148.6519">MediaSubsession&amp; fClientMediaSubsession; // the 'client' media subsession object that corresponds to this 'server' media subsession</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3912" y="2157.0803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="3924" y="2163.6748">ProxyServerMediaSubsession* fNext; // used when we're part of a queue</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3912" y="2172.1033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3924" y="2178.6978">Boolean fHaveSetupStream;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3905" x2="4570" y1="2185.1147" y2="2185.1147"/><ellipse cx="3915" cy="2198.1262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="3924" y="2201.7207">ProxyServerMediaSubsession(MediaSubsession&amp; mediaSubsession);</text><ellipse cx="3915" cy="2213.1492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="3924" y="2216.7437">virtual ~ProxyServerMediaSubsession();</text><ellipse cx="3915" cy="2228.1721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="3924" y="2231.7666">char const* codecName() const { return fClientMediaSubsession.codecName(); }</text><ellipse cx="3915" cy="2243.1951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="3924" y="2246.7896">char const* mediumName() const { return fClientMediaSubsession.mediumName(); }</text><ellipse cx="3915" cy="2258.218" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="3924" y="2261.8125">unsigned char rtpPayloadFormat() const { return fClientMediaSubsession.rtpPayloadFormat(); }</text><ellipse cx="3915" cy="2273.241" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="3924" y="2276.8354">virtual FramedSource* createNewStreamSource(unsigned clientSessionId,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3924" y="2291.8584">unsigned&amp; estBitrate);</text><ellipse cx="3915" cy="2303.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="3924" y="2306.8813">virtual void closeStreamSource(FramedSource* inputSource);</text><ellipse cx="3915" cy="2318.3098" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="3924" y="2321.9043">virtual RTPSink* createNewRTPSink(Groupsock* rtpGroupsock,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3924" y="2336.9272">FramedSource* inputSource);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3912" y="2345.3557"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="3924" y="2351.9502">static void subsessionByeHandler(void* clientData);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3912" y="2360.3787"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3924" y="2366.9731">void subsessionByeHandler();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3912" y="2375.4016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="3924" y="2381.9961">int verbosityLevel() const { return ((ProxyServerMediaSession*)fParentSession)-&gt;fVerbosityLevel; }</text><!--class ServerMediaSession--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="603.8491" id="ServerMediaSession" style="stroke: #A80036; stroke-width: 1.5;" width="419" x="4121" y="5338.5"/><ellipse cx="4269.25" cy="5354.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4267.8281,5359.8594 Q4265.9688,5359.8594 4264.875,5358.4688 Q4263.7813,5357.0781 4263.7813,5354.0938 Q4263.7813,5351.5625 4264.9453,5349.9063 Q4266.1094,5348.25 4268.0938,5348.25 Q4269.5625,5348.25 4270.0313,5348.375 Q4270.5,5348.5781 4270.5,5348.5781 Q4270.5,5348.5781 4270.5,5348.5078 Q4270.5,5348.4375 4271.1094,5347.5156 L4272.1563,5351.1719 L4270.8281,5351.5781 Q4270.3594,5350.0313 4269.6953,5349.3672 Q4269.0313,5348.7031 4267.9688,5348.7031 Q4267.5781,5348.7031 4266.8125,5350.2344 Q4266.0469,5351.7656 4266.0469,5354.0156 Q4266.0469,5356.4844 4266.7109,5357.875 Q4267.375,5359.2656 4267.9063,5359.2656 Q4268.9688,5359.2656 4269.7266,5358.5 Q4270.4844,5357.7344 4270.8281,5356.0781 L4272.1563,5356.6719 Q4271.8281,5358.0781 4270.9297,5358.9688 Q4270.0313,5359.8594 4267.8281,5359.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="4289.75" y="5360.0576">ServerMediaSession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4122" x2="4539" y1="5370.5" y2="5370.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="4141" y="5387.106">char const* streamName = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="4141" y="5402.1289">char const* info = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="4141" y="5417.1519">char const* description = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="4141" y="5432.1748">Boolean isSSM = False,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="4141" y="5447.1978">char const* mediumName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="4141" y="5462.2207">char const* info, char const* description,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5470.6492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="4141" y="5477.2437">Boolean fIsSSM;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5485.6721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="4141" y="5492.2666">friend class ServerMediaSubsessionIterator;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5500.6951"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="4141" y="5507.2896">ServerMediaSubsession* fSubsessionsHead;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5515.718"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="4141" y="5522.3125">ServerMediaSubsession* fSubsessionsTail;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5530.741"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="4141" y="5537.3354">unsigned fSubsessionCounter;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5545.7639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="4141" y="5552.3584">char* fStreamName;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5560.7869"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4141" y="5567.3813">char* fInfoSDPString;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5575.8098"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4141" y="5582.4043">char* fDescriptionSDPString;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5590.8328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4141" y="5597.4272">char* fMiscSDPLines;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5605.8557"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4141" y="5612.4502">struct timeval fCreationTime;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5620.8787"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="4141" y="5627.4731">unsigned fReferenceCount;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5635.9016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4141" y="5642.4961">Boolean fDeleteWhenUnreferenced;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4122" x2="4539" y1="5648.9131" y2="5648.9131"/><ellipse cx="4132" cy="5661.9246" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="4141" y="5665.519">static ServerMediaSession* createNew(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="4141" y="5680.542">char const* miscSDPLines = NULL);</text><ellipse cx="4132" cy="5691.9705" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="4141" y="5695.5649">static Boolean lookupByName(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="4141" y="5710.5879">ServerMediaSession*&amp; resultSession);</text><ellipse cx="4132" cy="5722.0164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="4141" y="5725.6108">char* generateSDPDescription(); // based on the entire session</text><ellipse cx="4132" cy="5737.0393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="4141" y="5740.6338">char const* streamName() const { return fStreamName; }</text><ellipse cx="4132" cy="5752.0623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="4141" y="5755.6567">Boolean addSubsession(ServerMediaSubsession* subsession);</text><ellipse cx="4132" cy="5767.0852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="4141" y="5770.6797">unsigned numSubsessions() const { return fSubsessionCounter; }</text><ellipse cx="4132" cy="5782.1082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="4141" y="5785.7026">void testScaleFactor(float&amp; scale); // sets "scale" to the actual supported scale</text><ellipse cx="4132" cy="5797.1311" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4141" y="5800.7256">float duration() const;</text><ellipse cx="4132" cy="5812.1541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="4141" y="5815.7485">unsigned referenceCount() const { return fReferenceCount; }</text><ellipse cx="4132" cy="5827.177" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="4141" y="5830.7715">void incrementReferenceCount() { ++fReferenceCount; }</text><ellipse cx="4132" cy="5842.2" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="4141" y="5845.7944">void decrementReferenceCount() { if (fReferenceCount &gt; 0) --fReferenceCount; }</text><ellipse cx="4132" cy="5857.2229" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="4141" y="5860.8174">Boolean&amp; deleteWhenUnreferenced() { return fDeleteWhenUnreferenced; }</text><ellipse cx="4132" cy="5872.2458" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4141" y="5875.8403">void deleteAllSubsessions();</text><polygon fill="#FFFF44" points="4132,5882.2688,4136,5886.2688,4132,5890.2688,4128,5886.2688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="4141" y="5890.8633">ServerMediaSession(UsageEnvironment&amp; env, char const* streamName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="4141" y="5905.8862">Boolean isSSM, char const* miscSDPLines);</text><polygon fill="#FFFF44" points="4132,5912.3147,4136,5916.3147,4132,5920.3147,4128,5916.3147" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="4141" y="5920.9092">virtual ~ServerMediaSession();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4129" y="5929.3376"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4141" y="5935.9321">virtual Boolean isServerMediaSession() const;</text><!--class ServerMediaSubsessionIterator--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="138.1377" id="ServerMediaSubsessionIterator" style="stroke: #A80036; stroke-width: 1.5;" width="337" x="4293" y="6859"/><ellipse cx="4370.75" cy="6875" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4369.3281,6880.3594 Q4367.4688,6880.3594 4366.375,6878.9688 Q4365.2813,6877.5781 4365.2813,6874.5938 Q4365.2813,6872.0625 4366.4453,6870.4063 Q4367.6094,6868.75 4369.5938,6868.75 Q4371.0625,6868.75 4371.5313,6868.875 Q4372,6869.0781 4372,6869.0781 Q4372,6869.0781 4372,6869.0078 Q4372,6868.9375 4372.6094,6868.0156 L4373.6563,6871.6719 L4372.3281,6872.0781 Q4371.8594,6870.5313 4371.1953,6869.8672 Q4370.5313,6869.2031 4369.4688,6869.2031 Q4369.0781,6869.2031 4368.3125,6870.7344 Q4367.5469,6872.2656 4367.5469,6874.5156 Q4367.5469,6876.9844 4368.2109,6878.375 Q4368.875,6879.7656 4369.4063,6879.7656 Q4370.4688,6879.7656 4371.2266,6879 Q4371.9844,6878.2344 4372.3281,6876.5781 L4373.6563,6877.1719 Q4373.3281,6878.5781 4372.4297,6879.4688 Q4371.5313,6880.3594 4369.3281,6880.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="173" x="4391.25" y="6880.5576">ServerMediaSubsessionIterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4294" x2="4629" y1="6891" y2="6891"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4301" y="6901.0115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4313" y="6907.606">ServerMediaSession&amp; fOurSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4301" y="6916.0344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4313" y="6922.6289">ServerMediaSubsession* fNextPtr;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4294" x2="4629" y1="6929.0459" y2="6929.0459"/><ellipse cx="4304" cy="6942.0574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="4313" y="6945.6519">ServerMediaSubsessionIterator(ServerMediaSession&amp; session);</text><ellipse cx="4304" cy="6957.0803" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="4313" y="6960.6748">virtual ~ServerMediaSubsessionIterator();</text><ellipse cx="4304" cy="6972.1033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="4313" y="6975.6978">ServerMediaSubsession* next(); // NULL if none</text><ellipse cx="4304" cy="6987.1262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="4313" y="6990.7207">void reset();</text><!--class ServerMediaSubsession--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="799.1475" id="ServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.5;" width="524" x="4046.5" y="3811"/><ellipse cx="4236.75" cy="3827" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4235.3281,3832.3594 Q4233.4688,3832.3594 4232.375,3830.9688 Q4231.2813,3829.5781 4231.2813,3826.5938 Q4231.2813,3824.0625 4232.4453,3822.4063 Q4233.6094,3820.75 4235.5938,3820.75 Q4237.0625,3820.75 4237.5313,3820.875 Q4238,3821.0781 4238,3821.0781 Q4238,3821.0781 4238,3821.0078 Q4238,3820.9375 4238.6094,3820.0156 L4239.6563,3823.6719 L4238.3281,3824.0781 Q4237.8594,3822.5313 4237.1953,3821.8672 Q4236.5313,3821.2031 4235.4688,3821.2031 Q4235.0781,3821.2031 4234.3125,3822.7344 Q4233.5469,3824.2656 4233.5469,3826.5156 Q4233.5469,3828.9844 4234.2109,3830.375 Q4234.875,3831.7656 4235.4063,3831.7656 Q4236.4688,3831.7656 4237.2266,3831 Q4237.9844,3830.2344 4238.3281,3828.5781 L4239.6563,3829.1719 Q4239.3281,3830.5781 4238.4297,3831.4688 Q4237.5313,3832.3594 4235.3281,3832.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="135" x="4257.25" y="3832.5576">ServerMediaSubsession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4047.5" x2="4569.5" y1="3843" y2="3843"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4066.5" y="3859.606">netAddressBits clientAddress, // in</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="4066.5" y="3874.6289">Port const&amp; clientRTPPort, // in</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4066.5" y="3889.6519">Port const&amp; clientRTCPPort, // in</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="4066.5" y="3904.6748">netAddressBits&amp; destinationAddress, // in out</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4066.5" y="3919.6978">u_int8_t&amp; destinationTTL, // in out</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="4066.5" y="3934.7207">Boolean&amp; isMulticast, // out</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="4066.5" y="3949.7437">Port&amp; serverRTPPort, // out</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4066.5" y="3964.7666">Port&amp; serverRTCPPort, // out</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="4066.5" y="3979.7896">void*&amp; streamToken // out</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4066.5" y="3994.8125">TaskFunc* rtcpRRHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4066.5" y="4009.8354">void* rtcpRRHandlerClientData,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4066.5" y="4024.8584">unsigned short&amp; rtpSeqNum,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4066.5" y="4039.8813">unsigned&amp; rtpTimestamp,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="4066.5" y="4054.9043">ServerRequestAlternativeByteHandler* serverRequestAlternativeByteHandler,</text><polygon fill="none" points="4057.5,4061.3328,4061.5,4065.3328,4057.5,4069.3328,4053.5,4065.3328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="4066.5" y="4069.9272">ServerMediaSession* fParentSession;</text><polygon fill="none" points="4057.5,4076.3557,4061.5,4080.3557,4057.5,4084.3557,4053.5,4080.3557" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="4066.5" y="4084.9502">netAddressBits fServerAddressForSDP;</text><polygon fill="none" points="4057.5,4091.3787,4061.5,4095.3787,4057.5,4099.3787,4053.5,4095.3787" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="4066.5" y="4099.9731">portNumBits fPortNumForSDP;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4054.5" y="4108.4016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4066.5" y="4114.9961">friend class ServerMediaSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4054.5" y="4123.4246"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="4066.5" y="4130.019">friend class ServerMediaSubsessionIterator;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4054.5" y="4138.4475"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4066.5" y="4145.042">ServerMediaSubsession* fNext;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4054.5" y="4153.4705"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="4066.5" y="4160.0649">unsigned fTrackNumber;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4054.5" y="4168.4934"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4066.5" y="4175.0879">char const* fTrackId;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4047.5" x2="4569.5" y1="4181.5049" y2="4181.5049"/><ellipse cx="4057.5" cy="4194.5164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="4066.5" y="4198.1108">unsigned trackNumber() const { return fTrackNumber; }</text><ellipse cx="4057.5" cy="4209.5393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4066.5" y="4213.1338">char const* trackId();</text><ellipse cx="4057.5" cy="4224.5623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4066.5" y="4228.1567">virtual char const* sdpLines() = 0;</text><ellipse cx="4057.5" cy="4239.5852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="4066.5" y="4243.1797">virtual void getStreamParameters(unsigned clientSessionId, // in</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="4066.5" y="4258.2026">int tcpSocketNum, // in (-1 means use UDP, not TCP)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="4066.5" y="4273.2256">unsigned char rtpChannelId, // in (used if TCP)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="4066.5" y="4288.2485">unsigned char rtcpChannelId, // in (used if TCP)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="25" x="4066.5" y="4303.2715">) = 0;</text><ellipse cx="4057.5" cy="4314.7" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="4066.5" y="4318.2944">virtual void startStream(unsigned clientSessionId, void* streamToken,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="4066.5" y="4333.3174">void* serverRequestAlternativeByteHandlerClientData) = 0;</text><ellipse cx="4057.5" cy="4344.7458" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="4066.5" y="4348.3403">virtual void pauseStream(unsigned clientSessionId, void* streamToken);</text><ellipse cx="4057.5" cy="4359.7688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="423" x="4066.5" y="4363.3633">virtual void seekStream(unsigned clientSessionId, void* streamToken, double&amp; seekNPT,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4066.5" y="4378.3862">double streamDuration, u_int64_t&amp; numBytes);</text><ellipse cx="4057.5" cy="4389.8147" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="498" x="4066.5" y="4393.4092">virtual void seekStream(unsigned clientSessionId, void* streamToken, char*&amp; absStart, char*&amp; absEnd);</text><ellipse cx="4057.5" cy="4404.8376" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="4066.5" y="4408.4321">virtual void nullSeekStream(unsigned clientSessionId, void* streamToken,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4066.5" y="4423.4551">double streamEndTime, u_int64_t&amp; numBytes);</text><ellipse cx="4057.5" cy="4434.8835" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="4066.5" y="4438.478">virtual void setStreamScale(unsigned clientSessionId, void* streamToken, float scale);</text><ellipse cx="4057.5" cy="4449.9065" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="4066.5" y="4453.501">virtual float getCurrentNPT(void* streamToken);</text><ellipse cx="4057.5" cy="4464.9294" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="4066.5" y="4468.5239">virtual FramedSource* getStreamSource(void* streamToken);</text><ellipse cx="4057.5" cy="4479.9524" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="4066.5" y="4483.5469">virtual void deleteStream(unsigned clientSessionId, void*&amp; streamToken);</text><ellipse cx="4057.5" cy="4494.9753" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="4066.5" y="4498.5698">virtual void testScaleFactor(float&amp; scale); // sets "scale" to the actual supported scale</text><ellipse cx="4057.5" cy="4509.9983" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4066.5" y="4513.5928">virtual float duration() const;</text><ellipse cx="4057.5" cy="4525.0212" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="4066.5" y="4528.6157">virtual void getAbsoluteTimeRange(char*&amp; absStartTime, char*&amp; absEndTime) const;</text><ellipse cx="4057.5" cy="4540.0442" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="4066.5" y="4543.6387">void setServerAddressAndPortForSDP(netAddressBits addressBits,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4066.5" y="4558.6616">portNumBits portBits);</text><polygon fill="#FFFF44" points="4057.5,4565.0901,4061.5,4569.0901,4057.5,4573.0901,4053.5,4569.0901" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="4066.5" y="4573.6846">ServerMediaSubsession(UsageEnvironment&amp; env);</text><polygon fill="#FFFF44" points="4057.5,4580.113,4061.5,4584.113,4057.5,4588.113,4053.5,4584.113" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4066.5" y="4588.7075">virtual ~ServerMediaSubsession();</text><polygon fill="#FFFF44" points="4057.5,4595.136,4061.5,4599.136,4057.5,4603.136,4053.5,4599.136" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4066.5" y="4603.7305">char const* rangeSDPLine() const;</text><!--class MediaSource--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="288.3672" id="MediaSource" style="stroke: #A80036; stroke-width: 1.5;" width="419" x="3065" y="5496.5"/><ellipse cx="3234.25" cy="5512.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3232.8281,5517.8594 Q3230.9688,5517.8594 3229.875,5516.4688 Q3228.7813,5515.0781 3228.7813,5512.0938 Q3228.7813,5509.5625 3229.9453,5507.9063 Q3231.1094,5506.25 3233.0938,5506.25 Q3234.5625,5506.25 3235.0313,5506.375 Q3235.5,5506.5781 3235.5,5506.5781 Q3235.5,5506.5781 3235.5,5506.5078 Q3235.5,5506.4375 3236.1094,5505.5156 L3237.1563,5509.1719 L3235.8281,5509.5781 Q3235.3594,5508.0313 3234.6953,5507.3672 Q3234.0313,5506.7031 3232.9688,5506.7031 Q3232.5781,5506.7031 3231.8125,5508.2344 Q3231.0469,5509.7656 3231.0469,5512.0156 Q3231.0469,5514.4844 3231.7109,5515.875 Q3232.375,5517.2656 3232.9063,5517.2656 Q3233.9688,5517.2656 3234.7266,5516.5 Q3235.4844,5515.7344 3235.8281,5514.0781 L3237.1563,5514.6719 Q3236.8281,5516.0781 3235.9297,5516.9688 Q3235.0313,5517.8594 3232.8281,5517.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="3254.75" y="5518.0576">MediaSource</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3066" x2="3483" y1="5528.5" y2="5528.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3066" x2="3483" y1="5536.5" y2="5536.5"/><ellipse cx="3076" cy="5549.5115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="3085" y="5553.106">static Boolean lookupByName(UsageEnvironment&amp; env, char const* sourceName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3085" y="5568.1289">MediaSource*&amp; resultSource);</text><ellipse cx="3076" cy="5579.5574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="3085" y="5583.1519">virtual void getAttributes() const;</text><ellipse cx="3076" cy="5594.5803" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="3085" y="5598.1748">virtual char const* MIMEtype() const;</text><ellipse cx="3076" cy="5609.6033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="3085" y="5613.1978">virtual Boolean isFramedSource() const;</text><ellipse cx="3076" cy="5624.6262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="3085" y="5628.2207">virtual Boolean isRTPSource() const;</text><ellipse cx="3076" cy="5639.6492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="3085" y="5643.2437">virtual Boolean isMPEG1or2VideoStreamFramer() const;</text><ellipse cx="3076" cy="5654.6721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="3085" y="5658.2666">virtual Boolean isMPEG4VideoStreamFramer() const;</text><ellipse cx="3076" cy="5669.6951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="3085" y="5673.2896">virtual Boolean isH264VideoStreamFramer() const;</text><ellipse cx="3076" cy="5684.718" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="3085" y="5688.3125">virtual Boolean isH265VideoStreamFramer() const;</text><ellipse cx="3076" cy="5699.741" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="3085" y="5703.3354">virtual Boolean isDVVideoStreamFramer() const;</text><ellipse cx="3076" cy="5714.7639" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="3085" y="5718.3584">virtual Boolean isJPEGVideoSource() const;</text><ellipse cx="3076" cy="5729.7869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="3085" y="5733.3813">virtual Boolean isAMRAudioSource() const;</text><polygon fill="#FFFF44" points="3076,5739.8098,3080,5743.8098,3076,5747.8098,3072,5743.8098" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="3085" y="5748.4043">MediaSource(UsageEnvironment&amp; env); // abstract base class</text><polygon fill="#FFFF44" points="3076,5754.8328,3080,5758.8328,3076,5762.8328,3072,5758.8328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="3085" y="5763.4272">virtual ~MediaSource();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3073" y="5771.8557"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="3085" y="5778.4502">virtual Boolean isSource() const;</text><!--class FramedSource--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="558.7803" id="FramedSource" style="stroke: #A80036; stroke-width: 1.5;" width="419" x="3065" y="3931"/><ellipse cx="3229.25" cy="3947" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3227.8281,3952.3594 Q3225.9688,3952.3594 3224.875,3950.9688 Q3223.7813,3949.5781 3223.7813,3946.5938 Q3223.7813,3944.0625 3224.9453,3942.4063 Q3226.1094,3940.75 3228.0938,3940.75 Q3229.5625,3940.75 3230.0313,3940.875 Q3230.5,3941.0781 3230.5,3941.0781 Q3230.5,3941.0781 3230.5,3941.0078 Q3230.5,3940.9375 3231.1094,3940.0156 L3232.1563,3943.6719 L3230.8281,3944.0781 Q3230.3594,3942.5313 3229.6953,3941.8672 Q3229.0313,3941.2031 3227.9688,3941.2031 Q3227.5781,3941.2031 3226.8125,3942.7344 Q3226.0469,3944.2656 3226.0469,3946.5156 Q3226.0469,3948.9844 3226.7109,3950.375 Q3227.375,3951.7656 3227.9063,3951.7656 Q3228.9688,3951.7656 3229.7266,3951 Q3230.4844,3950.2344 3230.8281,3948.5781 L3232.1563,3949.1719 Q3231.8281,3950.5781 3230.9297,3951.4688 Q3230.0313,3952.3594 3227.8281,3952.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="3249.75" y="3952.5576">FramedSource</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3066" x2="3483" y1="3963" y2="3963"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="3085" y="3979.606">unsigned numTruncatedBytes,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3085" y="3994.6289">struct timeval presentationTime,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="3085" y="4009.6519">afterGettingFunc* afterGettingFunc,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="3085" y="4024.6748">void* afterGettingClientData,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3085" y="4039.6978">onCloseFunc* onCloseFunc,</text><polygon fill="none" points="3076,4046.1262,3080,4050.1262,3076,4054.1262,3072,4050.1262" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3085" y="4054.7207">unsigned char* fTo;</text><polygon fill="none" points="3076,4061.1492,3080,4065.1492,3076,4069.1492,3072,4065.1492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3085" y="4069.7437">unsigned fMaxSize;</text><polygon fill="none" points="3076,4076.1721,3080,4080.1721,3076,4084.1721,3072,4080.1721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="3085" y="4084.7666">unsigned fFrameSize;</text><polygon fill="none" points="3076,4091.1951,3080,4095.1951,3076,4099.1951,3072,4095.1951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3085" y="4099.7896">unsigned fNumTruncatedBytes;</text><polygon fill="none" points="3076,4106.218,3080,4110.218,3076,4114.218,3072,4110.218" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="3085" y="4114.8125">struct timeval fPresentationTime;</text><polygon fill="none" points="3076,4121.241,3080,4125.241,3076,4129.241,3072,4125.241" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="3085" y="4129.8354">unsigned fDurationInMicroseconds;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3073" y="4138.2639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="3085" y="4144.8584">afterGettingFunc* fAfterGettingFunc;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3073" y="4153.2869"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3085" y="4159.8813">void* fAfterGettingClientData;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3073" y="4168.3098"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="3085" y="4174.9043">onCloseFunc* fOnCloseFunc;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3073" y="4183.3328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="3085" y="4189.9272">void* fOnCloseClientData;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3073" y="4198.3557"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="3085" y="4204.9502">Boolean fIsCurrentlyAwaitingData;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3066" x2="3483" y1="4211.3672" y2="4211.3672"/><ellipse cx="3076" cy="4224.3787" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="3085" y="4227.9731">static Boolean lookupByName(UsageEnvironment&amp; env, char const* sourceName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="3085" y="4242.9961">FramedSource*&amp; resultSource);</text><ellipse cx="3076" cy="4254.4246" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="3085" y="4258.019">typedef void(afterGettingFunc)(void* clientData, unsigned frameSize,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3085" y="4273.042">unsigned durationInMicroseconds);</text><ellipse cx="3076" cy="4284.4705" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="3085" y="4288.0649">typedef void(onCloseFunc)(void* clientData);</text><ellipse cx="3076" cy="4299.4934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="3085" y="4303.0879">void getNextFrame(unsigned char* to, unsigned maxSize,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3085" y="4318.1108">void* onCloseClientData);</text><ellipse cx="3076" cy="4329.5393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="3085" y="4333.1338">static void handleClosure(void* clientData);</text><ellipse cx="3076" cy="4344.5623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="3085" y="4348.1567">void handleClosure();</text><ellipse cx="3076" cy="4359.5852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="3085" y="4363.1797">void stopGettingFrames();</text><ellipse cx="3076" cy="4374.6082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="3085" y="4378.2026">virtual unsigned maxFrameSize() const;</text><ellipse cx="3076" cy="4389.6311" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="3085" y="4393.2256">virtual void doGetNextFrame() = 0;</text><ellipse cx="3076" cy="4404.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3085" y="4408.2485">Boolean isCurrentlyAwaitingData() const;</text><ellipse cx="3076" cy="4419.677" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="3085" y="4423.2715">static void afterGetting(FramedSource* source);</text><polygon fill="#FFFF44" points="3076,4429.7,3080,4433.7,3076,4437.7,3072,4433.7" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3085" y="4438.2944">FramedSource(UsageEnvironment&amp; env);</text><polygon fill="#FFFF44" points="3076,4444.7229,3080,4448.7229,3076,4452.7229,3072,4448.7229" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="3085" y="4453.3174">virtual ~FramedSource();</text><polygon fill="#FFFF44" points="3076,4459.7458,3080,4463.7458,3076,4467.7458,3072,4463.7458" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="3085" y="4468.3403">virtual void doStopGettingFrames();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3073" y="4476.7688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="3085" y="4483.3633">virtual Boolean isFramedSource() const;</text><!--class FramedFilter--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="183.2065" id="FramedFilter" style="stroke: #A80036; stroke-width: 1.5;" width="356" x="2817.5" y="3139.5"/><ellipse cx="2956.25" cy="3155.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2954.8281,3160.8594 Q2952.9688,3160.8594 2951.875,3159.4688 Q2950.7813,3158.0781 2950.7813,3155.0938 Q2950.7813,3152.5625 2951.9453,3150.9063 Q2953.1094,3149.25 2955.0938,3149.25 Q2956.5625,3149.25 2957.0313,3149.375 Q2957.5,3149.5781 2957.5,3149.5781 Q2957.5,3149.5781 2957.5,3149.5078 Q2957.5,3149.4375 2958.1094,3148.5156 L2959.1563,3152.1719 L2957.8281,3152.5781 Q2957.3594,3151.0313 2956.6953,3150.3672 Q2956.0313,3149.7031 2954.9688,3149.7031 Q2954.5781,3149.7031 2953.8125,3151.2344 Q2953.0469,3152.7656 2953.0469,3155.0156 Q2953.0469,3157.4844 2953.7109,3158.875 Q2954.375,3160.2656 2954.9063,3160.2656 Q2955.9688,3160.2656 2956.7266,3159.5 Q2957.4844,3158.7344 2957.8281,3157.0781 L2959.1563,3157.6719 Q2958.8281,3159.0781 2957.9297,3159.9688 Q2957.0313,3160.8594 2954.8281,3160.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="2976.75" y="3161.0576">FramedFilter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2818.5" x2="3172.5" y1="3171.5" y2="3171.5"/><polygon fill="none" points="2828.5,3179.5115,2832.5,3183.5115,2828.5,3187.5115,2824.5,3183.5115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2837.5" y="3188.106">FramedSource* fInputSource;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2818.5" x2="3172.5" y1="3194.5229" y2="3194.5229"/><ellipse cx="2828.5" cy="3207.5344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="2837.5" y="3211.1289">FramedSource* inputSource() const;</text><ellipse cx="2828.5" cy="3222.5574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="2837.5" y="3226.1519">void reassignInputSource(FramedSource* newInputSource);</text><ellipse cx="2828.5" cy="3237.5803" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="2837.5" y="3241.1748">void detachInputSource();</text><polygon fill="#FFFF44" points="2828.5,3247.6033,2832.5,3251.6033,2828.5,3255.6033,2824.5,3251.6033" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="2837.5" y="3256.1978">FramedFilter(UsageEnvironment&amp; env, FramedSource* inputSource);</text><polygon fill="#FFFF44" points="2828.5,3262.6262,2832.5,3266.6262,2828.5,3270.6262,2824.5,3266.6262" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="2837.5" y="3271.2207">virtual ~FramedFilter();</text><polygon fill="#FFFF44" points="2828.5,3277.6492,2832.5,3281.6492,2828.5,3285.6492,2824.5,3281.6492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="2837.5" y="3286.2437">virtual char const* MIMEtype() const;</text><polygon fill="#FFFF44" points="2828.5,3292.6721,2832.5,3296.6721,2828.5,3300.6721,2824.5,3296.6721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2837.5" y="3301.2666">virtual void getAttributes() const;</text><polygon fill="#FFFF44" points="2828.5,3307.6951,2832.5,3311.6951,2828.5,3315.6951,2824.5,3311.6951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2837.5" y="3316.2896">virtual void doStopGettingFrames();</text><!--class PresentationTimeSubsessionNormalizer--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="258.3213" id="PresentationTimeSubsessionNormalizer" style="stroke: #A80036; stroke-width: 1.5;" width="716" x="3152.5" y="2100"/><ellipse cx="3393.75" cy="2116" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3392.3281,2121.3594 Q3390.4688,2121.3594 3389.375,2119.9688 Q3388.2813,2118.5781 3388.2813,2115.5938 Q3388.2813,2113.0625 3389.4453,2111.4063 Q3390.6094,2109.75 3392.5938,2109.75 Q3394.0625,2109.75 3394.5313,2109.875 Q3395,2110.0781 3395,2110.0781 Q3395,2110.0781 3395,2110.0078 Q3395,2109.9375 3395.6094,2109.0156 L3396.6563,2112.6719 L3395.3281,2113.0781 Q3394.8594,2111.5313 3394.1953,2110.8672 Q3393.5313,2110.2031 3392.4688,2110.2031 Q3392.0781,2110.2031 3391.3125,2111.7344 Q3390.5469,2113.2656 3390.5469,2115.5156 Q3390.5469,2117.9844 3391.2109,2119.375 Q3391.875,2120.7656 3392.4063,2120.7656 Q3393.4688,2120.7656 3394.2266,2120 Q3394.9844,2119.2344 3395.3281,2117.5781 L3396.6563,2118.1719 Q3396.3281,2119.5781 3395.4297,2120.4688 Q3394.5313,2121.3594 3392.3281,2121.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="3414.25" y="2121.5576">PresentationTimeSubsessionNormalizer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3153.5" x2="3867.5" y1="2132" y2="2132"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3160.5" y="2142.0115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="3172.5" y="2148.606">friend class PresentationTimeSessionNormalizer;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3160.5" y="2157.0344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="3172.5" y="2163.6289">PresentationTimeSessionNormalizer&amp; fParent;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3160.5" y="2172.0574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3172.5" y="2178.6519">RTPSource* fRTPSource;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3160.5" y="2187.0803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="3172.5" y="2193.6748">RTPSink* fRTPSink;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3160.5" y="2202.1033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3172.5" y="2208.6978">char const* fCodecName;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3160.5" y="2217.1262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="3172.5" y="2223.7207">PresentationTimeSubsessionNormalizer* fNext;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3153.5" x2="3867.5" y1="2230.1377" y2="2230.1377"/><ellipse cx="3163.5" cy="2243.1492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="3172.5" y="2246.7437">void setRTPSink(RTPSink* rtpSink);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3160.5" y="2255.1721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="667" x="3172.5" y="2261.7666">PresentationTimeSubsessionNormalizer(PresentationTimeSessionNormalizer&amp; parent, FramedSource* inputSource, RTPSource* rtpSource,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="3172.5" y="2276.7896">char const* codecName, PresentationTimeSubsessionNormalizer* next);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3160.5" y="2285.218"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="3172.5" y="2291.8125">virtual ~PresentationTimeSubsessionNormalizer();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3160.5" y="2300.241"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="3172.5" y="2306.8354">static void afterGettingFrame(void* clientData, unsigned frameSize, unsigned numTruncatedBytes,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="3172.5" y="2321.8584">struct timeval presentationTime, unsigned durationInMicroseconds);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3160.5" y="2330.2869"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="690" x="3172.5" y="2336.8813">void afterGettingFrame(unsigned frameSize, unsigned numTruncatedBytes, struct timeval presentationTime, unsigned durationInMicroseconds);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3160.5" y="2345.3098"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="3172.5" y="2351.9043">virtual void doGetNextFrame();</text><!--class PresentationTimeSessionNormalizer--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="228.2754" id="PresentationTimeSessionNormalizer" style="stroke: #A80036; stroke-width: 1.5;" width="654" x="3208.5" y="3117"/><ellipse cx="3429.25" cy="3133" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3427.8281,3138.3594 Q3425.9688,3138.3594 3424.875,3136.9688 Q3423.7813,3135.5781 3423.7813,3132.5938 Q3423.7813,3130.0625 3424.9453,3128.4063 Q3426.1094,3126.75 3428.0938,3126.75 Q3429.5625,3126.75 3430.0313,3126.875 Q3430.5,3127.0781 3430.5,3127.0781 Q3430.5,3127.0781 3430.5,3127.0078 Q3430.5,3126.9375 3431.1094,3126.0156 L3432.1563,3129.6719 L3430.8281,3130.0781 Q3430.3594,3128.5313 3429.6953,3127.8672 Q3429.0313,3127.2031 3427.9688,3127.2031 Q3427.5781,3127.2031 3426.8125,3128.7344 Q3426.0469,3130.2656 3426.0469,3132.5156 Q3426.0469,3134.9844 3426.7109,3136.375 Q3427.375,3137.7656 3427.9063,3137.7656 Q3428.9688,3137.7656 3429.7266,3137 Q3430.4844,3136.2344 3430.8281,3134.5781 L3432.1563,3135.1719 Q3431.8281,3136.5781 3430.9297,3137.4688 Q3430.0313,3138.3594 3427.8281,3138.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="204" x="3449.75" y="3138.5576">PresentationTimeSessionNormalizer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3209.5" x2="3861.5" y1="3149" y2="3149"/><ellipse cx="3219.5" cy="3162.0115" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="3228.5" y="3165.606">PresentationTimeSubsessionNormalizer*</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="3231.5" y="3180.6289"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3216.5" y="3189.0574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="3228.5" y="3195.6519">friend class PresentationTimeSubsessionNormalizer;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3216.5" y="3204.0803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="3228.5" y="3210.6748">PresentationTimeSubsessionNormalizer* fSubsessionNormalizers;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3216.5" y="3219.1033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="3228.5" y="3225.6978">PresentationTimeSubsessionNormalizer* fMasterSSNormalizer;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3216.5" y="3234.1262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="3228.5" y="3240.7207">struct timeval fPTAdjustment;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3209.5" x2="3861.5" y1="3247.1377" y2="3247.1377"/><ellipse cx="3219.5" cy="3260.1492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="3228.5" y="3263.7437">PresentationTimeSessionNormalizer(UsageEnvironment&amp; env);</text><ellipse cx="3219.5" cy="3275.1721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="3228.5" y="3278.7666">virtual ~PresentationTimeSessionNormalizer();</text><ellipse cx="3219.5" cy="3290.1951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="628" x="3228.5" y="3293.7896">createNewPresentationTimeSubsessionNormalizer(FramedSource* inputSource, RTPSource* rtpSource, char const* codecName);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3216.5" y="3302.218"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="3228.5" y="3308.8125">void normalizePresentationTime(PresentationTimeSubsessionNormalizer* ssNormalizer,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="3228.5" y="3323.8354">struct timeval&amp; toPT, struct timeval const&amp; fromPT);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3216.5" y="3332.2639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="520" x="3228.5" y="3338.8584">void removePresentationTimeSubsessionNormalizer(PresentationTimeSubsessionNormalizer* ssNormalizer);</text><!--class OnDemandServerMediaSubsession--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="1039.5146" id="OnDemandServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.5;" width="675" x="3898" y="2711"/><ellipse cx="4131.75" cy="2727" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4130.3281,2732.3594 Q4128.4688,2732.3594 4127.375,2730.9688 Q4126.2813,2729.5781 4126.2813,2726.5938 Q4126.2813,2724.0625 4127.4453,2722.4063 Q4128.6094,2720.75 4130.5938,2720.75 Q4132.0625,2720.75 4132.5313,2720.875 Q4133,2721.0781 4133,2721.0781 Q4133,2721.0781 4133,2721.0078 Q4133,2720.9375 4133.6094,2720.0156 L4134.6563,2723.6719 L4133.3281,2724.0781 Q4132.8594,2722.5313 4132.1953,2721.8672 Q4131.5313,2721.2031 4130.4688,2721.2031 Q4130.0781,2721.2031 4129.3125,2722.7344 Q4128.5469,2724.2656 4128.5469,2726.5156 Q4128.5469,2728.9844 4129.2109,2730.375 Q4129.875,2731.7656 4130.4063,2731.7656 Q4131.4688,2731.7656 4132.2266,2731 Q4132.9844,2730.2344 4133.3281,2728.5781 L4134.6563,2729.1719 Q4134.3281,2730.5781 4133.4297,2731.4688 Q4132.5313,2732.3594 4130.3281,2732.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="199" x="4152.25" y="2732.5576">OnDemandServerMediaSubsession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3899" x2="4572" y1="2743" y2="2743"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="3918" y="2759.606">protected: // we're a virtual base class</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3918" y="2774.6289">portNumBits initialPortNum = 6970,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3918" y="2789.6519">netAddressBits clientAddress,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="3918" y="2804.6748">Port const&amp; clientRTPPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="3918" y="2819.6978">Port const&amp; clientRTCPPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="3918" y="2834.7207">int tcpSocketNum,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="3918" y="2849.7437">unsigned char rtpChannelId,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3918" y="2864.7666">unsigned char rtcpChannelId,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="3918" y="2879.7896">netAddressBits&amp; destinationAddress,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3918" y="2894.8125">u_int8_t&amp; destinationTTL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="3918" y="2909.8354">Boolean&amp; isMulticast,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="3918" y="2924.8584">Port&amp; serverRTPPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3918" y="2939.8813">Port&amp; serverRTCPPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="3918" y="2954.9043">TaskFunc* rtcpRRHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3918" y="2969.9272">void* rtcpRRHandlerClientData,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="3918" y="2984.9502">unsigned short&amp; rtpSeqNum,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3918" y="2999.9731">unsigned&amp; rtpTimestamp,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="3918" y="3014.9961">ServerRequestAlternativeByteHandler* serverRequestAlternativeByteHandler,</text><polygon fill="none" points="3909,3021.4246,3913,3025.4246,3909,3029.4246,3905,3025.4246" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="3918" y="3030.019">protected: // new virtual functions, defined by all subclasses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3918" y="3045.042">unsigned char rtpPayloadTypeIfDynamic,</text><polygon fill="none" points="3909,3051.4705,3913,3055.4705,3909,3059.4705,3905,3055.4705" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="3918" y="3060.0649">char* fSDPLines;</text><polygon fill="none" points="3909,3066.4934,3913,3070.4934,3909,3074.4934,3905,3070.4934" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="3918" y="3075.0879">HashTable* fDestinationsHashTable; // indexed by client session id</text><polygon fill="none" points="3909,3081.5164,3913,3085.5164,3909,3089.5164,3905,3085.5164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="3918" y="3090.1108">private:</text><polygon fill="none" points="3909,3096.5393,3913,3100.5393,3909,3104.5393,3905,3100.5393" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3918" y="3105.1338">Boolean fReuseFirstSource;</text><polygon fill="none" points="3909,3111.5623,3913,3115.5623,3909,3119.5623,3905,3115.5623" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="3918" y="3120.1567">portNumBits fInitialPortNum;</text><polygon fill="none" points="3909,3126.5852,3913,3130.5852,3909,3134.5852,3905,3130.5852" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="3918" y="3135.1797">Boolean fMultiplexRTCPWithRTP;</text><polygon fill="none" points="3909,3141.6082,3913,3145.6082,3909,3149.6082,3905,3145.6082" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="3918" y="3150.2026">void* fLastStreamToken;</text><polygon fill="none" points="3909,3156.6311,3913,3160.6311,3909,3164.6311,3905,3160.6311" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="3918" y="3165.2256">char fCNAME[100]; // for RTCP</text><polygon fill="none" points="3909,3171.6541,3913,3175.6541,3909,3179.6541,3905,3175.6541" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="3918" y="3180.2485">RTCPAppHandlerFunc* fAppHandlerTask;</text><polygon fill="none" points="3909,3186.677,3913,3190.677,3909,3194.677,3905,3190.677" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="3918" y="3195.2715">void* fAppHandlerClientData;</text><polygon fill="none" points="3909,3201.7,3913,3205.7,3909,3209.7,3905,3205.7" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3918" y="3210.2944">friend class StreamState;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3899" x2="4572" y1="3216.7114" y2="3216.7114"/><polygon fill="#FFFF44" points="3909,3224.7229,3913,3228.7229,3909,3232.7229,3905,3228.7229" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="428" x="3918" y="3233.3174">OnDemandServerMediaSubsession(UsageEnvironment&amp; env, Boolean reuseFirstSource,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="3918" y="3248.3403">Boolean multiplexRTCPWithRTP = False);</text><polygon fill="#FFFF44" points="3909,3254.7688,3913,3258.7688,3909,3262.7688,3905,3258.7688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="3918" y="3263.3633">virtual ~OnDemandServerMediaSubsession();</text><polygon fill="#FFFF44" points="3909,3269.7917,3913,3273.7917,3909,3277.7917,3905,3273.7917" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3918" y="3278.3862">virtual char const* sdpLines();</text><polygon fill="#FFFF44" points="3909,3284.8147,3913,3288.8147,3909,3292.8147,3905,3288.8147" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="3918" y="3293.4092">virtual void getStreamParameters(unsigned clientSessionId,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="3918" y="3308.4321">void*&amp; streamToken);</text><polygon fill="#FFFF44" points="3909,3314.8606,3913,3318.8606,3909,3322.8606,3905,3318.8606" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="3918" y="3323.4551">virtual void startStream(unsigned clientSessionId, void* streamToken,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="3918" y="3338.478">void* serverRequestAlternativeByteHandlerClientData);</text><polygon fill="#FFFF44" points="3909,3344.9065,3913,3348.9065,3909,3352.9065,3905,3348.9065" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="3918" y="3353.501">virtual void pauseStream(unsigned clientSessionId, void* streamToken);</text><polygon fill="#FFFF44" points="3909,3359.9294,3913,3363.9294,3909,3367.9294,3905,3363.9294" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="649" x="3918" y="3368.5239">virtual void seekStream(unsigned clientSessionId, void* streamToken, double&amp; seekNPT, double streamDuration, u_int64_t&amp; numBytes);</text><polygon fill="#FFFF44" points="3909,3374.9524,3913,3378.9524,3909,3382.9524,3905,3378.9524" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="498" x="3918" y="3383.5469">virtual void seekStream(unsigned clientSessionId, void* streamToken, char*&amp; absStart, char*&amp; absEnd);</text><polygon fill="#FFFF44" points="3909,3389.9753,3913,3393.9753,3909,3397.9753,3905,3393.9753" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="3918" y="3398.5698">virtual void nullSeekStream(unsigned clientSessionId, void* streamToken,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="3918" y="3413.5928">double streamEndTime, u_int64_t&amp; numBytes);</text><polygon fill="#FFFF44" points="3909,3420.0212,3913,3424.0212,3909,3428.0212,3905,3424.0212" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="3918" y="3428.6157">virtual void setStreamScale(unsigned clientSessionId, void* streamToken, float scale);</text><polygon fill="#FFFF44" points="3909,3435.0442,3913,3439.0442,3909,3443.0442,3905,3439.0442" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="3918" y="3443.6387">virtual float getCurrentNPT(void* streamToken);</text><polygon fill="#FFFF44" points="3909,3450.0671,3913,3454.0671,3909,3458.0671,3905,3454.0671" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="3918" y="3458.6616">virtual FramedSource* getStreamSource(void* streamToken);</text><polygon fill="#FFFF44" points="3909,3465.0901,3913,3469.0901,3909,3473.0901,3905,3469.0901" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="3918" y="3473.6846">virtual void deleteStream(unsigned clientSessionId, void*&amp; streamToken);</text><polygon fill="#FFFF44" points="3909,3480.113,3913,3484.113,3909,3488.113,3905,3484.113" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="3918" y="3488.7075">virtual char const* getAuxSDPLine(RTPSink* rtpSink,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3918" y="3503.7305">FramedSource* inputSource);</text><polygon fill="#FFFF44" points="3909,3510.1589,3913,3514.1589,3909,3518.1589,3905,3514.1589" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="606" x="3918" y="3518.7534">virtual void seekStreamSource(FramedSource* inputSource, double&amp; seekNPT, double streamDuration, u_int64_t&amp; numBytes);</text><polygon fill="#FFFF44" points="3909,3525.1819,3913,3529.1819,3909,3533.1819,3905,3529.1819" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="3918" y="3533.7764">virtual void seekStreamSource(FramedSource* inputSource, char*&amp; absStart, char*&amp; absEnd);</text><polygon fill="#FFFF44" points="3909,3540.2048,3913,3544.2048,3909,3548.2048,3905,3544.2048" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="3918" y="3548.7993">virtual void setStreamSourceScale(FramedSource* inputSource, float scale);</text><polygon fill="#FFFF44" points="3909,3555.2278,3913,3559.2278,3909,3563.2278,3905,3559.2278" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="548" x="3918" y="3563.8223">virtual void setStreamSourceDuration(FramedSource* inputSource, double streamDuration, u_int64_t&amp; numBytes);</text><polygon fill="#FFFF44" points="3909,3570.2507,3913,3574.2507,3909,3578.2507,3905,3574.2507" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="3918" y="3578.8452">virtual void closeStreamSource(FramedSource* inputSource);</text><polygon fill="#FFFF44" points="3909,3585.2737,3913,3589.2737,3909,3593.2737,3905,3589.2737" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="3918" y="3593.8682">virtual FramedSource* createNewStreamSource(unsigned clientSessionId,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="3918" y="3608.8911">unsigned&amp; estBitrate) = 0;</text><polygon fill="#FFFF44" points="3909,3615.3196,3913,3619.3196,3909,3623.3196,3905,3619.3196" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="3918" y="3623.9141">virtual RTPSink* createNewRTPSink(Groupsock* rtpGroupsock,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="3918" y="3638.937">FramedSource* inputSource) = 0;</text><polygon fill="#FFFF44" points="3909,3645.3655,3913,3649.3655,3909,3653.3655,3905,3649.3655" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="3918" y="3653.96">virtual Groupsock* createGroupsock(struct in_addr const&amp; addr, Port port);</text><ellipse cx="3909" cy="3665.3884" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="3918" y="3668.9829">void multiplexRTCPWithRTP() { fMultiplexRTCPWithRTP = True; }</text><ellipse cx="3909" cy="3680.4114" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="3918" y="3684.0059">void setRTCPAppPacketHandler(RTCPAppHandlerFunc* handler, void* clientData);</text><ellipse cx="3909" cy="3695.4343" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="3918" y="3699.0288">void sendRTCPAppPacket(u_int8_t subtype, char const* name,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="3918" y="3714.0518">u_int8_t* appDependentData, unsigned appDependentDataSize);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3906" y="3722.4802"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="3918" y="3729.0747">void setSDPLinesFromRTPSink(RTPSink* rtpSink, FramedSource* inputSource,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="3918" y="3744.0977">unsigned estBitrate);</text><!--class StreamState--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="588.8262" id="StreamState" style="stroke: #A80036; stroke-width: 1.5;" width="403" x="3602" y="3916"/><ellipse cx="3765.25" cy="3932" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3763.8281,3937.3594 Q3761.9688,3937.3594 3760.875,3935.9688 Q3759.7813,3934.5781 3759.7813,3931.5938 Q3759.7813,3929.0625 3760.9453,3927.4063 Q3762.1094,3925.75 3764.0938,3925.75 Q3765.5625,3925.75 3766.0313,3925.875 Q3766.5,3926.0781 3766.5,3926.0781 Q3766.5,3926.0781 3766.5,3926.0078 Q3766.5,3925.9375 3767.1094,3925.0156 L3768.1563,3928.6719 L3766.8281,3929.0781 Q3766.3594,3927.5313 3765.6953,3926.8672 Q3765.0313,3926.2031 3763.9688,3926.2031 Q3763.5781,3926.2031 3762.8125,3927.7344 Q3762.0469,3929.2656 3762.0469,3931.5156 Q3762.0469,3933.9844 3762.7109,3935.375 Q3763.375,3936.7656 3763.9063,3936.7656 Q3764.9688,3936.7656 3765.7266,3936 Q3766.4844,3935.2344 3766.8281,3933.5781 L3768.1563,3934.1719 Q3767.8281,3935.5781 3766.9297,3936.4688 Q3766.0313,3937.3594 3763.8281,3937.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="3785.75" y="3937.5576">StreamState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3603" x2="4004" y1="3948" y2="3948"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="3622" y="3964.606">Port const&amp; serverRTPPort, Port const&amp; serverRTCPPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3622" y="3979.6289">RTPSink* rtpSink, BasicUDPSink* udpSink,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="3622" y="3994.6519">unsigned totalBW, FramedSource* mediaSource,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="3622" y="4009.6748">TaskFunc* rtcpRRHandler, void* rtcpRRHandlerClientData,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="3622" y="4024.6978">ServerRequestAlternativeByteHandler* serverRequestAlternativeByteHandler,</text><ellipse cx="3613" cy="4036.1262" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="3622" y="4039.7207">private:</text><ellipse cx="3613" cy="4051.1492" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="3622" y="4054.7437">OnDemandServerMediaSubsession&amp; fMaster;</text><ellipse cx="3613" cy="4066.1721" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="3622" y="4069.7666">Boolean fAreCurrentlyPlaying;</text><ellipse cx="3613" cy="4081.1951" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="3622" y="4084.7896">unsigned fReferenceCount;</text><ellipse cx="3613" cy="4096.218" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="3622" y="4099.8125">Port fServerRTPPort, fServerRTCPPort;</text><ellipse cx="3613" cy="4111.241" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="3622" y="4114.8354">RTPSink* fRTPSink;</text><ellipse cx="3613" cy="4126.2639" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3622" y="4129.8584">BasicUDPSink* fUDPSink;</text><ellipse cx="3613" cy="4141.2869" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="3622" y="4144.8813">float fStreamDuration;</text><ellipse cx="3613" cy="4156.3098" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3622" y="4159.9043">unsigned fTotalBW;</text><ellipse cx="3613" cy="4171.3328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3622" y="4174.9272">RTCPInstance* fRTCPInstance;</text><ellipse cx="3613" cy="4186.3557" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3622" y="4189.9502">FramedSource* fMediaSource;</text><ellipse cx="3613" cy="4201.3787" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="3622" y="4204.9731">float fStartNPT;</text><ellipse cx="3613" cy="4216.4016" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3622" y="4219.9961">Groupsock* fRTPgs;</text><ellipse cx="3613" cy="4231.4246" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="3622" y="4235.019">Groupsock* fRTCPgs;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3603" x2="4004" y1="4241.436" y2="4241.436"/><ellipse cx="3613" cy="4254.4475" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="3622" y="4258.042">StreamState(OnDemandServerMediaSubsession&amp; master,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="3622" y="4273.0649">Groupsock* rtpGS, Groupsock* rtcpGS);</text><ellipse cx="3613" cy="4284.4934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3622" y="4288.0879">virtual ~StreamState();</text><ellipse cx="3613" cy="4299.5164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="3622" y="4303.1108">void startPlaying(Destinations* destinations,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="3622" y="4318.1338">void* serverRequestAlternativeByteHandlerClientData);</text><ellipse cx="3613" cy="4329.5623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="3622" y="4333.1567">void pause();</text><ellipse cx="3613" cy="4344.5852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="3622" y="4348.1797">void sendRTCPAppPacket(u_int8_t subtype, char const* name,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="3622" y="4363.2026">u_int8_t* appDependentData, unsigned appDependentDataSize);</text><ellipse cx="3613" cy="4374.6311" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="3622" y="4378.2256">void endPlaying(Destinations* destinations);</text><ellipse cx="3613" cy="4389.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="3622" y="4393.2485">void reclaim();</text><ellipse cx="3613" cy="4404.677" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="3622" y="4408.2715">unsigned&amp; referenceCount() { return fReferenceCount; }</text><ellipse cx="3613" cy="4419.7" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="3622" y="4423.2944">Port const&amp; serverRTPPort() const { return fServerRTPPort; }</text><ellipse cx="3613" cy="4434.7229" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="3622" y="4438.3174">Port const&amp; serverRTCPPort() const { return fServerRTCPPort; }</text><ellipse cx="3613" cy="4449.7458" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="3622" y="4453.3403">RTPSink* rtpSink() const { return fRTPSink; }</text><ellipse cx="3613" cy="4464.7688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="3622" y="4468.3633">float streamDuration() const { return fStreamDuration; }</text><ellipse cx="3613" cy="4479.7917" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3622" y="4483.3862">FramedSource* mediaSource() const { return fMediaSource; }</text><ellipse cx="3613" cy="4494.8147" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="3622" y="4498.4092">float&amp; startNPT() { return fStartNPT; }</text><!--class Destinations--><rect fill="#FEFECE" filter="url(#fmopi22pz7573)" height="198.2295" id="Destinations" style="stroke: #A80036; stroke-width: 1.5;" width="424" x="3590.5" y="5541.5"/><ellipse cx="3763.25" cy="5557.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3761.8281,5562.8594 Q3759.9688,5562.8594 3758.875,5561.4688 Q3757.7813,5560.0781 3757.7813,5557.0938 Q3757.7813,5554.5625 3758.9453,5552.9063 Q3760.1094,5551.25 3762.0938,5551.25 Q3763.5625,5551.25 3764.0313,5551.375 Q3764.5,5551.5781 3764.5,5551.5781 Q3764.5,5551.5781 3764.5,5551.5078 Q3764.5,5551.4375 3765.1094,5550.5156 L3766.1563,5554.1719 L3764.8281,5554.5781 Q3764.3594,5553.0313 3763.6953,5552.3672 Q3763.0313,5551.7031 3761.9688,5551.7031 Q3761.5781,5551.7031 3760.8125,5553.2344 Q3760.0469,5554.7656 3760.0469,5557.0156 Q3760.0469,5559.4844 3760.7109,5560.875 Q3761.375,5562.2656 3761.9063,5562.2656 Q3762.9688,5562.2656 3763.7266,5561.5 Q3764.4844,5560.7344 3764.8281,5559.0781 L3766.1563,5559.6719 Q3765.8281,5561.0781 3764.9297,5561.9688 Q3764.0313,5562.8594 3761.8281,5562.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="3783.75" y="5563.0576">Destinations</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3591.5" x2="4013.5" y1="5573.5" y2="5573.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3610.5" y="5590.106">Port const&amp; rtpDestPort,</text><ellipse cx="3601.5" cy="5601.5344" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="3610.5" y="5605.1289">Boolean isTCP;</text><ellipse cx="3601.5" cy="5616.5574" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3610.5" y="5620.1519">struct in_addr addr;</text><ellipse cx="3601.5" cy="5631.5803" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="3610.5" y="5635.1748">Port rtpPort;</text><ellipse cx="3601.5" cy="5646.6033" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="3610.5" y="5650.1978">Port rtcpPort;</text><ellipse cx="3601.5" cy="5661.6262" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="3610.5" y="5665.2207">int tcpSocketNum;</text><ellipse cx="3601.5" cy="5676.6492" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="3610.5" y="5680.2437">unsigned char rtpChannelId, rtcpChannelId;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3591.5" x2="4013.5" y1="5686.6606" y2="5686.6606"/><ellipse cx="3601.5" cy="5699.6721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="3610.5" y="5703.2666">Destinations(struct in_addr const&amp; destAddr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="3610.5" y="5718.2896">Port const&amp; rtcpDestPort);</text><ellipse cx="3601.5" cy="5729.718" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="398" x="3610.5" y="5733.3125">Destinations(int tcpSockNum, unsigned char rtpChanId, unsigned char rtcpChanId);</text><!--link GenericMediaServer to Medium--><path d="M2656.75,5822.43 C2728.09,6026.76 2862.62,6363.032 3047.5,6611 C3081.48,6656.58 3122.95,6700.418 3165.46,6740.175 " fill="none" id="GenericMediaServer-Medium" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3170.25,6735.076,3180.21,6753.78,3160.76,6745.369,3170.25,6735.076" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ClientConnection to GenericMediaServer--><path d="M2752.19,4362.22 C2713.48,4622.29 2645.65,5155.09 2614.23,5443.55 " fill="none" id="ClientConnection-GenericMediaServer" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2613.4417" cy="5450.8465" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2614.3034" x2="2612.58" y1="5442.8931" y2="5458.8"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2621.3951" x2="2605.4882" y1="5451.7082" y2="5449.9849"/><polygon fill="#A80036" points="2754.45,4347.13,2749.1658,4355.4413,2753.7123,4352.0753,2757.0783,4356.6217,2754.45,4347.13" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2753.7123" x2="2752.225" y1="4352.0753" y2="4361.965"/><!--link ClientConnection to GenericMediaServer--><path d="M2770.63,4347.13 C2744.57,4604.08 2674.21,5162.13 2631.5,5453.67 " fill="none" id="ClientConnection-GenericMediaServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2630.75,5458.8,2635.9961,5450.4646,2631.4651,5453.8514,2628.0783,5449.3204,2630.75,5458.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ClientSession to GenericMediaServer--><path d="M2258.37,4301.68 C2307.87,4529.3 2457.09,5131.18 2540.71,5444.19 " fill="none" id="ClientSession-GenericMediaServer" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2542.5773" cy="5451.1432" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2540.5046" x2="2544.65" y1="5443.4163" y2="5458.87"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2550.3042" x2="2534.8505" y1="5449.0705" y2="5453.2158"/><polygon fill="#A80036" points="2255.21,4287.02,2253.2038,4296.6624,2256.2674,4291.9069,2261.0229,4294.9705,2255.21,4287.02" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2256.2674" x2="2258.37" y1="4291.9069" y2="4301.68"/><!--link ClientSession to GenericMediaServer--><path d="M2267.8,4287.02 C2330.26,4504.48 2488.87,5136.76 2561.64,5453.76 " fill="none" id="ClientSession-GenericMediaServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2562.81,5458.87,2564.7025,5449.2047,2561.6951,5453.9959,2556.9039,5450.9885,2562.81,5458.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServer to GenericMediaServer--><path d="M2417.24,2651.26 C2425.59,2671.05 2433.09,2691 2439.5,2711 C2503.97,2912.07 2498.61,4399.24 2511.5,4610 C2529.14,4898.42 2559.03,5231.51 2578.77,5438.85 " fill="none" id="RTSPServer-GenericMediaServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2585.74,5438.25,2580.68,5458.83,2571.81,5439.59,2585.74,5438.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServer to RTSPClientConnection--><path d="M2359.38,1806.83 C2369.7,1788.47 2380.04,1770.1 2390.3,1751.84 " fill="none" id="RTSPServer-RTSPClientConnection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2392.91,1747.2,2385.0049,1753.0745,2390.4539,1751.5552,2391.9733,1757.0042,2392.91,1747.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServer to RTSPClientConnection--><path d="M2393.14,1793.47 C2399.29,1782.52 2405.41,1771.58 2411.49,1760.67 " fill="none" id="RTSPServer-RTSPClientConnection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2418.99,1747.2,2411.1198,1753.1212,2416.5598,1751.5697,2418.1113,1757.0096,2418.99,1747.2" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2416.5598" x2="2411.695" y1="1751.5697" y2="1760.31"/><ellipse cx="2389.5439" cy="1799.8584" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2393.4678" x2="2385.62" y1="1792.8868" y2="1806.83"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2396.5155" x2="2382.5723" y1="1803.7823" y2="1795.9345"/><!--link RTSPClientConnection to RTSPServer--><path d="M2366.84,1747.2 C2356.46,1765.44 2346.07,1783.8 2335.75,1802.16 " fill="none" id="RTSPClientConnection-RTSPServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2333.13,1806.83,2341.0351,1800.9555,2335.5861,1802.4748,2334.0667,1797.0258,2333.13,1806.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServer to RTSPClientSession--><path d="M2096.54,2651.19 C2095.8,2750.73 2096.47,2854.54 2098.57,2946.3 " fill="none" id="RTSPServer-RTSPClientSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2098.69,2951.5,2102.4833,2942.4109,2098.5757,2946.5013,2094.4854,2942.5938,2098.69,2951.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServer to RTSPClientSession--><path d="M2122.5,2666.38 C2122.5,2757.64 2122.5,2851.78 2122.5,2936.37 " fill="none" id="RTSPServer-RTSPClientSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2122.5,2951.5,2126.5,2942.5,2122.5,2946.5,2118.5,2942.5,2122.5,2951.5" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2122.5" x2="2122.5" y1="2946.5" y2="2936.5"/><ellipse cx="2122.5" cy="2659.19" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2122.5" x2="2122.5" y1="2667.19" y2="2651.19"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2114.5" x2="2130.5" y1="2659.19" y2="2659.19"/><!--link RTSPClientSession to RTSPServer--><path d="M2146.31,2951.5 C2148.46,2860.01 2149.19,2756.12 2148.49,2656.25 " fill="none" id="RTSPClientSession-RTSPServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2148.46,2651.19,2144.5115,2660.2127,2148.4886,2656.1899,2152.5114,2660.167,2148.46,2651.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServer to ServerMediaSessionIterator--><path d="M1818.22,2651.29 C1807.7,2671.21 1797.73,2691.17 1788.5,2711 C1714.38,2870.26 1666.4,3073.62 1652.52,3171.79 " fill="none" id="RTSPServer-ServerMediaSessionIterator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1651.8,3176.96,1656.9955,3168.593,1652.4851,3172.0072,1649.0709,3167.4968,1651.8,3176.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServer to ServerMediaSessionIterator--><path d="M1846.15,2664.83 C1838.22,2680.25 1830.64,2695.66 1823.5,2711 C1751.66,2865.36 1704.38,3061.13 1676.5,3162.42 " fill="none" id="RTSPServer-ServerMediaSessionIterator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1672.44,3176.96,1678.711,3169.3656,1673.7834,3172.1438,1671.0052,3167.2162,1672.44,3176.96" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1673.7834" x2="1676.475" y1="3172.1438" y2="3162.51"/><ellipse cx="1849.507" cy="2658.3866" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1845.814" x2="1853.2" y1="2665.4832" y2="2651.29"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1842.4104" x2="1856.6036" y1="2654.6936" y2="2662.0796"/><!--link RTSPServer to RegisterRequestRecord--><path d="M1806.94,2434.32 C1700.67,2512.66 1586.57,2608.14 1497.5,2711 C1383.97,2842.11 1293.84,3024.25 1245.2,3134.25 " fill="none" id="RTSPServer-RegisterRequestRecord" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1243.05,3139.1,1250.3567,3132.496,1245.078,3134.5298,1243.0443,3129.2511,1243.05,3139.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RegisterRequestRecord to RTSPRegisterSender--><path d="M1140.03,3322.65 C1023.07,3484.59 776.372,3826.15 625.575,4034.94 " fill="none" id="RegisterRequestRecord-RTSPRegisterSender" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="631.149,4039.18,613.764,4051.29,619.8,4030.98,631.149,4039.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPRegisterSender to RTSPClient--><path d="M560.239,4369.78 C592.842,4454.73 635.987,4567.16 683.154,4690.07 " fill="none" id="RTSPRegisterSender-RTSPClient" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="689.818,4687.9,690.449,4709.08,676.748,4692.92,689.818,4687.9" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPRegisterSender to RequestRecord_REGISTER--><path d="M478.987,4384.82 C443.927,4681.08 373.41,5276.93 343.932,5526 " fill="none" id="RTSPRegisterSender-RequestRecord_REGISTER" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="342.135,5541.19,347.1698,5532.7253,342.7254,5536.225,339.2258,5531.7806,342.135,5541.19" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="342.7254" x2="343.8985" y1="5536.225" y2="5526.29"/><ellipse cx="479.8308" cy="4377.7249" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="478.8936" x2="480.768" y1="4385.6698" y2="4369.78"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="471.8859" x2="487.7757" y1="4376.7877" y2="4378.6621"/><!--link RequestRecord_REGISTER to RequestRecord--><path d="M341.73,5739.71 C363.723,5932.03 413.176,6364.49 445.932,6650.94 " fill="none" id="RequestRecord_REGISTER-RequestRecord" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="452.894,6650.212,448.212,6670.878,438.985,6651.802,452.894,6650.212" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServerWithREGISTERProxying to RTSPServer--><path d="M1321.88,1567.25 C1366.18,1627.94 1418.32,1692.98 1472.5,1747 C1568.01,1842.22 1683.37,1933.71 1790.24,2010.86 " fill="none" id="RTSPServerWithREGISTERProxying-RTSPServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1794.46,2005.28,1806.62,2022.63,1786.29,2016.65,1794.46,2005.28" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPClientConnection to ClientConnection--><path d="M2590.75,1747.04 C2590.26,1767.32 2589.84,1787.41 2589.5,1807 C2583.05,2182.06 2566.76,2276.58 2589.5,2651 C2621.41,3176.49 2713.32,3796.17 2756.53,4068.8 " fill="none" id="RTSPClientConnection-ClientConnection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2757.35,4073.98,2759.8875,4064.4636,2756.5651,4069.042,2751.9867,4065.7196,2757.35,4073.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPClientConnection to ParamsForREGISTER--><path d="M2707.11,1761.6 C2745.98,1894.32 2787.93,2031.93 2817.78,2122.96 " fill="none" id="RTSPClientConnection-ParamsForREGISTER" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2822.55,2137.44,2823.5282,2127.6398,2820.9832,2132.6918,2815.9312,2130.1468,2822.55,2137.44" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2820.9832" x2="2817.855" y1="2132.6918" y2="2123.195"/><ellipse cx="2705.147" cy="1754.8779" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2707.394" x2="2702.9" y1="1762.5559" y2="1747.2"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2697.4691" x2="2712.825" y1="1757.125" y2="1752.6309"/><!--link ParamsForREGISTER to RTSPClientConnection--><path d="M2839.46,2137.44 C2815.76,2044.96 2773.09,1895.08 2730.49,1752.28 " fill="none" id="ParamsForREGISTER-RTSPClientConnection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2728.97,1747.2,2727.7382,1756.9715,2730.4133,1751.9872,2735.3977,1754.6623,2728.97,1747.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPClientSession to ClientSession--><path d="M2156.73,3510.8 C2182.51,3720.84 2216.14,3994.76 2232.58,4128.67 " fill="none" id="RTSPClientSession-ClientSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2233.2,4133.76,2236.0896,4124.3446,2232.5992,4128.7962,2228.1475,4125.3059,2233.2,4133.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPClientSession to streamState--><path d="M2064.5,3525.77 C2021.2,3745.06 1965.53,4027 1941.46,4148.9 " fill="none" id="RTSPClientSession-streamState" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1938.55,4163.65,1944.2148,4155.5933,1939.5168,4158.7444,1936.3658,4154.0464,1938.55,4163.65" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1939.5168" x2="1941.46" y1="4158.7444" y2="4148.935"/><ellipse cx="2065.8957" cy="3518.6476" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2064.3415" x2="2067.45" y1="3526.4951" y2="3510.8"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2058.0482" x2="2073.7433" y1="3517.0933" y2="3520.2018"/><!--link RTSPServerSupportingHTTPStreaming to RTSPServer--><path d="M2298.94,434.04 C2284.81,452.63 2272.17,472.91 2263.5,494 C2157.38,752.15 2201.74,1469.03 2176.5,1747 C2175.32,1759.99 2174.09,1773.17 2172.81,1786.48 " fill="none" id="RTSPServerSupportingHTTPStreaming-RTSPServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2179.74,1787.53,2170.83,1806.76,2165.8,1786.17,2179.74,1787.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServerSupportingHTTPStreaming to RTSPClientConnectionSupportingHTTPStreaming--><path d="M2455.51,448.17 C2482.15,501.52 2513.69,564.68 2539.25,615.87 " fill="none" id="RTSPServerSupportingHTTPStreaming-RTSPClientConnectionSupportingHTTPStreaming" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2545.95,629.3,2545.507,619.4611,2543.7158,624.8269,2538.35,623.0358,2545.95,629.3" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2543.7158" x2="2539.255" y1="624.8269" y2="615.875"/><ellipse cx="2452.2216" cy="441.5885" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2455.7932" x2="2448.65" y1="448.7469" y2="434.43"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2445.0632" x2="2459.3801" y1="445.1601" y2="438.0168"/><!--link RTSPClientConnectionSupportingHTTPStreaming to RTSPClientConnection--><path d="M2589.66,797.73 C2590.88,844.47 2592.49,906.6 2594.21,972.67 " fill="none" id="RTSPClientConnectionSupportingHTTPStreaming-RTSPClientConnection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2601.21,972.63,2594.73,992.81,2587.21,973,2601.21,972.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--link DynamicRTSPServer to RTSPServerSupportingHTTPStreaming--><path d="M2399.5,176.28 C2399.5,189.02 2399.5,202.37 2399.5,215.69 " fill="none" id="DynamicRTSPServer-RTSPServerSupportingHTTPStreaming" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2406.5,215.79,2399.5,235.79,2392.5,215.79,2406.5,215.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPClient to Medium--><path d="M1404.73,5987.82 C1635.65,6194.795 1951.85,6448.295 2271.5,6611 C2540.89,6748.122 2877.53,6832.279 3113.78,6878.901 " fill="none" id="RTSPClient-Medium" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3115.18,6872.041,3133.47,6882.745,3112.49,6885.782,3115.18,6872.041" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPClient to RequestQueue--><path d="M1047.5,6626.365 C1047.5,6698.943 1047.5,6763.308 1047.5,6813.673 " fill="none" id="RTSPClient-RequestQueue" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1047.5,6828.847,1051.5,6819.847,1047.5,6823.847,1043.5,6819.847,1047.5,6828.847" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1047.5" x2="1047.5" y1="6823.847" y2="6813.847"/><ellipse cx="1047.5" cy="6619.297" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1047.5" x2="1047.5" y1="6627.297" y2="6611.297"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1039.5" x2="1055.5" y1="6619.297" y2="6619.297"/><!--link RTSPClient to RequestRecord--><path d="M683.892,6587.845 C680.108,6595.609 676.31,6603.329 672.5,6611 C664.827,6626.449 656.627,6642.121 648.095,6657.8 " fill="none" id="RTSPClient-RequestRecord" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="640.855,6670.968,648.6969,6665.0094,643.2644,6666.5868,641.687,6661.1543,640.855,6670.968" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="643.2644" x2="648.0825" y1="6666.5868" y2="6657.824"/><ellipse cx="686.9757" cy="6581.4835" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="683.4854" x2="690.466" y1="6588.6819" y2="6574.285"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="679.7773" x2="694.1742" y1="6577.9932" y2="6584.9737"/><!--link HandlerServerForREGISTERCommand to RTSPServer--><path d="M1871.72,1506.79 C1898.56,1583.99 1933.85,1685.48 1969.45,1787.85 " fill="none" id="HandlerServerForREGISTERCommand-RTSPServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1976.14,1785.77,1976.1,1806.96,1962.92,1790.37,1976.14,1785.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ProxyRTSPClient to RTSPClient--><path d="M3987.5,765.88 C3721.71,818.11 3288.43,896.38 2910.5,933 C2799.97,943.71 990.958,914.41 912.5,993 C524.549,1381.61 877.5,1678.89 877.5,2228 C877.5,2228 877.5,2228 877.5,3232 C877.5,3698.83 909.699,4215.32 946.07,4649.82 " fill="none" id="ProxyRTSPClient-RTSPClient" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="953.049,4649.28,947.75,4669.79,939.098,4650.45,953.049,4649.28" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ProxyRTSPClient to ProxyServerMediaSession--><path d="M4324.03,933.35 C4350.35,993.38 4379.78,1058.9 4408.06,1120.47 " fill="none" id="ProxyRTSPClient-ProxyServerMediaSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4410.27,1125.27,4410.1244,1115.4222,4408.172,1120.7315,4402.8628,1118.779,4410.27,1125.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ProxyServerMediaSession to ProxyRTSPClient--><path d="M4435.75,1125.27 C4408.69,1063.91 4379.07,998.36 4351.14,938.05 " fill="none" id="ProxyServerMediaSession-ProxyRTSPClient" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4348.96,933.35,4349.1056,943.1978,4351.058,937.8885,4356.3672,939.841,4348.96,933.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ProxyRTSPClient to ProxyServerMediaSubsession--><path d="M4228.21,933.36 C4223.28,1240.14 4223.62,1791.05 4229.22,2064.63 " fill="none" id="ProxyRTSPClient-ProxyServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4229.32,2069.84,4233.1392,2060.7618,4229.22,2064.841,4225.1408,2060.9218,4229.32,2069.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ProxyServerMediaSubsession to ProxyRTSPClient--><path d="M4246.16,2069.84 C4252.16,1799.69 4252.58,1248.61 4247.43,938.82 " fill="none" id="ProxyServerMediaSubsession-ProxyRTSPClient" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4247.34,933.36,4243.4949,942.4272,4247.4257,938.3593,4251.4937,942.2901,4247.34,933.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ServerMediaSession to Medium--><path d="M4323.75,5942.76 C4304.37,6151.26 4247.98,6423.826 4093.5,6611 C3993.11,6732.633 3835.69,6809.666 3696.75,6857.186 " fill="none" id="ServerMediaSession-Medium" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3698.91,6863.847,3677.72,6863.553,3694.47,6850.57,3698.91,6863.847" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ServerMediaSession to ServerMediaSubsessionIterator--><path d="M4361.21,5942.89 C4391.75,6242.529 4436.49,6681.594 4454.04,6853.833 " fill="none" id="ServerMediaSession-ServerMediaSubsessionIterator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4454.56,6858.851,4457.626,6849.4915,4454.0526,6853.8768,4449.6673,6850.3034,4454.56,6858.851" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ServerMediaSubsession to Medium--><path d="M4119.76,4610.06 C4113.61,4630.1 4108.12,4650.15 4103.5,4670 C4054.56,4880.19 4148,6429.328 4031.5,6611 C3955.79,6729.069 3821.44,6804.868 3696.56,6852.53 " fill="none" id="ServerMediaSubsession-Medium" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3699,6859.092,3677.81,6859.505,3694.12,6845.97,3699,6859.092" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ServerMediaSubsession to ServerMediaSession--><path d="M4314.64,4610.23 C4318.17,4839.05 4322.53,5121.94 4325.78,5333.2 " fill="none" id="ServerMediaSubsession-ServerMediaSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4325.86,5338.49,4329.7051,5329.4228,4325.7743,5333.4907,4321.7063,5329.5599,4325.86,5338.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ServerMediaSubsession to ServerMediaSubsessionIterator--><path d="M4539.31,4610.04 C4546.29,4629.98 4552.43,4650.03 4557.5,4670 C4769.89,5506.11 4684.26,5757.7 4557.5,6611 C4544.79,6696.537 4513.74,6790.968 4490.36,6854.123 " fill="none" id="ServerMediaSubsession-ServerMediaSubsessionIterator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4488.55,6858.995,4495.4366,6851.9541,4490.2931,6854.3087,4487.9385,6849.1651,4488.55,6858.995" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ProxyServerMediaSession to ServerMediaSession--><path d="M4569.28,1614.62 C4577.21,1677.17 4584.43,1744.46 4588.5,1807 C4669.39,3050.15 4741.66,3373.8 4587.5,4610 C4557.4,4851.39 4489.97,5117.68 4431.73,5318.95 " fill="none" id="ProxyServerMediaSession-ServerMediaSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4438.43,5320.97,4426.12,5338.22,4424.99,5317.06,4438.43,5320.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ProxyServerMediaSession to ProxyServerMediaSubsession--><path d="M4448.66,1614.58 C4399,1758.82 4337.44,1937.66 4293.63,2064.94 " fill="none" id="ProxyServerMediaSession-ProxyServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4291.95,2069.82,4298.6432,2062.595,4293.5654,2065.0881,4291.0722,2060.0103,4291.95,2069.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MediaSource to Medium--><path d="M3289.08,5784.6 C3312.69,6016.29 3359.31,6473.77 3385.83,6734.017 " fill="none" id="MediaSource-Medium" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3392.8,6733.342,3387.87,6753.948,3378.87,6734.761,3392.8,6733.342" style="stroke: #A80036; stroke-width: 1.0;"/><!--link FramedSource to MediaSource--><path d="M3274.5,4490.22 C3274.5,4783.76 3274.5,5236.02 3274.5,5476.32 " fill="none" id="FramedSource-MediaSource" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3281.5,5476.43,3274.5,5496.43,3267.5,5476.43,3281.5,5476.43" style="stroke: #A80036; stroke-width: 1.0;"/><!--link FramedFilter to FramedSource--><path d="M3021.37,3322.65 C3059.29,3455.5 3131.71,3709.23 3189.41,3911.38 " fill="none" id="FramedFilter-FramedSource" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3196.19,3909.62,3194.95,3930.78,3182.73,3913.46,3196.19,3909.62" style="stroke: #A80036; stroke-width: 1.0;"/><!--link PresentationTimeSubsessionNormalizer to FramedFilter--><path d="M3413.63,2358.03 C3345.32,2452.22 3254.9,2585.23 3190.5,2711 C3121.12,2846.5 3063.04,3012.67 3028.78,3119.89 " fill="none" id="PresentationTimeSubsessionNormalizer-FramedFilter" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3035.37,3122.25,3022.66,3139.21,3022.02,3118.03,3035.37,3122.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--link PresentationTimeSubsessionNormalizer to PresentationTimeSessionNormalizer--><path d="M3504.84,2358.18 C3504.45,2553.32 3513.76,2922.2 3523.94,3111.45 " fill="none" id="PresentationTimeSubsessionNormalizer-PresentationTimeSessionNormalizer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3524.22,3116.72,3527.7263,3107.5164,3523.949,3111.7274,3519.738,3107.9501,3524.22,3116.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--link PresentationTimeSessionNormalizer to PresentationTimeSubsessionNormalizer--><path d="M3541.61,3116.72 C3542.83,2930.77 3533.8,2561.71 3523.37,2363.41 " fill="none" id="PresentationTimeSessionNormalizer-PresentationTimeSubsessionNormalizer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3523.09,2358.18,3519.5575,2367.3736,3523.3468,2363.1734,3527.547,2366.9627,3523.09,2358.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--link PresentationTimeSessionNormalizer to Medium--><path d="M3538.67,3345.03 C3552.38,3856.91 3601.42,5960.84 3501.5,6611 C3495.25,6651.637 3484.98,6694.301 3473.41,6734.668 " fill="none" id="PresentationTimeSessionNormalizer-Medium" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3480.1,6736.754,3467.74,6753.969,3466.66,6732.807,3480.1,6736.754" style="stroke: #A80036; stroke-width: 1.0;"/><!--link OnDemandServerMediaSubsession to ServerMediaSubsession--><path d="M4274.27,3751.16 C4275.25,3764.27 4276.23,3777.36 4277.2,3790.37 " fill="none" id="OnDemandServerMediaSubsession-ServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4284.21,3790.3,4278.72,3810.76,4270.25,3791.34,4284.21,3790.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--link OnDemandServerMediaSubsession to StreamState--><path d="M4006.06,3751.16 C3981.86,3805.91 3957.89,3860.15 3935.37,3911.11 " fill="none" id="OnDemandServerMediaSubsession-StreamState" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3933.33,3915.72,3940.6118,3909.0886,3935.3408,3911.1422,3933.2872,3905.8712,3933.33,3915.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--link StreamState to Destinations--><path d="M3803.29,4505.22 C3803.07,4826.01 3802.72,5322.54 3802.57,5536.09 " fill="none" id="StreamState-Destinations" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3802.57,5541.39,3806.57,5532.39,3802.57,5536.39,3798.57,5532.39,3802.57,5541.39" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ProxyServerMediaSubsession to OnDemandServerMediaSubsession--><path d="M4237.18,2388.18 C4237.02,2471.77 4236.8,2579.83 4236.58,2690.48 " fill="none" id="ProxyServerMediaSubsession-OnDemandServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4243.58,2690.81,4236.54,2710.8,4229.58,2690.78,4243.58,2690.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml

class Medium {
    + static Boolean lookupByName(UsageEnvironment& env, char const* mediumName, Medium*& resultMedium);
    + static void close(UsageEnvironment& env, char const* mediumName);
    + static void close(Medium* medium);
    + UsageEnvironment& envir() const;
    + char const* name() const;
    + virtual Boolean isSource() const;
    + virtual Boolean isSink() const;
    + virtual Boolean isRTCPInstance() const;
    + virtual Boolean isRTSPClient() const;
    + virtual Boolean isRTSPServer() const;
    + virtual Boolean isMediaSession() const;
    + virtual Boolean isServerMediaSession() const;
    + virtual Boolean isDarwinInjector() const;
    # friend class MediaLookupTable;
    # Medium(UsageEnvironment& env);
    # virtual ~Medium();
    # TaskToken& nextTask();
    - UsageEnvironment& fEnviron;
    - char fMediumName[mediumNameMaxLen];
    - TaskToken fNextTask;
}


class GenericMediaServer {
    + void addServerMediaSession(ServerMediaSession* serverMediaSession);
    + virtual ServerMediaSession* lookupServerMediaSession(char const* streamName, Boolean isFirstLookupInSession = True);
    + void removeServerMediaSession(ServerMediaSession* serverMediaSession);
    + void removeServerMediaSession(char const* streamName);
    + void closeAllClientSessionsForServerMediaSession(ServerMediaSession* serverMediaSession);
    + void closeAllClientSessionsForServerMediaSession(char const* streamName);
    + void deleteServerMediaSession(ServerMediaSession* serverMediaSession);
    + void deleteServerMediaSession(char const* streamName);
    # GenericMediaServer(UsageEnvironment& env, int ourSocket, Port ourPort);
    # virtual ~GenericMediaServer();
    # static int setUpOurSocket(UsageEnvironment& env, Port& ourPort);
    # static void incomingConnectionHandler(void*, int /*mask*/);
    # void incomingConnectionHandler();
    # void incomingConnectionHandlerOnSocket(int serverSocket);
    # virtual ClientConnection*
    # createNewClientConnection(int clientSocket, struct sockaddr_in clientAddr) = 0;
    # int fServerSocket;
    # Port fServerPort;
    # HashTable* fServerMediaSessions;
    # HashTable* fClientConnections;
    # HashTable* fClientSessions;
}
GenericMediaServer ..|> Medium


class ClientConnection {
    # ClientConnection(GenericMediaServer& ourServer, int clientSocket, struct sockaddr_in clientAddr);
    # virtual ~ClientConnection();
    # UsageEnvironment& envir() { return fOurServer.envir(); }
    # void closeSockets();
    # static void incomingRequestHandler(void*, int /*mask*/);
    # void incomingRequestHandler();
    # virtual void handleRequestBytes(int newBytesRead) = 0;
    # void resetRequestBuffer();
    # friend class GenericMediaServer;
    # GenericMediaServer& fOurServer;
    # int fOurSocket;
    # struct sockaddr_in fClientAddr;
    # unsigned char fRequestBuffer[REQUEST_BUFFER_SIZE];
    # unsigned char fResponseBuffer[RESPONSE_BUFFER_SIZE];
    # unsigned fRequestBytesAlreadySeen, fRequestBufferBytesLeft;
}
ClientConnection <- -+ GenericMediaServer
ClientConnection - -> GenericMediaServer


class ClientSession {
    + ClientSession(GenericMediaServer& ourServer, u_int32_t sessionId);
    + virtual ~ClientSession();
    + UsageEnvironment& envir();

    # friend class GenericMediaServer;
    # GenericMediaServer& fOurServer;
    # u_int32_t fOurSessionId;
    # ServerMediaSession* fOurServerMediaSession;
}
ClientSession <- -+ GenericMediaServer
ClientSession - -> GenericMediaServer


class RTSPServer {
    + static RTSPServer* createNew(UsageEnvironment& env, Port ourPort = 554,
    +     UserAuthenticationDatabase* authDatabase = NULL,
    +     unsigned reclamationTestSeconds = 65);
    + static Boolean lookupByName(UsageEnvironment& env, char const* name,
    +     RTSPServer*& resultServer);
    + typedef void(responseHandlerForREGISTER)(RTSPServer* rtspServer, unsigned requestId, int resultCode, char* resultString);
    + unsigned registerStream(ServerMediaSession* serverMediaSession,
    +     char const* remoteClientNameOrAddress, portNumBits remoteClientPortNum,
    +     responseHandlerForREGISTER* responseHandler,
    +     char const* username = NULL, char const* password = NULL,
    +     Boolean receiveOurStreamViaTCP = False,
    +     char const* proxyURLSuffix = NULL);
    + char* rtspURL(ServerMediaSession const* serverMediaSession, int clientSocket = -1) const;
    + char* rtspURLPrefix(int clientSocket = -1) const;
    + UserAuthenticationDatabase* setAuthenticationDatabase(UserAuthenticationDatabase* newDB);
    + void disableStreamingRTPOverTCP();
    + Boolean setUpTunnelingOverHTTP(Port httpPort);
    + portNumBits httpServerPortNum() const; // in host byte order.  (Returns 0 if not present.)
    # RTSPServer(UsageEnvironment& env,
          int ourSocket, Port ourPort,
          UserAuthenticationDatabase* authDatabase,
          unsigned reclamationTestSeconds);
    # virtual ~RTSPServer();
    # virtual char const* allowedCommandNames();
    # virtual Boolean weImplementREGISTER(char const* proxyURLSuffix, char*& responseStr);
    # virtual void implementCmd_REGISTER(char const* url, char const* urlSuffix, int socketToRemoteServer,
          Boolean deliverViaTCP, char const* proxyURLSuffix);
    # virtual UserAuthenticationDatabase* getAuthenticationDatabaseForCommand(char const* cmdName);
    # virtual Boolean specialClientAccessCheck(int clientSocket, struct sockaddr_in& clientAddr,
          char const* urlSuffix);
    # virtual Boolean specialClientUserAccessCheck(int clientSocket, struct sockaddr_in& clientAddr,
        char const* urlSuffix, char const* username);
    - virtual Boolean isRTSPServer() const;
    # virtual ClientConnection* createNewClientConnection(int clientSocket, struct sockaddr_in clientAddr);
    # virtual ClientSession* createNewClientSession(u_int32_t sessionId);
    - static void incomingConnectionHandlerHTTP(void*, int /*mask*/);
    - void incomingConnectionHandlerHTTP();
    - void noteTCPStreamingOnSocket(int socketNum, RTSPClientSession* clientSession, unsigned trackNum);
    - void unnoteTCPStreamingOnSocket(int socketNum, RTSPClientSession* clientSession, unsigned trackNum);
    - void stopTCPStreamingOnSocket(int socketNum);
    - friend class RTSPClientConnection;
    - friend class RTSPClientSession;
    - friend class ServerMediaSessionIterator;
    - friend class RegisterRequestRecord;
    - int fHTTPServerSocket;
    - Port fHTTPServerPort; 
    - HashTable* fClientConnectionsForHTTPTunneling;
    - HashTable* fTCPStreamingDatabase;
    - HashTable* fPendingRegisterRequests;
    - unsigned fRegisterRequestCounter;
    - UserAuthenticationDatabase* fAuthDB;
    - unsigned fReclamationTestSeconds;
    - Boolean fAllowStreamingRTPOverTCP;
}
RTSPServer - -|> GenericMediaServer
RTSPServer - -> RTSPClientConnection
RTSPServer - -> RTSPClientSession
RTSPServer - -> ServerMediaSessionIterator
RTSPServer - -> RegisterRequestRecord
RTSPServer +- -> RTSPClientConnection
RTSPServer +- -> RTSPClientSession
RTSPServer +- -> ServerMediaSessionIterator


class RegisterRequestRecord {
    + RegisterRequestRecord(RTSPServer& ourServer, unsigned requestId,
        char const* remoteClientNameOrAddress, portNumBits remoteClientPortNum, char const* rtspURLToRegister,
        RTSPServer::responseHandlerForREGISTER* responseHandler, Authenticator* authenticator,
        Boolean requestStreamingViaTCP, char const* proxyURLSuffix);
    + virtual ~RegisterRequestRecord();
    + void handleResponse(int resultCode, char* resultString);
    - RTSPServer& fOurServer;
    - unsigned fRequestId;
    - RTSPServer::responseHandlerForREGISTER* fResponseHandler;
}
RegisterRequestRecord - -|> RTSPRegisterSender


class RTSPRegisterSender {
    + static RTSPRegisterSender*
    + createNew(UsageEnvironment& env,
        char const* remoteClientNameOrAddress, portNumBits remoteClientPortNum, char const* rtspURLToRegister,
        RTSPClient::responseHandler* rtspResponseHandler, Authenticator* authenticator = NULL,
        Boolean requestStreamingViaTCP = False, char const* proxyURLSuffix = NULL, Boolean reuseConnection = False,
        int verbosityLevel = 0, char const* applicationName = NULL);
    + void grabConnection(int& sock, struct sockaddr_in& remoteAddress); // so that the socket doesn't get closed when we're deleted
    # RTSPRegisterSender(UsageEnvironment& env,
                char const* remoteClientNameOrAddress, portNumBits remoteClientPortNum, char const* rtspURLToRegister,
                RTSPClient::responseHandler* rtspResponseHandler, Authenticator* authenticator,
                Boolean requestStreamingViaTCP, char const* proxyURLSuffix, Boolean reuseConnection,
                int verbosityLevel, char const* applicationName);
    # virtual ~RTSPRegisterSender();
    # virtual Boolean setRequestFields(RequestRecord* request,
                                    char*& cmdURL, Boolean& cmdURLWasAllocated,
                                    char const*& protocolStr,
                                    char*& extraHeaders, Boolean& extraHeadersWereAllocated);
    - portNumBits fRemoteClientPortNum;
}
RTSPRegisterSender - -|> RTSPClient
RTSPRegisterSender +- -> RequestRecord_REGISTER


class RequestRecord_REGISTER {
    + RequestRecord_REGISTER(unsigned cseq, RTSPClient::responseHandler* rtspResponseHandler, char const* rtspURLToRegister,
                  Boolean reuseConnection, Boolean requestStreamingViaTCP, char const* proxyURLSuffix);
    + virtual ~RequestRecord_REGISTER();
    + char const* rtspURLToRegister() const { return fRTSPURLToRegister; }
    + Boolean reuseConnection() const { return fReuseConnection; }
    + Boolean requestStreamingViaTCP() const { return fRequestStreamingViaTCP; }
    + char const* proxyURLSuffix() const { return fProxyURLSuffix; }
    - char* fRTSPURLToRegister;
    - Boolean fReuseConnection, fRequestStreamingViaTCP;
    - char* fProxyURLSuffix;
}
RequestRecord_REGISTER - -|> RequestRecord


class RTSPServerWithREGISTERProxying {
    + static RTSPServerWithREGISTERProxying* createNew(UsageEnvironment& env, Port ourPort = 554,
        UserAuthenticationDatabase* authDatabase = NULL,
        UserAuthenticationDatabase* authDatabaseForREGISTER = NULL,
        unsigned reclamationTestSeconds = 65,
        Boolean streamRTPOverTCP = False,
        int verbosityLevelForProxying = 0);

    # RTSPServerWithREGISTERProxying(UsageEnvironment& env, int ourSocket, Port ourPort,
        UserAuthenticationDatabase* authDatabase, UserAuthenticationDatabase* authDatabaseForREGISTER,
        unsigned reclamationTestSeconds,
        Boolean streamRTPOverTCP, int verbosityLevelForProxying);
    # virtual ~RTSPServerWithREGISTERProxying();
    # virtual char const* allowedCommandNames();
    # virtual Boolean weImplementREGISTER(char const* proxyURLSuffix, char*& responseStr);
    # virtual void implementCmd_REGISTER(char const* url, char const* urlSuffix, int socketToRemoteServer,
        Boolean deliverViaTCP, char const* proxyURLSuffix);
    # virtual UserAuthenticationDatabase* getAuthenticationDatabaseForCommand(char const* cmdName);
    - Boolean fStreamRTPOverTCP;
    - int fVerbosityLevelForProxying;
    - unsigned fRegisteredProxyCounter;
    - char* fAllowedCommandNames;
    - UserAuthenticationDatabase* fAuthDBForREGISTER;
}
RTSPServerWithREGISTERProxying - -|> RTSPServer


class RTSPClientConnection {
    # virtual void handleRequestBytes(int newBytesRead);
    # RTSPClientConnection(RTSPServer& ourServer, int clientSocket, struct sockaddr_in clientAddr);
    # virtual ~RTSPClientConnection();
    # friend class RTSPServer;
    # virtual void handleCmd_OPTIONS();
    # virtual void handleCmd_GET_PARAMETER(char const* fullRequestStr);
    # virtual void handleCmd_SET_PARAMETER(char const* fullRequestStr);
    # virtual void handleCmd_DESCRIBE(char const* urlPreSuffix, char const* urlSuffix, char const* fullRequestStr);
    # virtual void handleCmd_REGISTER(char const* url, char const* urlSuffix, char const* fullRequestStr,
    #     Boolean reuseConnection, Boolean deliverViaTCP, char const* proxyURLSuffix);
    # virtual void handleCmd_bad();
    # virtual void handleCmd_notSupported();
    # virtual void handleCmd_notFound();
    # virtual void handleCmd_sessionNotFound();
    # virtual void handleCmd_unsupportedTransport();
    # virtual Boolean parseHTTPRequestString(char* resultCmdName, unsigned resultCmdNameMaxSize,
    #     char* urlSuffix, unsigned urlSuffixMaxSize,
    #     char* sessionCookie, unsigned sessionCookieMaxSize,
    #     char* acceptStr, unsigned acceptStrMaxSize);
    # virtual void handleHTTPCmd_notSupported();
    # virtual void handleHTTPCmd_notFound();
    # virtual void handleHTTPCmd_OPTIONS();
    # virtual void handleHTTPCmd_TunnelingGET(char const* sessionCookie);
    # virtual Boolean handleHTTPCmd_TunnelingPOST(char const* sessionCookie, unsigned char const* extraData, unsigned extraDataSize);
    # virtual void handleHTTPCmd_StreamingGET(char const* urlSuffix, char const* fullRequestStr);
    # void resetRequestBuffer();
    # void closeSockets();
    # static void handleAlternativeRequestByte(void*, u_int8_t requestByte);
    # void handleAlternativeRequestByte1(u_int8_t requestByte);
    # Boolean authenticationOK(char const* cmdName, char const* urlSuffix, char const* fullRequestStr);
    # void changeClientInputSocket(int newSocketNum, unsigned char const* extraData, unsigned extraDataSize);
    # static void continueHandlingREGISTER(ParamsForREGISTER* params);
    # virtual void continueHandlingREGISTER1(ParamsForREGISTER* params);
    # void setRTSPResponse(char const* responseStr);
    # void setRTSPResponse(char const* responseStr, u_int32_t sessionId);
    # void setRTSPResponse(char const* responseStr, char const* contentStr);
    # void setRTSPResponse(char const* responseStr, u_int32_t sessionId, char const* contentStr);
    # RTSPServer& fOurRTSPServer;
    # int& fClientInputSocket;
    # int fClientOutputSocket;
    # Boolean fIsActive;
    # unsigned char* fLastCRLF;
    # unsigned fRecursionCount;
    # char const* fCurrentCSeq;
    # Authenticator fCurrentAuthenticator;
    # char* fOurSessionCookie;
    # unsigned fBase64RemainderCount;
}
RTSPClientConnection - -> ClientConnection
RTSPClientConnection - -> RTSPServer
RTSPClientConnection +- -> ParamsForREGISTER


class RTSPClientSession {
    # RTSPClientSession(RTSPServer& ourServer, u_int32_t sessionId);
    # virtual ~RTSPClientSession();
    # friend class RTSPServer;
    # virtual void handleCmd_SETUP(RTSPClientConnection* ourClientConnection,
         char const* urlPreSuffix, char const* urlSuffix, char const* fullRequestStr);
    # virtual void handleCmd_withinSession(RTSPClientConnection* ourClientConnection,
         char const* cmdName,
         char const* urlPreSuffix, char const* urlSuffix,
         char const* fullRequestStr);
    # virtual void handleCmd_TEARDOWN(RTSPClientConnection* ourClientConnection,
         ServerMediaSubsession* subsession);
    # virtual void handleCmd_PLAY(RTSPClientConnection* ourClientConnection,
         ServerMediaSubsession* subsession, char const* fullRequestStr);
    # virtual void handleCmd_PAUSE(RTSPClientConnection* ourClientConnection,
         ServerMediaSubsession* subsession);
    # virtual void handleCmd_GET_PARAMETER(RTSPClientConnection* ourClientConnection,
         ServerMediaSubsession* subsession, char const* fullRequestStr);
    # virtual void handleCmd_SET_PARAMETER(RTSPClientConnection* ourClientConnection,
         ServerMediaSubsession* subsession, char const* fullRequestStr);
    # void deleteStreamByTrack(unsigned trackNum);
    # void reclaimStreamStates();
    # Boolean isMulticast();
    # void noteLiveness();
    # static void noteClientLiveness(RTSPClientSession* clientSession);
    # static void livenessTimeoutTask(RTSPClientSession* clientSession);
    # void setRTSPResponse(RTSPClientConnection* ourClientConnection, char const* responseStr);
    # void setRTSPResponse(RTSPClientConnection* ourClientConnection, char const* responseStr, u_int32_t sessionId);
    # void setRTSPResponse(RTSPClientConnection* ourClientConnection, char const* responseStr, char const* contentStr);
    # RTSPServer& fOurRTSPServer;
    # Boolean fIsMulticast, fStreamAfterSETUP;
    # unsigned char fTCPStreamIdCount;
    # Boolean usesTCPTransport() const;
    # TaskToken fLivenessCheckTask;
    # unsigned fNumStreamStates;
}
RTSPClientSession - -> ClientSession
RTSPClientSession - -> RTSPServer


class streamState {
    ServerMediaSubsession* subsession;
    int tcpSocketNum;
    void* streamToken;
}
RTSPClientSession +- -> streamState


class ServerMediaSessionIterator {
    + ServerMediaSessionIterator(RTSPServer& server);
    + virtual ~ServerMediaSessionIterator();
    + ServerMediaSession* next();
    - HashTable::Iterator* fOurIterator;
}


class ParamsForREGISTER {
    + ParamsForREGISTER(RTSPClientConnection* ourConnection, char const* url, char const* urlSuffix,
        Boolean reuseConnection, Boolean deliverViaTCP, char const* proxyURLSuffix);
    + virtual ~ParamsForREGISTER();
    - friend class RTSPClientConnection;
    - RTSPClientConnection* fOurConnection;
    - char* fURL;
    - char* fURLSuffix;
    - Boolean fReuseConnection, fDeliverViaTCP;
    - char* fProxyURLSuffix;
}
ParamsForREGISTER - -> RTSPClientConnection


class RTSPServerSupportingHTTPStreaming {
    + static RTSPServerSupportingHTTPStreaming* createNew(UsageEnvironment& env, Port rtspPort = 554,
        UserAuthenticationDatabase* authDatabase = NULL,
        unsigned reclamationTestSeconds = 65);
    + Boolean setHTTPPort(Port httpPort) { return setUpTunnelingOverHTTP(httpPort); }
    # RTSPServerSupportingHTTPStreaming(UsageEnvironment& env,
        int ourSocket, Port ourPort,
        UserAuthenticationDatabase* authDatabase,
        unsigned reclamationTestSeconds);
    # virtual ~RTSPServerSupportingHTTPStreaming();
    # virtual RTSPClientConnection* createNewClientConnection(int clientSocket, struct sockaddr_in clientAddr);
}
RTSPServerSupportingHTTPStreaming - -|> RTSPServer
RTSPServerSupportingHTTPStreaming +- -> RTSPClientConnectionSupportingHTTPStreaming


class RTSPClientConnectionSupportingHTTPStreaming {
    + RTSPClientConnectionSupportingHTTPStreaming(RTSPServer& ourServer, int clientSocket, struct sockaddr_in clientAddr);
    + virtual ~RTSPClientConnectionSupportingHTTPStreaming();
    # virtual void handleHTTPCmd_StreamingGET(char const* urlSuffix, char const* fullRequestStr);
    # static void afterStreaming(void* clientData);
    - u_int32_t fClientSessionId;
    - FramedSource* fStreamSource;
    - ByteStreamMemoryBufferSource* fPlaylistSource;
    - TCPStreamSink* fTCPSink;
}
RTSPClientConnectionSupportingHTTPStreaming - -|> RTSPClientConnection


class DynamicRTSPServer {
    + static DynamicRTSPServer* createNew(UsageEnvironment& env, Port ourPort,
        UserAuthenticationDatabase* authDatabase,
        unsigned reclamationTestSeconds = 65);
    # DynamicRTSPServer(UsageEnvironment& env, int ourSocket, Port ourPort,
        UserAuthenticationDatabase* authDatabase, unsigned reclamationTestSeconds);
    # virtual ~DynamicRTSPServer();
    # virtual ServerMediaSession*
    # lookupServerMediaSession(char const* streamName, Boolean isFirstLookupInSession);
}
DynamicRTSPServer - -|> RTSPServerSupportingHTTPStreaming


class RTSPClient {
    + static RTSPClient* createNew(UsageEnvironment& env, char const* rtspURL,
          int verbosityLevel = 0,
          char const* applicationName = NULL,
          portNumBits tunnelOverHTTPPortNum = 0,
          int socketNumToServer = -1);
    + typedef void(responseHandler)(RTSPClient* rtspClient,
          int resultCode, char* resultString);
    + unsigned sendDescribeCommand(responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendOptionsCommand(responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendAnnounceCommand(char const* sdpDescription, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendSetupCommand(MediaSubsession& subsession, responseHandler* responseHandler,
          Boolean streamOutgoing = False,
          Boolean streamUsingTCP = False,
          Boolean forceMulticastOnUnspecified = False,
          Authenticator* authenticator = NULL);
    + unsigned sendPlayCommand(MediaSession& session, responseHandler* responseHandler,
    +     double start = 0.0f, double end = -1.0f, float scale = 1.0f,
    +     Authenticator* authenticator = NULL);
    + unsigned sendPlayCommand(MediaSubsession& subsession, responseHandler* responseHandler,
          double start = 0.0f, double end = -1.0f, float scale = 1.0f,
          Authenticator* authenticator = NULL);
    + unsigned sendPlayCommand(MediaSession& session, responseHandler* responseHandler,
          char const* absStartTime, char const* absEndTime = NULL, float scale = 1.0f,
          Authenticator* authenticator = NULL);
    + unsigned sendPlayCommand(MediaSubsession& subsession, responseHandler* responseHandler,
          char const* absStartTime, char const* absEndTime = NULL, float scale = 1.0f,
          Authenticator* authenticator = NULL);
    + unsigned sendPauseCommand(MediaSession& session, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendPauseCommand(MediaSubsession& subsession, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendRecordCommand(MediaSession& session, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendRecordCommand(MediaSubsession& subsession, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendTeardownCommand(MediaSession& session, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendTeardownCommand(MediaSubsession& subsession, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendSetParameterCommand(MediaSession& session, responseHandler* responseHandler,
          char const* parameterName, char const* parameterValue,
          Authenticator* authenticator = NULL);
    + unsigned sendGetParameterCommand(MediaSession& session, responseHandler* responseHandler, char const* parameterName,
          Authenticator* authenticator = NULL);
    + void sendDummyUDPPackets(MediaSession& session, unsigned numDummyPackets = 2);
    + void sendDummyUDPPackets(MediaSubsession& subsession, unsigned numDummyPackets = 2);
    + void setSpeed(MediaSession& session, float speed = 1.0f);
    + Boolean changeResponseHandler(unsigned cseq, responseHandler* newResponseHandler);
    + int socketNum() const { return fInputSocketNum; }
    + static Boolean lookupByName(UsageEnvironment& env,
          char const* sourceName,
          RTSPClient*& resultClient);
    + static Boolean parseRTSPURL(UsageEnvironment& env, char const* url,
          char*& username, char*& password, NetAddress& address, portNumBits& portNum, char const** urlSuffix = NULL);
    + void setUserAgentString(char const* userAgentName);
    + void disallowBasicAuthentication() { fAllowBasicAuthentication = False; }
    + unsigned sessionTimeoutParameter() const { return fSessionTimeoutParameter; }
    + char const* url() const { return fBaseURL; }
    + static unsigned responseBufferSize;
    # RTSPClient(UsageEnvironment& env, char const* rtspURL,
          int verbosityLevel, char const* applicationName, portNumBits tunnelOverHTTPPortNum, int socketNumToServer);
    # virtual ~RTSPClient();
    # void reset();
    # void setBaseURL(char const* url);
    # int grabSocket(); // allows a subclass to reuse our input socket, so that it won't get closed when we're deleted
    # virtual unsigned sendRequest(RequestRecord* request);
    # virtual Boolean setRequestFields(RequestRecord* request,
        char*& cmdURL, Boolean& cmdURLWasAllocated,
        char const*& protocolStr,
        char*& extraHeaders, Boolean& extraHeadersWereAllocated);
    - virtual Boolean isRTSPClient() const;
    - void resetTCPSockets();
    - void resetResponseBuffer();
    - int openConnection(); // -1: failure; 0: pending; 1: success
    - int connectToServer(int socketNum, portNumBits remotePortNum); // used to implement "openConnection()"; result values are the same
    - char* createAuthenticatorString(char const* cmd, char const* url);
    - char* createBlocksizeString(Boolean streamUsingTCP);
    - void handleRequestError(RequestRecord* request);
    - Boolean parseResponseCode(char const* line, unsigned& responseCode, char const*& responseString);
    - void handleIncomingRequest();
    - static Boolean checkForHeader(char const* line, char const* headerName, unsigned headerNameLength, char const*& headerParams);
    - Boolean parseTransportParams(char const* paramsStr,
          char*& serverAddressStr, portNumBits& serverPortNum,
          unsigned char& rtpChannelId, unsigned char& rtcpChannelId);
    - Boolean parseScaleParam(char const* paramStr, float& scale);
    - Boolean parseSpeedParam(char const* paramStr, float& speed);
    - Boolean parseRTPInfoParams(char const*& paramStr, u_int16_t& seqNum, u_int32_t& timestamp);
    - Boolean handleSETUPResponse(MediaSubsession& subsession, char const* sessionParamsStr, char const* transportParamsStr,
          Boolean streamUsingTCP);
    - Boolean handlePLAYResponse(MediaSession& session, MediaSubsession& subsession,
          char const* scaleParamsStr, const char* speedParamsStr,
          char const* rangeParamsStr, char const* rtpInfoParamsStr);
    - Boolean handleTEARDOWNResponse(MediaSession& session, MediaSubsession& subsession);
    - Boolean handleGET_PARAMETERResponse(char const* parameterName, char*& resultValueString);
    - Boolean handleAuthenticationFailure(char const* wwwAuthenticateParamsStr);
    - Boolean resendCommand(RequestRecord* request);
    - char const* sessionURL(MediaSession const& session) const;
    - static void handleAlternativeRequestByte(void*, u_int8_t requestByte);
    - void handleAlternativeRequestByte1(u_int8_t requestByte);
    - void constructSubsessionURL(MediaSubsession const& subsession,
          char const*& prefix,
          char const*& separator,
          char const*& suffix);
    - Boolean setupHTTPTunneling1(); // send the HTTP "GET"
    - static void responseHandlerForHTTP_GET(RTSPClient* rtspClient, int responseCode, char* responseString);
    - void responseHandlerForHTTP_GET1(int responseCode, char* responseString);
    - Boolean setupHTTPTunneling2(); // send the HTTP "POST"
    - static void connectionHandler(void*, int /*mask*/);
    - void connectionHandler1();
    - static void incomingDataHandler(void*, int /*mask*/);
    - void incomingDataHandler1();
    - void handleResponseBytes(int newBytesRead);
    + u_int16_t desiredMaxIncomingPacketSize;
    # int fVerbosityLevel;
    # unsigned fCSeq;
    # Authenticator fCurrentAuthenticator;
    # Boolean fAllowBasicAuthentication;
    # netAddressBits fServerAddress;
    - portNumBits fTunnelOverHTTPPortNum;
    - char* fUserAgentHeaderStr;
    - unsigned fUserAgentHeaderStrLen;
    - int fInputSocketNum, fOutputSocketNum;
    - char* fBaseURL;
    - unsigned char fTCPStreamIdCount; // used for (optional) RTP/TCP
    - char* fLastSessionId;
    - unsigned fSessionTimeoutParameter; // optionally set in response "Session:" headers
    - char* fResponseBuffer;
    - unsigned fResponseBytesAlreadySeen, fResponseBufferBytesLeft;
    - RequestQueue fRequestsAwaitingConnection, fRequestsAwaitingHTTPTunneling, fRequestsAwaitingResponse;
    - char fSessionCookie[33];
    - unsigned fSessionCookieCounter;
    - Boolean fHTTPTunnelingConnectionIsPending;
}
RTSPClient - -|> Medium
RTSPClient +- -> RequestQueue
RTSPClient +- -> RequestRecord


class HandlerServerForREGISTERCommand {
    + static HandlerServerForREGISTERCommand* createNew(UsageEnvironment& env, onRTSPClientCreationFunc* creationFunc,
        Port ourPort = 0, UserAuthenticationDatabase* authDatabase = NULL,
        int verbosityLevel = 0, char const* applicationName = NULL);
    # HandlerServerForREGISTERCommand(UsageEnvironment& env, onRTSPClientCreationFunc* creationFunc, int ourSocket, Port ourPort,
        UserAuthenticationDatabase* authDatabase, int verbosityLevel, char const* applicationName);
    # virtual ~HandlerServerForREGISTERCommand();
    # virtual RTSPClient* createNewRTSPClient(char const* rtspURL, int verbosityLevel, char const* applicationName,
        int socketNumToServer);
    # virtual char const* allowedCommandNames(); // we support "OPTIONS" and "REGISTER" only
    # virtual Boolean weImplementREGISTER(char const* proxyURLSuffix, char*& responseStr); // redefined to return True
    # virtual void implementCmd_REGISTER(char const* url, char const* urlSuffix, int socketToRemoteServer,
        Boolean deliverViaTCP, char const* proxyURLSuffix);
    - onRTSPClientCreationFunc* fCreationFunc;
    - int fVerbosityLevel;
    - char* fApplicationName;
}
HandlerServerForREGISTERCommand - -|> RTSPServer


class RequestQueue {
    + RequestQueue();
    + RequestQueue(RequestQueue& origQueue);
    + virtual ~RequestQueue();
    + void enqueue(RequestRecord* request);
    + RequestRecord* dequeue();
    + void putAtHead(RequestRecord* request);
    + RequestRecord* findByCSeq(unsigned cseq);
    + Boolean isEmpty() const { return fHead == NULL; }
    - RequestRecord* fHead;
    - RequestRecord* fTail;
}


class RequestRecord {
    + RequestRecord(unsigned cseq, char const* commandName, responseHandler* handler,
          MediaSession* session = NULL, MediaSubsession* subsession = NULL, u_int32_t booleanFlags = 0,
          double start = 0.0f, double end = -1.0f, float scale = 1.0f, char const* contentStr = NULL);
    + RequestRecord(unsigned cseq, responseHandler* handler,
          char const* absStartTime, char const* absEndTime = NULL, float scale = 1.0f,
          MediaSession* session = NULL, MediaSubsession* subsession = NULL);
    + virtual ~RequestRecord();
    + RequestRecord*& next() { return fNext; }
    + unsigned& cseq() { return fCSeq; }
    + char const* commandName() const { return fCommandName; }
    + MediaSession* session() const { return fSession; }
    + MediaSubsession* subsession() const { return fSubsession; }
    + u_int32_t booleanFlags() const { return fBooleanFlags; }
    + double start() const { return fStart; }
    + double end() const { return fEnd; }
    + char const* absStartTime() const { return fAbsStartTime; }
    + char const* absEndTime() const { return fAbsEndTime; }
    + float scale() const { return fScale; }
    + char* contentStr() const { return fContentStr; }
    + responseHandler*& handler() { return fHandler; }
    - RequestRecord* fNext;
    - unsigned fCSeq;
    - char const* fCommandName;
    - MediaSession* fSession;
    - MediaSubsession* fSubsession;
    - u_int32_t fBooleanFlags;
    - double fStart, fEnd;
    - char *fAbsStartTime, *fAbsEndTime;
    - float fScale;
    - char* fContentStr;
    - responseHandler* fHandler;
}


class ProxyRTSPClient {
    + ProxyRTSPClient(class ProxyServerMediaSession& ourServerMediaSession, char const* rtspURL,
        char const* username, char const* password,
        portNumBits tunnelOverHTTPPortNum, int verbosityLevel, int socketNumToServer);
    + virtual ~ProxyRTSPClient();
    + void continueAfterDESCRIBE(char const* sdpDescription);
    + void continueAfterLivenessCommand(int resultCode, Boolean serverSupportsGetParameter);
    + void continueAfterSETUP();
    - void reset();
    - Authenticator* auth() { return fOurAuthenticator; }
    - void scheduleLivenessCommand();
    - static void sendLivenessCommand(void* clientData);
    - void scheduleDESCRIBECommand();
    - static void sendDESCRIBE(void* clientData);
    - static void subsessionTimeout(void* clientData);
    - void handleSubsessionTimeout();
    - friend class ProxyServerMediaSession;
    - friend class ProxyServerMediaSubsession;
    - ProxyServerMediaSession& fOurServerMediaSession;
    - char* fOurURL;
    - Authenticator* fOurAuthenticator;
    - Boolean fStreamRTPOverTCP;
    - class ProxyServerMediaSubsession *fSetupQueueHead, *fSetupQueueTail;
    - unsigned fNumSetupsDone;
    - unsigned fNextDESCRIBEDelay; // in seconds
    - Boolean fServerSupportsGetParameter, fLastCommandWasPLAY;
    - TaskToken fLivenessCommandTask, fDESCRIBECommandTask, fSubsessionTimerTask;
}
ProxyRTSPClient - -|> RTSPClient
ProxyRTSPClient - -> ProxyServerMediaSession
ProxyRTSPClient - -> ProxyServerMediaSubsession


class ServerMediaSession {
    + static ServerMediaSession* createNew(UsageEnvironment& env,
                        char const* streamName = NULL,
                        char const* info = NULL,
                        char const* description = NULL,
                        Boolean isSSM = False,
                        char const* miscSDPLines = NULL);
    + static Boolean lookupByName(UsageEnvironment& env,
                                char const* mediumName,
                                ServerMediaSession*& resultSession);
    + char* generateSDPDescription(); // based on the entire session
    + char const* streamName() const { return fStreamName; }
    + Boolean addSubsession(ServerMediaSubsession* subsession);
    + unsigned numSubsessions() const { return fSubsessionCounter; }
    + void testScaleFactor(float& scale); // sets "scale" to the actual supported scale
    + float duration() const;
    + unsigned referenceCount() const { return fReferenceCount; }
    + void incrementReferenceCount() { ++fReferenceCount; }
    + void decrementReferenceCount() { if (fReferenceCount > 0) - -fReferenceCount; }
    + Boolean& deleteWhenUnreferenced() { return fDeleteWhenUnreferenced; }
    + void deleteAllSubsessions();
    # ServerMediaSession(UsageEnvironment& env, char const* streamName,
                char const* info, char const* description,
                Boolean isSSM, char const* miscSDPLines);
    # virtual ~ServerMediaSession();
    - virtual Boolean isServerMediaSession() const;
    - Boolean fIsSSM;
    - friend class ServerMediaSubsessionIterator;
    - ServerMediaSubsession* fSubsessionsHead;
    - ServerMediaSubsession* fSubsessionsTail;
    - unsigned fSubsessionCounter;
    - char* fStreamName;
    - char* fInfoSDPString;
    - char* fDescriptionSDPString;
    - char* fMiscSDPLines;
    - struct timeval fCreationTime;
    - unsigned fReferenceCount;
    - Boolean fDeleteWhenUnreferenced;
}
ServerMediaSession - -|> Medium
ServerMediaSession - -> ServerMediaSubsessionIterator


class ServerMediaSubsession {
    + unsigned trackNumber() const { return fTrackNumber; }
    + char const* trackId();
    + virtual char const* sdpLines() = 0;
    + virtual void getStreamParameters(unsigned clientSessionId, // in
                    netAddressBits clientAddress, // in
                    Port const& clientRTPPort, // in
                    Port const& clientRTCPPort, // in
                    int tcpSocketNum, // in (-1 means use UDP, not TCP)
                    unsigned char rtpChannelId, // in (used if TCP)
                    unsigned char rtcpChannelId, // in (used if TCP)
                    netAddressBits& destinationAddress, // in out
                    u_int8_t& destinationTTL, // in out
                    Boolean& isMulticast, // out
                    Port& serverRTPPort, // out
                    Port& serverRTCPPort, // out
                    void*& streamToken // out
                    ) = 0;
    + virtual void startStream(unsigned clientSessionId, void* streamToken,
                TaskFunc* rtcpRRHandler,
                void* rtcpRRHandlerClientData,
                unsigned short& rtpSeqNum,
                unsigned& rtpTimestamp,
                ServerRequestAlternativeByteHandler* serverRequestAlternativeByteHandler,
                void* serverRequestAlternativeByteHandlerClientData) = 0;
    + virtual void pauseStream(unsigned clientSessionId, void* streamToken);
    + virtual void seekStream(unsigned clientSessionId, void* streamToken, double& seekNPT,
                double streamDuration, u_int64_t& numBytes);
    + virtual void seekStream(unsigned clientSessionId, void* streamToken, char*& absStart, char*& absEnd);
    + virtual void nullSeekStream(unsigned clientSessionId, void* streamToken,
                    double streamEndTime, u_int64_t& numBytes);
    + virtual void setStreamScale(unsigned clientSessionId, void* streamToken, float scale);
    + virtual float getCurrentNPT(void* streamToken);
    + virtual FramedSource* getStreamSource(void* streamToken);
    + virtual void deleteStream(unsigned clientSessionId, void*& streamToken);
    + virtual void testScaleFactor(float& scale); // sets "scale" to the actual supported scale
    + virtual float duration() const;
    + virtual void getAbsoluteTimeRange(char*& absStartTime, char*& absEndTime) const;
    + void setServerAddressAndPortForSDP(netAddressBits addressBits,
                        portNumBits portBits);
    # ServerMediaSubsession(UsageEnvironment& env);
    # virtual ~ServerMediaSubsession();
    # char const* rangeSDPLine() const;
    # ServerMediaSession* fParentSession;
    # netAddressBits fServerAddressForSDP;
    # portNumBits fPortNumForSDP;
    - friend class ServerMediaSession;
    - friend class ServerMediaSubsessionIterator;
    - ServerMediaSubsession* fNext;
    - unsigned fTrackNumber;
    - char const* fTrackId;
}
ServerMediaSubsession - -|> Medium
ServerMediaSubsession - -> ServerMediaSession
ServerMediaSubsession - -> ServerMediaSubsessionIterator


class ServerMediaSubsessionIterator {
    + ServerMediaSubsessionIterator(ServerMediaSession& session);
    + virtual ~ServerMediaSubsessionIterator();
    + ServerMediaSubsession* next(); // NULL if none
    + void reset();
    - ServerMediaSession& fOurSession;
    - ServerMediaSubsession* fNextPtr;
}


class ProxyServerMediaSession {
    + static ProxyServerMediaSession* createNew(UsageEnvironment& env,
        RTSPServer* ourRTSPServer,
        char const* inputStreamURL,
        char const* streamName = NULL,
        char const* username = NULL, char const* password = NULL,
        portNumBits tunnelOverHTTPPortNum = 0,
        int verbosityLevel = 0,
        int socketNumToServer = -1);
    + virtual ~ProxyServerMediaSession();
    + char const* url() const;
    + char describeCompletedFlag;
    + Boolean describeCompletedSuccessfully() const { return fClientMediaSession != NULL; }
    # ProxyServerMediaSession(UsageEnvironment& env, RTSPServer* ourRTSPServer,
        char const* inputStreamURL, char const* streamName,
        char const* username, char const* password,
        portNumBits tunnelOverHTTPPortNum, int verbosityLevel,
        int socketNumToServer,
        createNewProxyRTSPClientFunc* ourCreateNewProxyRTSPClientFunc
        = defaultCreateNewProxyRTSPClientFunc);
    # RTSPServer* fOurRTSPServer;
    # ProxyRTSPClient* fProxyRTSPClient;
    # MediaSession* fClientMediaSession;
    - friend class ProxyRTSPClient;
    - friend class ProxyServerMediaSubsession;
    - void continueAfterDESCRIBE(char const* sdpDescription);
    - void resetDESCRIBEState(); // undoes what was done by "contineAfterDESCRIBE()"
    - int fVerbosityLevel;
    - class PresentationTimeSessionNormalizer* fPresentationTimeSessionNormalizer;
    - createNewProxyRTSPClientFunc* fCreateNewProxyRTSPClientFunc;
}
ProxyServerMediaSession - -|> ServerMediaSession
ProxyServerMediaSession - -> ProxyRTSPClient
ProxyServerMediaSession - -> ProxyServerMediaSubsession


class MediaSource {
    + static Boolean lookupByName(UsageEnvironment& env, char const* sourceName,
                    MediaSource*& resultSource);
    + virtual void getAttributes() const;
    + virtual char const* MIMEtype() const;
    + virtual Boolean isFramedSource() const;
    + virtual Boolean isRTPSource() const;
    + virtual Boolean isMPEG1or2VideoStreamFramer() const;
    + virtual Boolean isMPEG4VideoStreamFramer() const;
    + virtual Boolean isH264VideoStreamFramer() const;
    + virtual Boolean isH265VideoStreamFramer() const;
    + virtual Boolean isDVVideoStreamFramer() const;
    + virtual Boolean isJPEGVideoSource() const;
    + virtual Boolean isAMRAudioSource() const;
    # MediaSource(UsageEnvironment& env); // abstract base class
    # virtual ~MediaSource();
    - virtual Boolean isSource() const;
}
MediaSource - -|> Medium


class FramedSource {
    + static Boolean lookupByName(UsageEnvironment& env, char const* sourceName,
          FramedSource*& resultSource);
    + typedef void(afterGettingFunc)(void* clientData, unsigned frameSize,
          unsigned numTruncatedBytes,
          struct timeval presentationTime,
          unsigned durationInMicroseconds);
    + typedef void(onCloseFunc)(void* clientData);
    + void getNextFrame(unsigned char* to, unsigned maxSize,
          afterGettingFunc* afterGettingFunc,
          void* afterGettingClientData,
          onCloseFunc* onCloseFunc,
          void* onCloseClientData);
    + static void handleClosure(void* clientData);
    + void handleClosure();
    + void stopGettingFrames();
    + virtual unsigned maxFrameSize() const;
    + virtual void doGetNextFrame() = 0;
    + Boolean isCurrentlyAwaitingData() const;
    + static void afterGetting(FramedSource* source);
    # FramedSource(UsageEnvironment& env);
    # virtual ~FramedSource();
    # virtual void doStopGettingFrames();
    # unsigned char* fTo;
    # unsigned fMaxSize;
    # unsigned fFrameSize;
    # unsigned fNumTruncatedBytes;
    # struct timeval fPresentationTime;
    # unsigned fDurationInMicroseconds;
    - virtual Boolean isFramedSource() const;
    - afterGettingFunc* fAfterGettingFunc;
    - void* fAfterGettingClientData;
    - onCloseFunc* fOnCloseFunc;
    - void* fOnCloseClientData;
    - Boolean fIsCurrentlyAwaitingData;
}
FramedSource - -|> MediaSource


class FramedFilter {
    + FramedSource* inputSource() const;
    + void reassignInputSource(FramedSource* newInputSource);
    + void detachInputSource();
    # FramedFilter(UsageEnvironment& env, FramedSource* inputSource);
    # virtual ~FramedFilter();
    # virtual char const* MIMEtype() const;
    # virtual void getAttributes() const;
    # virtual void doStopGettingFrames();
    # FramedSource* fInputSource;
}
FramedFilter - -|> FramedSource


class PresentationTimeSubsessionNormalizer {
    + void setRTPSink(RTPSink* rtpSink);
    - friend class PresentationTimeSessionNormalizer;
    - PresentationTimeSubsessionNormalizer(PresentationTimeSessionNormalizer& parent, FramedSource* inputSource, RTPSource* rtpSource,
          char const* codecName, PresentationTimeSubsessionNormalizer* next);
    - virtual ~PresentationTimeSubsessionNormalizer();
    - static void afterGettingFrame(void* clientData, unsigned frameSize, unsigned numTruncatedBytes,
          struct timeval presentationTime, unsigned durationInMicroseconds);
    - void afterGettingFrame(unsigned frameSize, unsigned numTruncatedBytes, struct timeval presentationTime, unsigned durationInMicroseconds);
    - virtual void doGetNextFrame();
    - PresentationTimeSessionNormalizer& fParent;
    - RTPSource* fRTPSource;
    - RTPSink* fRTPSink;
    - char const* fCodecName;
    - PresentationTimeSubsessionNormalizer* fNext;
}
PresentationTimeSubsessionNormalizer - -|> FramedFilter
PresentationTimeSubsessionNormalizer - -> PresentationTimeSessionNormalizer


class PresentationTimeSessionNormalizer {
    + PresentationTimeSessionNormalizer(UsageEnvironment& env);
    + virtual ~PresentationTimeSessionNormalizer();
    + PresentationTimeSubsessionNormalizer*
    + createNewPresentationTimeSubsessionNormalizer(FramedSource* inputSource, RTPSource* rtpSource, char const* codecName);

    - friend class PresentationTimeSubsessionNormalizer;
    - void normalizePresentationTime(PresentationTimeSubsessionNormalizer* ssNormalizer,
          struct timeval& toPT, struct timeval const& fromPT);
    - void removePresentationTimeSubsessionNormalizer(PresentationTimeSubsessionNormalizer* ssNormalizer);
    - PresentationTimeSubsessionNormalizer* fSubsessionNormalizers;
    - PresentationTimeSubsessionNormalizer* fMasterSSNormalizer;
    - struct timeval fPTAdjustment;
}
PresentationTimeSessionNormalizer - -|> Medium
PresentationTimeSessionNormalizer - -> PresentationTimeSubsessionNormalizer


class OnDemandServerMediaSubsession {
    protected: // we're a virtual base class
    # OnDemandServerMediaSubsession(UsageEnvironment& env, Boolean reuseFirstSource,
                portNumBits initialPortNum = 6970,
                Boolean multiplexRTCPWithRTP = False);
    # virtual ~OnDemandServerMediaSubsession();
    # virtual char const* sdpLines();
    # virtual void getStreamParameters(unsigned clientSessionId,
                                        netAddressBits clientAddress,
                                        Port const& clientRTPPort,
                                        Port const& clientRTCPPort,
                                        int tcpSocketNum,
                                        unsigned char rtpChannelId,
                                        unsigned char rtcpChannelId,
                                        netAddressBits& destinationAddress,
                                        u_int8_t& destinationTTL,
                                        Boolean& isMulticast,
                                        Port& serverRTPPort,
                                        Port& serverRTCPPort,
                                        void*& streamToken);
    # virtual void startStream(unsigned clientSessionId, void* streamToken,
                                TaskFunc* rtcpRRHandler,
                                void* rtcpRRHandlerClientData,
                                unsigned short& rtpSeqNum,
                                unsigned& rtpTimestamp,
                                ServerRequestAlternativeByteHandler* serverRequestAlternativeByteHandler,
                                void* serverRequestAlternativeByteHandlerClientData);
    # virtual void pauseStream(unsigned clientSessionId, void* streamToken);
    # virtual void seekStream(unsigned clientSessionId, void* streamToken, double& seekNPT, double streamDuration, u_int64_t& numBytes);
    # virtual void seekStream(unsigned clientSessionId, void* streamToken, char*& absStart, char*& absEnd);
    # virtual void nullSeekStream(unsigned clientSessionId, void* streamToken,
                      double streamEndTime, u_int64_t& numBytes);
    # virtual void setStreamScale(unsigned clientSessionId, void* streamToken, float scale);
    # virtual float getCurrentNPT(void* streamToken);
    # virtual FramedSource* getStreamSource(void* streamToken);
    # virtual void deleteStream(unsigned clientSessionId, void*& streamToken);
    # virtual char const* getAuxSDPLine(RTPSink* rtpSink,
                      FramedSource* inputSource);
    # virtual void seekStreamSource(FramedSource* inputSource, double& seekNPT, double streamDuration, u_int64_t& numBytes);
    # virtual void seekStreamSource(FramedSource* inputSource, char*& absStart, char*& absEnd);
    # virtual void setStreamSourceScale(FramedSource* inputSource, float scale);
    # virtual void setStreamSourceDuration(FramedSource* inputSource, double streamDuration, u_int64_t& numBytes);
    # virtual void closeStreamSource(FramedSource* inputSource);
    # protected: // new virtual functions, defined by all subclasses
    # virtual FramedSource* createNewStreamSource(unsigned clientSessionId,
                              unsigned& estBitrate) = 0;
    # virtual RTPSink* createNewRTPSink(Groupsock* rtpGroupsock,
                      unsigned char rtpPayloadTypeIfDynamic,
                      FramedSource* inputSource) = 0;
    # virtual Groupsock* createGroupsock(struct in_addr const& addr, Port port);
    + void multiplexRTCPWithRTP() { fMultiplexRTCPWithRTP = True; }
    + void setRTCPAppPacketHandler(RTCPAppHandlerFunc* handler, void* clientData);
    + void sendRTCPAppPacket(u_int8_t subtype, char const* name,
                u_int8_t* appDependentData, unsigned appDependentDataSize);
    - void setSDPLinesFromRTPSink(RTPSink* rtpSink, FramedSource* inputSource,
                    unsigned estBitrate);
    # char* fSDPLines;
    # HashTable* fDestinationsHashTable; // indexed by client session id
    # private:
    # Boolean fReuseFirstSource;
    # portNumBits fInitialPortNum;
    # Boolean fMultiplexRTCPWithRTP;
    # void* fLastStreamToken;
    # char fCNAME[100]; // for RTCP
    # RTCPAppHandlerFunc* fAppHandlerTask;
    # void* fAppHandlerClientData;
    # friend class StreamState;
}
OnDemandServerMediaSubsession - -|> ServerMediaSubsession
OnDemandServerMediaSubsession - -> StreamState


class Destinations {
    + Destinations(struct in_addr const& destAddr,
                    Port const& rtpDestPort,
                    Port const& rtcpDestPort);
    + Destinations(int tcpSockNum, unsigned char rtpChanId, unsigned char rtcpChanId);
    + Boolean isTCP;
    + struct in_addr addr;
    + Port rtpPort;
    + Port rtcpPort;
    + int tcpSocketNum;
    + unsigned char rtpChannelId, rtcpChannelId;
}


class StreamState {
    + StreamState(OnDemandServerMediaSubsession& master,
                Port const& serverRTPPort, Port const& serverRTCPPort,
                RTPSink* rtpSink, BasicUDPSink* udpSink,
                unsigned totalBW, FramedSource* mediaSource,
                Groupsock* rtpGS, Groupsock* rtcpGS);
    + virtual ~StreamState();
    + void startPlaying(Destinations* destinations,
                        TaskFunc* rtcpRRHandler, void* rtcpRRHandlerClientData,
                        ServerRequestAlternativeByteHandler* serverRequestAlternativeByteHandler,
                        void* serverRequestAlternativeByteHandlerClientData);
    + void pause();
    + void sendRTCPAppPacket(u_int8_t subtype, char const* name,
                u_int8_t* appDependentData, unsigned appDependentDataSize);
    + void endPlaying(Destinations* destinations);
    + void reclaim();
    + unsigned& referenceCount() { return fReferenceCount; }
    + Port const& serverRTPPort() const { return fServerRTPPort; }
    + Port const& serverRTCPPort() const { return fServerRTCPPort; }
    + RTPSink* rtpSink() const { return fRTPSink; }
    + float streamDuration() const { return fStreamDuration; }
    + FramedSource* mediaSource() const { return fMediaSource; }
    + float& startNPT() { return fStartNPT; }
    + private:
    + OnDemandServerMediaSubsession& fMaster;
    + Boolean fAreCurrentlyPlaying;
    + unsigned fReferenceCount;
    + Port fServerRTPPort, fServerRTCPPort;
    + RTPSink* fRTPSink;
    + BasicUDPSink* fUDPSink;
    + float fStreamDuration;
    + unsigned fTotalBW;
    + RTCPInstance* fRTCPInstance;
    + FramedSource* fMediaSource;
    + float fStartNPT;
    + Groupsock* fRTPgs;
    + Groupsock* fRTCPgs;
}
StreamState - -> Destinations


class ProxyServerMediaSubsession {
    + ProxyServerMediaSubsession(MediaSubsession& mediaSubsession);
    + virtual ~ProxyServerMediaSubsession();
    + char const* codecName() const { return fClientMediaSubsession.codecName(); }
    + char const* mediumName() const { return fClientMediaSubsession.mediumName(); }
    + unsigned char rtpPayloadFormat() const { return fClientMediaSubsession.rtpPayloadFormat(); }
    + virtual FramedSource* createNewStreamSource(unsigned clientSessionId,
          unsigned& estBitrate);
    + virtual void closeStreamSource(FramedSource* inputSource);
    + virtual RTPSink* createNewRTPSink(Groupsock* rtpGroupsock,
        unsigned char rtpPayloadTypeIfDynamic,
        FramedSource* inputSource);
    - static void subsessionByeHandler(void* clientData);
    - void subsessionByeHandler();
    - int verbosityLevel() const { return ((ProxyServerMediaSession*)fParentSession)->fVerbosityLevel; }
    - friend class ProxyRTSPClient;
    - MediaSubsession& fClientMediaSubsession; // the 'client' media subsession object that corresponds to this 'server' media subsession
    - ProxyServerMediaSubsession* fNext; // used when we're part of a queue
    - Boolean fHaveSetupStream;
}
ProxyServerMediaSubsession - -|> OnDemandServerMediaSubsession
ProxyServerMediaSubsession - -> ProxyRTSPClient


@enduml

PlantUML version 1.2018.00(Fri Jan 05 03:42:56 CST 2018)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.8.0_131-b11
Operating System: Windows 10
OS Version: 10.0
Default Encoding: GBK
Language: zh
Country: CN
--></g></svg>