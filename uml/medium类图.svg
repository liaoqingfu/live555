<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="4871px" preserveAspectRatio="none" style="width:6259px;height:4871px;" version="1.1" viewBox="0 0 6259 4871" width="6259px" zoomAndPan="magnify"><defs><filter height="300%" id="f1aq5jm439gatp" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class Medium--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="348.459" id="Medium" style="stroke: #A80036; stroke-width: 1.5;" width="544" x="3416" y="113.5"/><ellipse cx="3661.75" cy="129.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3660.3281,134.8594 Q3658.4688,134.8594 3657.375,133.4688 Q3656.2813,132.0781 3656.2813,129.0938 Q3656.2813,126.5625 3657.4453,124.9063 Q3658.6094,123.25 3660.5938,123.25 Q3662.0625,123.25 3662.5313,123.375 Q3663,123.5781 3663,123.5781 Q3663,123.5781 3663,123.5078 Q3663,123.4375 3663.6094,122.5156 L3664.6563,126.1719 L3663.3281,126.5781 Q3662.8594,125.0313 3662.1953,124.3672 Q3661.5313,123.7031 3660.4688,123.7031 Q3660.0781,123.7031 3659.3125,125.2344 Q3658.5469,126.7656 3658.5469,129.0156 Q3658.5469,131.4844 3659.2109,132.875 Q3659.875,134.2656 3660.4063,134.2656 Q3661.4688,134.2656 3662.2266,133.5 Q3662.9844,132.7344 3663.3281,131.0781 L3664.6563,131.6719 Q3664.3281,133.0781 3663.4297,133.9688 Q3662.5313,134.8594 3660.3281,134.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="44" x="3682.25" y="135.0576">Medium</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3417" x2="3959" y1="145.5" y2="145.5"/><polygon fill="none" points="3427,153.5115,3431,157.5115,3427,161.5115,3423,157.5115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3436" y="162.106">friend class MediaLookupTable;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3424" y="170.5344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3436" y="177.1289">UsageEnvironment&amp; fEnviron;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3424" y="185.5574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="3436" y="192.1519">char fMediumName[mediumNameMaxLen];</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3424" y="200.5803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3436" y="207.1748">TaskToken fNextTask;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3417" x2="3959" y1="213.5918" y2="213.5918"/><ellipse cx="3427" cy="226.6033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="518" x="3436" y="230.1978">static Boolean lookupByName(UsageEnvironment&amp; env, char const* mediumName, Medium*&amp; resultMedium);</text><ellipse cx="3427" cy="241.6262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="3436" y="245.2207">static void close(UsageEnvironment&amp; env, char const* mediumName);</text><ellipse cx="3427" cy="256.6492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="3436" y="260.2437">static void close(Medium* medium); // alternative close() method using ptrs</text><ellipse cx="3427" cy="271.6721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="3436" y="275.2666">UsageEnvironment&amp; envir() const { return fEnviron; }</text><ellipse cx="3427" cy="286.6951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="3436" y="290.2896">char const* name() const { return fMediumName; }</text><ellipse cx="3427" cy="301.718" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="3436" y="305.3125">virtual Boolean isSource() const;</text><ellipse cx="3427" cy="316.741" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3436" y="320.3354">virtual Boolean isSink() const;</text><ellipse cx="3427" cy="331.7639" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="3436" y="335.3584">virtual Boolean isRTCPInstance() const;</text><ellipse cx="3427" cy="346.7869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3436" y="350.3813">virtual Boolean isRTSPClient() const;</text><ellipse cx="3427" cy="361.8098" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="3436" y="365.4043">virtual Boolean isRTSPServer() const;</text><ellipse cx="3427" cy="376.8328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="3436" y="380.4272">virtual Boolean isMediaSession() const;</text><ellipse cx="3427" cy="391.8557" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="3436" y="395.4502">virtual Boolean isServerMediaSession() const;</text><ellipse cx="3427" cy="406.8787" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="3436" y="410.4731">virtual Boolean isDarwinInjector() const;</text><polygon fill="#FFFF44" points="3427,416.9016,3431,420.9016,3427,424.9016,3423,420.9016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="3436" y="425.4961">Medium(UsageEnvironment&amp; env);</text><polygon fill="#FFFF44" points="3427,431.9246,3431,435.9246,3427,439.9246,3423,435.9246" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="3436" y="440.519">virtual ~Medium();</text><polygon fill="#FFFF44" points="3427,446.9475,3431,450.9475,3427,454.9475,3423,450.9475" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="3436" y="455.542">TaskToken&amp; nextTask();</text><!--class GenericMediaServer--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="378.5049" id="GenericMediaServer" style="stroke: #A80036; stroke-width: 1.5;" width="491" x="1870.5" y="1408"/><ellipse cx="2056.25" cy="1424" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2054.8281,1429.3594 Q2052.9688,1429.3594 2051.875,1427.9688 Q2050.7813,1426.5781 2050.7813,1423.5938 Q2050.7813,1421.0625 2051.9453,1419.4063 Q2053.1094,1417.75 2055.0938,1417.75 Q2056.5625,1417.75 2057.0313,1417.875 Q2057.5,1418.0781 2057.5,1418.0781 Q2057.5,1418.0781 2057.5,1418.0078 Q2057.5,1417.9375 2058.1094,1417.0156 L2059.1563,1420.6719 L2057.8281,1421.0781 Q2057.3594,1419.5313 2056.6953,1418.8672 Q2056.0313,1418.2031 2054.9688,1418.2031 Q2054.5781,1418.2031 2053.8125,1419.7344 Q2053.0469,1421.2656 2053.0469,1423.5156 Q2053.0469,1425.9844 2053.7109,1427.375 Q2054.375,1428.7656 2054.9063,1428.7656 Q2055.9688,1428.7656 2056.7266,1428 Q2057.4844,1427.2344 2057.8281,1425.5781 L2059.1563,1426.1719 Q2058.8281,1427.5781 2057.9297,1428.4688 Q2057.0313,1429.3594 2054.8281,1429.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="111" x="2076.75" y="1429.5576">GenericMediaServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1871.5" x2="2360.5" y1="1440" y2="1440"/><ellipse cx="1881.5" cy="1453.0115" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1890.5" y="1456.606">virtual ServerMediaSession*</text><polygon fill="none" points="1881.5,1463.0344,1885.5,1467.0344,1881.5,1471.0344,1877.5,1467.0344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1890.5" y="1471.6289">virtual ClientConnection*</text><polygon fill="none" points="1881.5,1478.0574,1885.5,1482.0574,1881.5,1486.0574,1877.5,1482.0574" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1890.5" y="1486.6519">int fServerSocket;</text><polygon fill="none" points="1881.5,1493.0803,1885.5,1497.0803,1881.5,1501.0803,1877.5,1497.0803" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1890.5" y="1501.6748">Port fServerPort;</text><polygon fill="none" points="1881.5,1508.1033,1885.5,1512.1033,1881.5,1516.1033,1877.5,1512.1033" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="1890.5" y="1516.6978">HashTable* fServerMediaSessions;</text><polygon fill="none" points="1881.5,1523.1262,1885.5,1527.1262,1881.5,1531.1262,1877.5,1527.1262" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1890.5" y="1531.7207">HashTable* fClientConnections;</text><polygon fill="none" points="1881.5,1538.1492,1885.5,1542.1492,1881.5,1546.1492,1877.5,1542.1492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1890.5" y="1546.7437">HashTable* fClientSessions;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1871.5" x2="2360.5" y1="1553.1606" y2="1553.1606"/><ellipse cx="1881.5" cy="1566.1721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="1890.5" y="1569.7666">void addServerMediaSession(ServerMediaSession* serverMediaSession);</text><ellipse cx="1881.5" cy="1581.1951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="1890.5" y="1584.7896">lookupServerMediaSession(char const* streamName, Boolean isFirstLookupInSession = True);</text><ellipse cx="1881.5" cy="1596.218" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="1890.5" y="1599.8125">void removeServerMediaSession(ServerMediaSession* serverMediaSession);</text><ellipse cx="1881.5" cy="1611.241" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="1890.5" y="1614.8354">void removeServerMediaSession(char const* streamName);</text><ellipse cx="1881.5" cy="1626.2639" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="1890.5" y="1629.8584">void closeAllClientSessionsForServerMediaSession(ServerMediaSession* serverMediaSession);</text><ellipse cx="1881.5" cy="1641.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="1890.5" y="1644.8813">void closeAllClientSessionsForServerMediaSession(char const* streamName);</text><ellipse cx="1881.5" cy="1656.3098" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="1890.5" y="1659.9043">void deleteServerMediaSession(ServerMediaSession* serverMediaSession);</text><ellipse cx="1881.5" cy="1671.3328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="1890.5" y="1674.9272">void deleteServerMediaSession(char const* streamName);</text><polygon fill="#FFFF44" points="1881.5,1681.3557,1885.5,1685.3557,1881.5,1689.3557,1877.5,1685.3557" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="1890.5" y="1689.9502">GenericMediaServer(UsageEnvironment&amp; env, int ourSocket, Port ourPort);</text><polygon fill="#FFFF44" points="1881.5,1696.3787,1885.5,1700.3787,1881.5,1704.3787,1877.5,1700.3787" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1890.5" y="1704.9731">virtual ~GenericMediaServer();</text><polygon fill="#FFFF44" points="1881.5,1711.4016,1885.5,1715.4016,1881.5,1719.4016,1877.5,1715.4016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="1890.5" y="1719.9961">static int setUpOurSocket(UsageEnvironment&amp; env, Port&amp; ourPort);</text><polygon fill="#FFFF44" points="1881.5,1726.4246,1885.5,1730.4246,1881.5,1734.4246,1877.5,1730.4246" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="1890.5" y="1735.019">static void incomingConnectionHandler(void*, int /*mask*/);</text><polygon fill="#FFFF44" points="1881.5,1741.4475,1885.5,1745.4475,1881.5,1749.4475,1877.5,1745.4475" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="1890.5" y="1750.042">void incomingConnectionHandler();</text><polygon fill="#FFFF44" points="1881.5,1756.4705,1885.5,1760.4705,1881.5,1764.4705,1877.5,1760.4705" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="1890.5" y="1765.0649">void incomingConnectionHandlerOnSocket(int serverSocket);</text><polygon fill="#FFFF44" points="1881.5,1771.4934,1885.5,1775.4934,1881.5,1779.4934,1877.5,1775.4934" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="1890.5" y="1780.0879">createNewClientConnection(int clientSocket, struct sockaddr_in clientAddr) = 0;</text><!--class ClientConnection--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="273.3442" id="ClientConnection" style="stroke: #A80036; stroke-width: 1.5;" width="501" x="625.5" y="3011.5"/><ellipse cx="824.25" cy="3027.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M822.8281,3032.8594 Q820.9688,3032.8594 819.875,3031.4688 Q818.7813,3030.0781 818.7813,3027.0938 Q818.7813,3024.5625 819.9453,3022.9063 Q821.1094,3021.25 823.0938,3021.25 Q824.5625,3021.25 825.0313,3021.375 Q825.5,3021.5781 825.5,3021.5781 Q825.5,3021.5781 825.5,3021.5078 Q825.5,3021.4375 826.1094,3020.5156 L827.1563,3024.1719 L825.8281,3024.5781 Q825.3594,3023.0313 824.6953,3022.3672 Q824.0313,3021.7031 822.9688,3021.7031 Q822.5781,3021.7031 821.8125,3023.2344 Q821.0469,3024.7656 821.0469,3027.0156 Q821.0469,3029.4844 821.7109,3030.875 Q822.375,3032.2656 822.9063,3032.2656 Q823.9688,3032.2656 824.7266,3031.5 Q825.4844,3030.7344 825.8281,3029.0781 L827.1563,3029.6719 Q826.8281,3031.0781 825.9297,3031.9688 Q825.0313,3032.8594 822.8281,3032.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="95" x="844.75" y="3033.0576">ClientConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="626.5" x2="1125.5" y1="3043.5" y2="3043.5"/><polygon fill="none" points="636.5,3051.5115,640.5,3055.5115,636.5,3059.5115,632.5,3055.5115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="645.5" y="3060.106">friend class GenericMediaServer;</text><polygon fill="none" points="636.5,3066.5344,640.5,3070.5344,636.5,3074.5344,632.5,3070.5344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="645.5" y="3075.1289">GenericMediaServer&amp; fOurServer;</text><polygon fill="none" points="636.5,3081.5574,640.5,3085.5574,636.5,3089.5574,632.5,3085.5574" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="645.5" y="3090.1519">int fOurSocket;</text><polygon fill="none" points="636.5,3096.5803,640.5,3100.5803,636.5,3104.5803,632.5,3100.5803" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="645.5" y="3105.1748">struct sockaddr_in fClientAddr;</text><polygon fill="none" points="636.5,3111.6033,640.5,3115.6033,636.5,3119.6033,632.5,3115.6033" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="645.5" y="3120.1978">unsigned char fRequestBuffer[REQUEST_BUFFER_SIZE];</text><polygon fill="none" points="636.5,3126.6262,640.5,3130.6262,636.5,3134.6262,632.5,3130.6262" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="645.5" y="3135.2207">unsigned char fResponseBuffer[RESPONSE_BUFFER_SIZE];</text><polygon fill="none" points="636.5,3141.6492,640.5,3145.6492,636.5,3149.6492,632.5,3145.6492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="645.5" y="3150.2437">unsigned fRequestBytesAlreadySeen, fRequestBufferBytesLeft;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="626.5" x2="1125.5" y1="3156.6606" y2="3156.6606"/><polygon fill="#FFFF44" points="636.5,3164.6721,640.5,3168.6721,636.5,3172.6721,632.5,3168.6721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="645.5" y="3173.2666">ClientConnection(GenericMediaServer&amp; ourServer, int clientSocket, struct sockaddr_in clientAddr);</text><polygon fill="#FFFF44" points="636.5,3179.6951,640.5,3183.6951,636.5,3187.6951,632.5,3183.6951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="645.5" y="3188.2896">virtual ~ClientConnection();</text><polygon fill="#FFFF44" points="636.5,3194.718,640.5,3198.718,636.5,3202.718,632.5,3198.718" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="645.5" y="3203.3125">UsageEnvironment&amp; envir() { return fOurServer.envir(); }</text><polygon fill="#FFFF44" points="636.5,3209.741,640.5,3213.741,636.5,3217.741,632.5,3213.741" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="645.5" y="3218.3354">void closeSockets();</text><polygon fill="#FFFF44" points="636.5,3224.7639,640.5,3228.7639,636.5,3232.7639,632.5,3228.7639" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="645.5" y="3233.3584">static void incomingRequestHandler(void*, int /*mask*/);</text><polygon fill="#FFFF44" points="636.5,3239.7869,640.5,3243.7869,636.5,3247.7869,632.5,3243.7869" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="645.5" y="3248.3813">void incomingRequestHandler();</text><polygon fill="#FFFF44" points="636.5,3254.8098,640.5,3258.8098,636.5,3262.8098,632.5,3258.8098" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="645.5" y="3263.4043">virtual void handleRequestBytes(int newBytesRead) = 0;</text><polygon fill="#FFFF44" points="636.5,3269.8328,640.5,3273.8328,636.5,3277.8328,632.5,3273.8328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="645.5" y="3278.4272">void resetRequestBuffer();</text><!--class ClientSession--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="153.1606" id="ClientSession" style="stroke: #A80036; stroke-width: 1.5;" width="359" x="2346.5" y="3071.5"/><ellipse cx="2482.75" cy="3087.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2481.3281,3092.8594 Q2479.4688,3092.8594 2478.375,3091.4688 Q2477.2813,3090.0781 2477.2813,3087.0938 Q2477.2813,3084.5625 2478.4453,3082.9063 Q2479.6094,3081.25 2481.5938,3081.25 Q2483.0625,3081.25 2483.5313,3081.375 Q2484,3081.5781 2484,3081.5781 Q2484,3081.5781 2484,3081.5078 Q2484,3081.4375 2484.6094,3080.5156 L2485.6563,3084.1719 L2484.3281,3084.5781 Q2483.8594,3083.0313 2483.1953,3082.3672 Q2482.5313,3081.7031 2481.4688,3081.7031 Q2481.0781,3081.7031 2480.3125,3083.2344 Q2479.5469,3084.7656 2479.5469,3087.0156 Q2479.5469,3089.4844 2480.2109,3090.875 Q2480.875,3092.2656 2481.4063,3092.2656 Q2482.4688,3092.2656 2483.2266,3091.5 Q2483.9844,3090.7344 2484.3281,3089.0781 L2485.6563,3089.6719 Q2485.3281,3091.0781 2484.4297,3091.9688 Q2483.5313,3092.8594 2481.3281,3092.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="2503.25" y="3093.0576">ClientSession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2347.5" x2="2704.5" y1="3103.5" y2="3103.5"/><polygon fill="none" points="2357.5,3111.5115,2361.5,3115.5115,2357.5,3119.5115,2353.5,3115.5115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2366.5" y="3120.106">friend class GenericMediaServer;</text><polygon fill="none" points="2357.5,3126.5344,2361.5,3130.5344,2357.5,3134.5344,2353.5,3130.5344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2366.5" y="3135.1289">GenericMediaServer&amp; fOurServer;</text><polygon fill="none" points="2357.5,3141.5574,2361.5,3145.5574,2357.5,3149.5574,2353.5,3145.5574" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2366.5" y="3150.1519">u_int32_t fOurSessionId;</text><polygon fill="none" points="2357.5,3156.5803,2361.5,3160.5803,2357.5,3164.5803,2353.5,3160.5803" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="2366.5" y="3165.1748">ServerMediaSession* fOurServerMediaSession;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2347.5" x2="2704.5" y1="3171.5918" y2="3171.5918"/><ellipse cx="2357.5" cy="3184.6033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="2366.5" y="3188.1978">ClientSession(GenericMediaServer&amp; ourServer, u_int32_t sessionId);</text><ellipse cx="2357.5" cy="3199.6262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="2366.5" y="3203.2207">virtual ~ClientSession();</text><ellipse cx="2357.5" cy="3214.6492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="2366.5" y="3218.2437">UsageEnvironment&amp; envir() { return fOurServer.envir(); }</text><!--class RTSPServer--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="844.2163" id="RTSPServer" style="stroke: #A80036; stroke-width: 1.5;" width="631" x="1680.5" y="2726"/><ellipse cx="1958.25" cy="2742" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1956.8281,2747.3594 Q1954.9688,2747.3594 1953.875,2745.9688 Q1952.7813,2744.5781 1952.7813,2741.5938 Q1952.7813,2739.0625 1953.9453,2737.4063 Q1955.1094,2735.75 1957.0938,2735.75 Q1958.5625,2735.75 1959.0313,2735.875 Q1959.5,2736.0781 1959.5,2736.0781 Q1959.5,2736.0781 1959.5,2736.0078 Q1959.5,2735.9375 1960.1094,2735.0156 L1961.1563,2738.6719 L1959.8281,2739.0781 Q1959.3594,2737.5313 1958.6953,2736.8672 Q1958.0313,2736.2031 1956.9688,2736.2031 Q1956.5781,2736.2031 1955.8125,2737.7344 Q1955.0469,2739.2656 1955.0469,2741.5156 Q1955.0469,2743.9844 1955.7109,2745.375 Q1956.375,2746.7656 1956.9063,2746.7656 Q1957.9688,2746.7656 1958.7266,2746 Q1959.4844,2745.2344 1959.8281,2743.5781 L1961.1563,2744.1719 Q1960.8281,2745.5781 1959.9297,2746.4688 Q1959.0313,2747.3594 1956.8281,2747.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="1978.75" y="2747.5576">RTSPServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1681.5" x2="2310.5" y1="2758" y2="2758"/><ellipse cx="1691.5" cy="2771.0115" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="1700.5" y="2774.606">UserAuthenticationDatabase* authDatabase = NULL,</text><ellipse cx="1691.5" cy="2786.0344" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="368" x="1700.5" y="2789.6289">char const* remoteClientNameOrAddress, portNumBits remoteClientPortNum,</text><ellipse cx="1691.5" cy="2801.0574" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1700.5" y="2804.6519">responseHandlerForREGISTER* responseHandler,</text><ellipse cx="1691.5" cy="2816.0803" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="1700.5" y="2819.6748">char const* username = NULL, char const* password = NULL,</text><ellipse cx="1691.5" cy="2831.1033" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1700.5" y="2834.6978">Boolean receiveOurStreamViaTCP = False,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1700.5" y="2849.7207">int ourSocket, Port ourPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="1700.5" y="2864.7437">UserAuthenticationDatabase* authDatabase,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="2873.1721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1700.5" y="2879.7666">friend class RTSPClientConnection;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="2888.1951"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1700.5" y="2894.7896">friend class RTSPClientSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="2903.218"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1700.5" y="2909.8125">friend class ServerMediaSessionIterator;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="2918.241"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1700.5" y="2924.8354">friend class RegisterRequestRecord;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="2933.2639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="1700.5" y="2939.8584">int fHTTPServerSocket;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="2948.2869"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1700.5" y="2954.8813">Port fHTTPServerPort;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="2963.3098"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="1700.5" y="2969.9043">HashTable* fClientConnectionsForHTTPTunneling;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="2978.3328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1700.5" y="2984.9272">HashTable* fTCPStreamingDatabase;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="2993.3557"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="1700.5" y="2999.9502">HashTable* fPendingRegisterRequests;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="3008.3787"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1700.5" y="3014.9731">unsigned fRegisterRequestCounter;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="3023.4016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="1700.5" y="3029.9961">UserAuthenticationDatabase* fAuthDB;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="3038.4246"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1700.5" y="3045.019">unsigned fReclamationTestSeconds;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="3053.4475"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="1700.5" y="3060.042">Boolean fAllowStreamingRTPOverTCP;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1681.5" x2="2310.5" y1="3066.459" y2="3066.459"/><ellipse cx="1691.5" cy="3079.4705" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="1700.5" y="3083.0649">static RTSPServer* createNew(UsageEnvironment&amp; env, Port ourPort = 554,</text><ellipse cx="1691.5" cy="3094.4934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1700.5" y="3098.0879">unsigned reclamationTestSeconds = 65);</text><ellipse cx="1691.5" cy="3109.5164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="1700.5" y="3113.1108">static Boolean lookupByName(UsageEnvironment&amp; env, char const* name,</text><ellipse cx="1691.5" cy="3124.5393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1700.5" y="3128.1338">RTSPServer*&amp; resultServer);</text><ellipse cx="1691.5" cy="3139.5623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="605" x="1700.5" y="3143.1567">typedef void(responseHandlerForREGISTER)(RTSPServer* rtspServer, unsigned requestId, int resultCode, char* resultString);</text><ellipse cx="1691.5" cy="3154.5852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1700.5" y="3158.1797">unsigned registerStream(ServerMediaSession* serverMediaSession,</text><ellipse cx="1691.5" cy="3169.6082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1700.5" y="3173.2026">char const* proxyURLSuffix = NULL);</text><ellipse cx="1691.5" cy="3184.6311" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="445" x="1700.5" y="3188.2256">char* rtspURL(ServerMediaSession const* serverMediaSession, int clientSocket = -1) const;</text><ellipse cx="1691.5" cy="3199.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="1700.5" y="3203.2485">char* rtspURLPrefix(int clientSocket = -1) const;</text><ellipse cx="1691.5" cy="3214.677" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="1700.5" y="3218.2715">UserAuthenticationDatabase* setAuthenticationDatabase(UserAuthenticationDatabase* newDB);</text><ellipse cx="1691.5" cy="3229.7" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1700.5" y="3233.2944">void disableStreamingRTPOverTCP();</text><ellipse cx="1691.5" cy="3244.7229" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="1700.5" y="3248.3174">Boolean setUpTunnelingOverHTTP(Port httpPort);</text><ellipse cx="1691.5" cy="3259.7458" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="1700.5" y="3263.3403">portNumBits httpServerPortNum() const; // in host byte order.  (Returns 0 if not present.)</text><polygon fill="#FFFF44" points="1691.5,3269.7688,1695.5,3273.7688,1691.5,3277.7688,1687.5,3273.7688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="1700.5" y="3278.3633">RTSPServer(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="1700.5" y="3293.3862">unsigned reclamationTestSeconds);</text><polygon fill="#FFFF44" points="1691.5,3299.8147,1695.5,3303.8147,1691.5,3307.8147,1687.5,3303.8147" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1700.5" y="3308.4092">virtual ~RTSPServer();</text><polygon fill="#FFFF44" points="1691.5,3314.8376,1695.5,3318.8376,1691.5,3322.8376,1687.5,3318.8376" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1700.5" y="3323.4321">virtual char const* allowedCommandNames();</text><polygon fill="#FFFF44" points="1691.5,3329.8606,1695.5,3333.8606,1691.5,3337.8606,1687.5,3333.8606" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="1700.5" y="3338.4551">virtual Boolean weImplementREGISTER(char const* proxyURLSuffix, char*&amp; responseStr);</text><polygon fill="#FFFF44" points="1691.5,3344.8835,1695.5,3348.8835,1691.5,3352.8835,1687.5,3348.8835" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="1700.5" y="3353.478">virtual void implementCmd_REGISTER(char const* url, char const* urlSuffix, int socketToRemoteServer,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="1700.5" y="3368.501">Boolean deliverViaTCP, char const* proxyURLSuffix);</text><polygon fill="#FFFF44" points="1691.5,3374.9294,1695.5,3378.9294,1691.5,3382.9294,1687.5,3378.9294" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="487" x="1700.5" y="3383.5239">virtual UserAuthenticationDatabase* getAuthenticationDatabaseForCommand(char const* cmdName);</text><polygon fill="#FFFF44" points="1691.5,3389.9524,1695.5,3393.9524,1691.5,3397.9524,1687.5,3393.9524" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="1700.5" y="3398.5469">virtual Boolean specialClientAccessCheck(int clientSocket, struct sockaddr_in&amp; clientAddr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1700.5" y="3413.5698">char const* urlSuffix);</text><polygon fill="#FFFF44" points="1691.5,3419.9983,1695.5,3423.9983,1691.5,3427.9983,1687.5,3423.9983" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="1700.5" y="3428.5928">virtual Boolean specialClientUserAccessCheck(int clientSocket, struct sockaddr_in&amp; clientAddr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1700.5" y="3443.6157">char const* urlSuffix, char const* username);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="3452.0442"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1700.5" y="3458.6387">virtual Boolean isRTSPServer() const;</text><polygon fill="#FFFF44" points="1691.5,3465.0671,1695.5,3469.0671,1691.5,3473.0671,1687.5,3469.0671" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="1700.5" y="3473.6616">virtual ClientConnection* createNewClientConnection(int clientSocket, struct sockaddr_in clientAddr);</text><polygon fill="#FFFF44" points="1691.5,3480.0901,1695.5,3484.0901,1691.5,3488.0901,1687.5,3484.0901" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="1700.5" y="3488.6846">virtual ClientSession* createNewClientSession(u_int32_t sessionId);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="3497.113"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="1700.5" y="3503.7075">static void incomingConnectionHandlerHTTP(void*, int /*mask*/);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="3512.136"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1700.5" y="3518.7305">void incomingConnectionHandlerHTTP();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="3527.1589"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="1700.5" y="3533.7534">void noteTCPStreamingOnSocket(int socketNum, RTSPClientSession* clientSession, unsigned trackNum);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="3542.1819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="514" x="1700.5" y="3548.7764">void unnoteTCPStreamingOnSocket(int socketNum, RTSPClientSession* clientSession, unsigned trackNum);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1688.5" y="3557.2048"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="1700.5" y="3563.7993">void stopTCPStreamingOnSocket(int socketNum);</text><!--class RTSPServerWithREGISTERProxying--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="393.5278" id="RTSPServerWithREGISTERProxying" style="stroke: #A80036; stroke-width: 1.5;" width="524" x="1457" y="3908"/><ellipse cx="1615.75" cy="3924" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1614.3281,3929.3594 Q1612.4688,3929.3594 1611.375,3927.9688 Q1610.2813,3926.5781 1610.2813,3923.5938 Q1610.2813,3921.0625 1611.4453,3919.4063 Q1612.6094,3917.75 1614.5938,3917.75 Q1616.0625,3917.75 1616.5313,3917.875 Q1617,3918.0781 1617,3918.0781 Q1617,3918.0781 1617,3918.0078 Q1617,3917.9375 1617.6094,3917.0156 L1618.6563,3920.6719 L1617.3281,3921.0781 Q1616.8594,3919.5313 1616.1953,3918.8672 Q1615.5313,3918.2031 1614.4688,3918.2031 Q1614.0781,3918.2031 1613.3125,3919.7344 Q1612.5469,3921.2656 1612.5469,3923.5156 Q1612.5469,3925.9844 1613.2109,3927.375 Q1613.875,3928.7656 1614.4063,3928.7656 Q1615.4688,3928.7656 1616.2266,3928 Q1616.9844,3927.2344 1617.3281,3925.5781 L1618.6563,3926.1719 Q1618.3281,3927.5781 1617.4297,3928.4688 Q1616.5313,3929.3594 1614.3281,3929.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="1636.25" y="3929.5576">RTSPServerWithREGISTERProxying</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1458" x2="1980" y1="3940" y2="3940"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="1477" y="3956.606">UserAuthenticationDatabase* authDatabase = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="1477" y="3971.6289">UserAuthenticationDatabase* authDatabaseForREGISTER = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1477" y="3986.6519">unsigned reclamationTestSeconds = 65,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1477" y="4001.6748">Boolean streamRTPOverTCP = False,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1480" y="4016.6978"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="498" x="1477" y="4031.7207">UserAuthenticationDatabase* authDatabase, UserAuthenticationDatabase* authDatabaseForREGISTER,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1477" y="4046.7437">unsigned reclamationTestSeconds,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1465" y="4055.1721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1477" y="4061.7666">Boolean fStreamRTPOverTCP;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1465" y="4070.1951"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1477" y="4076.7896">int fVerbosityLevelForProxying;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1465" y="4085.218"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1477" y="4091.8125">unsigned fRegisteredProxyCounter;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1465" y="4100.241"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1477" y="4106.8354">char* fAllowedCommandNames;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1465" y="4115.2639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1477" y="4121.8584">UserAuthenticationDatabase* fAuthDBForREGISTER;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1458" x2="1980" y1="4128.2754" y2="4128.2754"/><ellipse cx="1468" cy="4141.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="479" x="1477" y="4144.8813">static RTSPServerWithREGISTERProxying* createNew(UsageEnvironment&amp; env, Port ourPort = 554,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1477" y="4159.9043">int verbosityLevelForProxying = 0);</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1480" y="4174.9272"/><polygon fill="#FFFF44" points="1468,4181.3557,1472,4185.3557,1468,4189.3557,1464,4185.3557" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="428" x="1477" y="4189.9502">RTSPServerWithREGISTERProxying(UsageEnvironment&amp; env, int ourSocket, Port ourPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="1477" y="4204.9731">Boolean streamRTPOverTCP, int verbosityLevelForProxying);</text><polygon fill="#FFFF44" points="1468,4211.4016,1472,4215.4016,1468,4219.4016,1464,4215.4016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1477" y="4219.9961">virtual ~RTSPServerWithREGISTERProxying();</text><polygon fill="#FFFF44" points="1468,4226.4246,1472,4230.4246,1468,4234.4246,1464,4230.4246" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1477" y="4235.019">virtual char const* allowedCommandNames();</text><polygon fill="#FFFF44" points="1468,4241.4475,1472,4245.4475,1468,4249.4475,1464,4245.4475" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="1477" y="4250.042">virtual Boolean weImplementREGISTER(char const* proxyURLSuffix, char*&amp; responseStr);</text><polygon fill="#FFFF44" points="1468,4256.4705,1472,4260.4705,1468,4264.4705,1464,4260.4705" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="1477" y="4265.0649">virtual void implementCmd_REGISTER(char const* url, char const* urlSuffix, int socketToRemoteServer,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="1477" y="4280.0879">Boolean deliverViaTCP, char const* proxyURLSuffix);</text><polygon fill="#FFFF44" points="1468,4286.5164,1472,4290.5164,1468,4294.5164,1464,4290.5164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="487" x="1477" y="4295.1108">virtual UserAuthenticationDatabase* getAuthenticationDatabaseForCommand(char const* cmdName);</text><!--class RTSPClientConnection--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="754.0786" id="RTSPClientConnection" style="stroke: #A80036; stroke-width: 1.5;" width="677" x="173.5" y="3728"/><ellipse cx="444.25" cy="3744" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M442.8281,3749.3594 Q440.9688,3749.3594 439.875,3747.9688 Q438.7813,3746.5781 438.7813,3743.5938 Q438.7813,3741.0625 439.9453,3739.4063 Q441.1094,3737.75 443.0938,3737.75 Q444.5625,3737.75 445.0313,3737.875 Q445.5,3738.0781 445.5,3738.0781 Q445.5,3738.0781 445.5,3738.0078 Q445.5,3737.9375 446.1094,3737.0156 L447.1563,3740.6719 L445.8281,3741.0781 Q445.3594,3739.5313 444.6953,3738.8672 Q444.0313,3738.2031 442.9688,3738.2031 Q442.5781,3738.2031 441.8125,3739.7344 Q441.0469,3741.2656 441.0469,3743.5156 Q441.0469,3745.9844 441.7109,3747.375 Q442.375,3748.7656 442.9063,3748.7656 Q443.9688,3748.7656 444.7266,3748 Q445.4844,3747.2344 445.8281,3745.5781 L447.1563,3746.1719 Q446.8281,3747.5781 445.9297,3748.4688 Q445.0313,3749.3594 442.8281,3749.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="127" x="464.75" y="3749.5576">RTSPClientConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="174.5" x2="849.5" y1="3760" y2="3760"/><polygon fill="none" points="184.5,3768.0115,188.5,3772.0115,184.5,3776.0115,180.5,3772.0115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="193.5" y="3776.606">friend class RTSPServer;</text><polygon fill="none" points="184.5,3783.0344,188.5,3787.0344,184.5,3791.0344,180.5,3787.0344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="193.5" y="3791.6289">char* urlSuffix, unsigned urlSuffixMaxSize,</text><polygon fill="none" points="184.5,3798.0574,188.5,3802.0574,184.5,3806.0574,180.5,3802.0574" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="193.5" y="3806.6519">char* sessionCookie, unsigned sessionCookieMaxSize,</text><polygon fill="none" points="184.5,3813.0803,188.5,3817.0803,184.5,3821.0803,180.5,3817.0803" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="193.5" y="3821.6748">RTSPServer&amp; fOurRTSPServer;</text><polygon fill="none" points="184.5,3828.1033,188.5,3832.1033,184.5,3836.1033,180.5,3832.1033" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="193.5" y="3836.6978">int&amp; fClientInputSocket;</text><polygon fill="none" points="184.5,3843.1262,188.5,3847.1262,184.5,3851.1262,180.5,3847.1262" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="193.5" y="3851.7207">int fClientOutputSocket;</text><polygon fill="none" points="184.5,3858.1492,188.5,3862.1492,184.5,3866.1492,180.5,3862.1492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="193.5" y="3866.7437">Boolean fIsActive;</text><polygon fill="none" points="184.5,3873.1721,188.5,3877.1721,184.5,3881.1721,180.5,3877.1721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="193.5" y="3881.7666">unsigned char* fLastCRLF;</text><polygon fill="none" points="184.5,3888.1951,188.5,3892.1951,184.5,3896.1951,180.5,3892.1951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="193.5" y="3896.7896">unsigned fRecursionCount;</text><polygon fill="none" points="184.5,3903.218,188.5,3907.218,184.5,3911.218,180.5,3907.218" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="193.5" y="3911.8125">char const* fCurrentCSeq;</text><polygon fill="none" points="184.5,3918.241,188.5,3922.241,184.5,3926.241,180.5,3922.241" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="193.5" y="3926.8354">Authenticator fCurrentAuthenticator;</text><polygon fill="none" points="184.5,3933.2639,188.5,3937.2639,184.5,3941.2639,180.5,3937.2639" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="193.5" y="3941.8584">char* fOurSessionCookie;</text><polygon fill="none" points="184.5,3948.2869,188.5,3952.2869,184.5,3956.2869,180.5,3952.2869" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="193.5" y="3956.8813">unsigned fBase64RemainderCount;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="174.5" x2="849.5" y1="3963.2983" y2="3963.2983"/><polygon fill="#FFFF44" points="184.5,3971.3098,188.5,3975.3098,184.5,3979.3098,180.5,3975.3098" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="193.5" y="3979.9043">virtual void handleRequestBytes(int newBytesRead);</text><polygon fill="#FFFF44" points="184.5,3986.3328,188.5,3990.3328,184.5,3994.3328,180.5,3990.3328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="193.5" y="3994.9272">RTSPClientConnection(RTSPServer&amp; ourServer, int clientSocket, struct sockaddr_in clientAddr);</text><polygon fill="#FFFF44" points="184.5,4001.3557,188.5,4005.3557,184.5,4009.3557,180.5,4005.3557" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="193.5" y="4009.9502">virtual ~RTSPClientConnection();</text><polygon fill="#FFFF44" points="184.5,4016.3787,188.5,4020.3787,184.5,4024.3787,180.5,4020.3787" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="193.5" y="4024.9731">virtual void handleCmd_OPTIONS();</text><polygon fill="#FFFF44" points="184.5,4031.4016,188.5,4035.4016,184.5,4039.4016,180.5,4035.4016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="193.5" y="4039.9961">virtual void handleCmd_GET_PARAMETER(char const* fullRequestStr);</text><polygon fill="#FFFF44" points="184.5,4046.4246,188.5,4050.4246,184.5,4054.4246,180.5,4050.4246" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="193.5" y="4055.019">virtual void handleCmd_SET_PARAMETER(char const* fullRequestStr);</text><polygon fill="#FFFF44" points="184.5,4061.4475,188.5,4065.4475,184.5,4069.4475,180.5,4065.4475" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="193.5" y="4070.042">virtual void handleCmd_DESCRIBE(char const* urlPreSuffix, char const* urlSuffix, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="184.5,4076.4705,188.5,4080.4705,184.5,4084.4705,180.5,4080.4705" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="480" x="193.5" y="4085.0649">virtual void handleCmd_REGISTER(char const* url, char const* urlSuffix, char const* fullRequestStr,</text><polygon fill="#FFFF44" points="184.5,4091.4934,188.5,4095.4934,184.5,4099.4934,180.5,4095.4934" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="193.5" y="4100.0879">Boolean reuseConnection, Boolean deliverViaTCP, char const* proxyURLSuffix);</text><polygon fill="#FFFF44" points="184.5,4106.5164,188.5,4110.5164,184.5,4114.5164,180.5,4110.5164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="193.5" y="4115.1108">virtual void handleCmd_bad();</text><polygon fill="#FFFF44" points="184.5,4121.5393,188.5,4125.5393,184.5,4129.5393,180.5,4125.5393" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="193.5" y="4130.1338">virtual void handleCmd_notSupported();</text><polygon fill="#FFFF44" points="184.5,4136.5623,188.5,4140.5623,184.5,4144.5623,180.5,4140.5623" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="193.5" y="4145.1567">virtual void handleCmd_notFound();</text><polygon fill="#FFFF44" points="184.5,4151.5852,188.5,4155.5852,184.5,4159.5852,180.5,4155.5852" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="193.5" y="4160.1797">virtual void handleCmd_sessionNotFound();</text><polygon fill="#FFFF44" points="184.5,4166.6082,188.5,4170.6082,184.5,4174.6082,180.5,4170.6082" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="193.5" y="4175.2026">virtual void handleCmd_unsupportedTransport();</text><polygon fill="#FFFF44" points="184.5,4181.6311,188.5,4185.6311,184.5,4189.6311,180.5,4185.6311" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="193.5" y="4190.2256">virtual Boolean parseHTTPRequestString(char* resultCmdName, unsigned resultCmdNameMaxSize,</text><polygon fill="#FFFF44" points="184.5,4196.6541,188.5,4200.6541,184.5,4204.6541,180.5,4200.6541" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="193.5" y="4205.2485">char* acceptStr, unsigned acceptStrMaxSize);</text><polygon fill="#FFFF44" points="184.5,4211.677,188.5,4215.677,184.5,4219.677,180.5,4215.677" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="193.5" y="4220.2715">virtual void handleHTTPCmd_notSupported();</text><polygon fill="#FFFF44" points="184.5,4226.7,188.5,4230.7,184.5,4234.7,180.5,4230.7" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="193.5" y="4235.2944">virtual void handleHTTPCmd_notFound();</text><polygon fill="#FFFF44" points="184.5,4241.7229,188.5,4245.7229,184.5,4249.7229,180.5,4245.7229" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="193.5" y="4250.3174">virtual void handleHTTPCmd_OPTIONS();</text><polygon fill="#FFFF44" points="184.5,4256.7458,188.5,4260.7458,184.5,4264.7458,180.5,4260.7458" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="193.5" y="4265.3403">virtual void handleHTTPCmd_TunnelingGET(char const* sessionCookie);</text><polygon fill="#FFFF44" points="184.5,4271.7688,188.5,4275.7688,184.5,4279.7688,180.5,4275.7688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="651" x="193.5" y="4280.3633">virtual Boolean handleHTTPCmd_TunnelingPOST(char const* sessionCookie, unsigned char const* extraData, unsigned extraDataSize);</text><polygon fill="#FFFF44" points="184.5,4286.7917,188.5,4290.7917,184.5,4294.7917,180.5,4290.7917" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="193.5" y="4295.3862">virtual void handleHTTPCmd_StreamingGET(char const* urlSuffix, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="184.5,4301.8147,188.5,4305.8147,184.5,4309.8147,180.5,4305.8147" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="193.5" y="4310.4092">void resetRequestBuffer();</text><polygon fill="#FFFF44" points="184.5,4316.8376,188.5,4320.8376,184.5,4324.8376,180.5,4320.8376" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="193.5" y="4325.4321">void closeSockets();</text><polygon fill="#FFFF44" points="184.5,4331.8606,188.5,4335.8606,184.5,4339.8606,180.5,4335.8606" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="193.5" y="4340.4551">static void handleAlternativeRequestByte(void*, u_int8_t requestByte);</text><polygon fill="#FFFF44" points="184.5,4346.8835,188.5,4350.8835,184.5,4354.8835,180.5,4350.8835" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="193.5" y="4355.478">void handleAlternativeRequestByte1(u_int8_t requestByte);</text><polygon fill="#FFFF44" points="184.5,4361.9065,188.5,4365.9065,184.5,4369.9065,180.5,4365.9065" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="480" x="193.5" y="4370.501">Boolean authenticationOK(char const* cmdName, char const* urlSuffix, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="184.5,4376.9294,188.5,4380.9294,184.5,4384.9294,180.5,4380.9294" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="522" x="193.5" y="4385.5239">void changeClientInputSocket(int newSocketNum, unsigned char const* extraData, unsigned extraDataSize);</text><polygon fill="#FFFF44" points="184.5,4391.9524,188.5,4395.9524,184.5,4399.9524,180.5,4395.9524" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="193.5" y="4400.5469">static void continueHandlingREGISTER(ParamsForREGISTER* params);</text><polygon fill="#FFFF44" points="184.5,4406.9753,188.5,4410.9753,184.5,4414.9753,180.5,4410.9753" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="193.5" y="4415.5698">virtual void continueHandlingREGISTER1(ParamsForREGISTER* params);</text><polygon fill="#FFFF44" points="184.5,4421.9983,188.5,4425.9983,184.5,4429.9983,180.5,4425.9983" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="193.5" y="4430.5928">void setRTSPResponse(char const* responseStr);</text><polygon fill="#FFFF44" points="184.5,4437.0212,188.5,4441.0212,184.5,4445.0212,180.5,4441.0212" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="193.5" y="4445.6157">void setRTSPResponse(char const* responseStr, u_int32_t sessionId);</text><polygon fill="#FFFF44" points="184.5,4452.0442,188.5,4456.0442,184.5,4460.0442,180.5,4456.0442" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="193.5" y="4460.6387">void setRTSPResponse(char const* responseStr, char const* contentStr);</text><polygon fill="#FFFF44" points="184.5,4467.0671,188.5,4471.0671,184.5,4475.0671,180.5,4471.0671" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="457" x="193.5" y="4475.6616">void setRTSPResponse(char const* responseStr, u_int32_t sessionId, char const* contentStr);</text><!--class RTSPClientSession--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="558.7803" id="RTSPClientSession" style="stroke: #A80036; stroke-width: 1.5;" width="599" x="3027.5" y="3825.5"/><ellipse cx="3267.75" cy="3841.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3266.3281,3846.8594 Q3264.4688,3846.8594 3263.375,3845.4688 Q3262.2813,3844.0781 3262.2813,3841.0938 Q3262.2813,3838.5625 3263.4453,3836.9063 Q3264.6094,3835.25 3266.5938,3835.25 Q3268.0625,3835.25 3268.5313,3835.375 Q3269,3835.5781 3269,3835.5781 Q3269,3835.5781 3269,3835.5078 Q3269,3835.4375 3269.6094,3834.5156 L3270.6563,3838.1719 L3269.3281,3838.5781 Q3268.8594,3837.0313 3268.1953,3836.3672 Q3267.5313,3835.7031 3266.4688,3835.7031 Q3266.0781,3835.7031 3265.3125,3837.2344 Q3264.5469,3838.7656 3264.5469,3841.0156 Q3264.5469,3843.4844 3265.2109,3844.875 Q3265.875,3846.2656 3266.4063,3846.2656 Q3267.4688,3846.2656 3268.2266,3845.5 Q3268.9844,3844.7344 3269.3281,3843.0781 L3270.6563,3843.6719 Q3270.3281,3845.0781 3269.4297,3845.9688 Q3268.5313,3846.8594 3266.3281,3846.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="3288.25" y="3847.0576">RTSPClientSession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3028.5" x2="3625.5" y1="3857.5" y2="3857.5"/><polygon fill="none" points="3038.5,3865.5115,3042.5,3869.5115,3038.5,3873.5115,3034.5,3869.5115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3047.5" y="3874.106">friend class RTSPServer;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3047.5" y="3889.1289">char const* cmdName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="3047.5" y="3904.1519">char const* urlPreSuffix, char const* urlSuffix,</text><polygon fill="none" points="3038.5,3910.5803,3042.5,3914.5803,3038.5,3918.5803,3034.5,3914.5803" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="3047.5" y="3919.1748">RTSPServer&amp; fOurRTSPServer;</text><polygon fill="none" points="3038.5,3925.6033,3042.5,3929.6033,3038.5,3933.6033,3034.5,3929.6033" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3047.5" y="3934.1978">Boolean fIsMulticast, fStreamAfterSETUP;</text><polygon fill="none" points="3038.5,3940.6262,3042.5,3944.6262,3038.5,3948.6262,3034.5,3944.6262" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3047.5" y="3949.2207">unsigned char fTCPStreamIdCount;</text><polygon fill="none" points="3038.5,3955.6492,3042.5,3959.6492,3038.5,3963.6492,3034.5,3959.6492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="3047.5" y="3964.2437">TaskToken fLivenessCheckTask;</text><polygon fill="none" points="3038.5,3970.6721,3042.5,3974.6721,3038.5,3978.6721,3034.5,3974.6721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="3047.5" y="3979.2666">unsigned fNumStreamStates;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3028.5" x2="3625.5" y1="3985.6836" y2="3985.6836"/><polygon fill="#FFFF44" points="3038.5,3993.6951,3042.5,3997.6951,3038.5,4001.6951,3034.5,3997.6951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="3047.5" y="4002.2896">RTSPClientSession(RTSPServer&amp; ourServer, u_int32_t sessionId);</text><polygon fill="#FFFF44" points="3038.5,4008.718,3042.5,4012.718,3038.5,4016.718,3034.5,4012.718" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="3047.5" y="4017.3125">virtual ~RTSPClientSession();</text><polygon fill="#FFFF44" points="3038.5,4023.741,3042.5,4027.741,3038.5,4031.741,3034.5,4027.741" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="3047.5" y="4032.3354">virtual void handleCmd_SETUP(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="3047.5" y="4047.3584">char const* urlPreSuffix, char const* urlSuffix, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="3038.5,4053.7869,3042.5,4057.7869,3038.5,4061.7869,3034.5,4057.7869" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="398" x="3047.5" y="4062.3813">virtual void handleCmd_withinSession(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="3047.5" y="4077.4043">char const* fullRequestStr);</text><polygon fill="#FFFF44" points="3038.5,4083.8328,3042.5,4087.8328,3038.5,4091.8328,3034.5,4087.8328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="3047.5" y="4092.4272">virtual void handleCmd_TEARDOWN(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="3047.5" y="4107.4502">ServerMediaSubsession* subsession);</text><polygon fill="#FFFF44" points="3038.5,4113.8787,3042.5,4117.8787,3038.5,4121.8787,3034.5,4117.8787" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="3047.5" y="4122.4731">virtual void handleCmd_PLAY(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="3047.5" y="4137.4961">ServerMediaSubsession* subsession, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="3038.5,4143.9246,3042.5,4147.9246,3038.5,4151.9246,3034.5,4147.9246" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="3047.5" y="4152.519">virtual void handleCmd_PAUSE(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="3047.5" y="4167.542">ServerMediaSubsession* subsession);</text><polygon fill="#FFFF44" points="3038.5,4173.9705,3042.5,4177.9705,3038.5,4181.9705,3034.5,4177.9705" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="3047.5" y="4182.5649">virtual void handleCmd_GET_PARAMETER(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="3047.5" y="4197.5879">ServerMediaSubsession* subsession, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="3038.5,4204.0164,3042.5,4208.0164,3038.5,4212.0164,3034.5,4208.0164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="3047.5" y="4212.6108">virtual void handleCmd_SET_PARAMETER(RTSPClientConnection* ourClientConnection,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="3047.5" y="4227.6338">ServerMediaSubsession* subsession, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="3038.5,4234.0623,3042.5,4238.0623,3038.5,4242.0623,3034.5,4238.0623" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="3047.5" y="4242.6567">void deleteStreamByTrack(unsigned trackNum);</text><polygon fill="#FFFF44" points="3038.5,4249.0852,3042.5,4253.0852,3038.5,4257.0852,3034.5,4253.0852" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="3047.5" y="4257.6797">void reclaimStreamStates();</text><polygon fill="#FFFF44" points="3038.5,4264.1082,3042.5,4268.1082,3038.5,4272.1082,3034.5,4268.1082" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="3047.5" y="4272.7026">Boolean isMulticast();</text><polygon fill="#FFFF44" points="3038.5,4279.1311,3042.5,4283.1311,3038.5,4287.1311,3034.5,4283.1311" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3047.5" y="4287.7256">void noteLiveness();</text><polygon fill="#FFFF44" points="3038.5,4294.1541,3042.5,4298.1541,3038.5,4302.1541,3034.5,4298.1541" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="3047.5" y="4302.7485">static void noteClientLiveness(RTSPClientSession* clientSession);</text><polygon fill="#FFFF44" points="3038.5,4309.177,3042.5,4313.177,3038.5,4317.177,3034.5,4313.177" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="3047.5" y="4317.7715">static void livenessTimeoutTask(RTSPClientSession* clientSession);</text><polygon fill="#FFFF44" points="3038.5,4324.2,3042.5,4328.2,3038.5,4332.2,3034.5,4328.2" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="458" x="3047.5" y="4332.7944">void setRTSPResponse(RTSPClientConnection* ourClientConnection, char const* responseStr);</text><polygon fill="#FFFF44" points="3038.5,4339.2229,3042.5,4343.2229,3038.5,4347.2229,3034.5,4343.2229" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="3047.5" y="4347.8174">void setRTSPResponse(RTSPClientConnection* ourClientConnection, char const* responseStr, u_int32_t sessionId);</text><polygon fill="#FFFF44" points="3038.5,4354.2458,3042.5,4358.2458,3038.5,4362.2458,3034.5,4358.2458" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="573" x="3047.5" y="4362.8403">void setRTSPResponse(RTSPClientConnection* ourClientConnection, char const* responseStr, char const* contentStr);</text><polygon fill="#FFFF44" points="3038.5,4369.2688,3042.5,4373.2688,3038.5,4377.2688,3034.5,4373.2688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="3047.5" y="4377.8633">Boolean usesTCPTransport() const;</text><!--class streamState--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="93.0688" id="streamState" style="stroke: #A80036; stroke-width: 1.5;" width="196" x="3229" y="4654.5"/><ellipse cx="3289.25" cy="4670.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3287.8281,4675.8594 Q3285.9688,4675.8594 3284.875,4674.4688 Q3283.7813,4673.0781 3283.7813,4670.0938 Q3283.7813,4667.5625 3284.9453,4665.9063 Q3286.1094,4664.25 3288.0938,4664.25 Q3289.5625,4664.25 3290.0313,4664.375 Q3290.5,4664.5781 3290.5,4664.5781 Q3290.5,4664.5781 3290.5,4664.5078 Q3290.5,4664.4375 3291.1094,4663.5156 L3292.1563,4667.1719 L3290.8281,4667.5781 Q3290.3594,4666.0313 3289.6953,4665.3672 Q3289.0313,4664.7031 3287.9688,4664.7031 Q3287.5781,4664.7031 3286.8125,4666.2344 Q3286.0469,4667.7656 3286.0469,4670.0156 Q3286.0469,4672.4844 3286.7109,4673.875 Q3287.375,4675.2656 3287.9063,4675.2656 Q3288.9688,4675.2656 3289.7266,4674.5 Q3290.4844,4673.7344 3290.8281,4672.0781 L3292.1563,4672.6719 Q3291.8281,4674.0781 3290.9297,4674.9688 Q3290.0313,4675.8594 3287.8281,4675.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="3309.75" y="4676.0576">streamState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3230" x2="3424" y1="4686.5" y2="4686.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="3235" y="4703.106">ServerMediaSubsession* subsession;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="3235" y="4718.1289">int tcpSocketNum;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="3235" y="4733.1519">void* streamToken;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3230" x2="3424" y1="4739.5688" y2="4739.5688"/><!--class ServerMediaSessionIterator--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="108.0918" id="ServerMediaSessionIterator" style="stroke: #A80036; stroke-width: 1.5;" width="272" x="2016" y="4051"/><ellipse cx="2071.75" cy="4067" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2070.3281,4072.3594 Q2068.4688,4072.3594 2067.375,4070.9688 Q2066.2813,4069.5781 2066.2813,4066.5938 Q2066.2813,4064.0625 2067.4453,4062.4063 Q2068.6094,4060.75 2070.5938,4060.75 Q2072.0625,4060.75 2072.5313,4060.875 Q2073,4061.0781 2073,4061.0781 Q2073,4061.0781 2073,4061.0078 Q2073,4060.9375 2073.6094,4060.0156 L2074.6563,4063.6719 L2073.3281,4064.0781 Q2072.8594,4062.5313 2072.1953,4061.8672 Q2071.5313,4061.2031 2070.4688,4061.2031 Q2070.0781,4061.2031 2069.3125,4062.7344 Q2068.5469,4064.2656 2068.5469,4066.5156 Q2068.5469,4068.9844 2069.2109,4070.375 Q2069.875,4071.7656 2070.4063,4071.7656 Q2071.4688,4071.7656 2072.2266,4071 Q2072.9844,4070.2344 2073.3281,4068.5781 L2074.6563,4069.1719 Q2074.3281,4070.5781 2073.4297,4071.4688 Q2072.5313,4072.3594 2070.3281,4072.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="2092.25" y="4072.5576">ServerMediaSessionIterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2017" x2="2287" y1="4083" y2="4083"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2024" y="4093.0115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="2036" y="4099.606">HashTable::Iterator* fOurIterator;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2017" x2="2287" y1="4106.0229" y2="4106.0229"/><ellipse cx="2027" cy="4119.0344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="2036" y="4122.6289">ServerMediaSessionIterator(RTSPServer&amp; server);</text><ellipse cx="2027" cy="4134.0574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2036" y="4137.6519">virtual ~ServerMediaSessionIterator();</text><ellipse cx="2027" cy="4149.0803" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="2036" y="4152.6748">ServerMediaSession* next();</text><!--class ParamsForREGISTER--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="183.2065" id="ParamsForREGISTER" style="stroke: #A80036; stroke-width: 1.5;" width="500" x="6" y="4609.5"/><ellipse cx="190.25" cy="4625.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M188.8281,4630.8594 Q186.9688,4630.8594 185.875,4629.4688 Q184.7813,4628.0781 184.7813,4625.0938 Q184.7813,4622.5625 185.9453,4620.9063 Q187.1094,4619.25 189.0938,4619.25 Q190.5625,4619.25 191.0313,4619.375 Q191.5,4619.5781 191.5,4619.5781 Q191.5,4619.5781 191.5,4619.5078 Q191.5,4619.4375 192.1094,4618.5156 L193.1563,4622.1719 L191.8281,4622.5781 Q191.3594,4621.0313 190.6953,4620.3672 Q190.0313,4619.7031 188.9688,4619.7031 Q188.5781,4619.7031 187.8125,4621.2344 Q187.0469,4622.7656 187.0469,4625.0156 Q187.0469,4627.4844 187.7109,4628.875 Q188.375,4630.2656 188.9063,4630.2656 Q189.9688,4630.2656 190.7266,4629.5 Q191.4844,4628.7344 191.8281,4627.0781 L193.1563,4627.6719 Q192.8281,4629.0781 191.9297,4629.9688 Q191.0313,4630.8594 188.8281,4630.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="123" x="210.75" y="4631.0576">ParamsForREGISTER</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="505" y1="4641.5" y2="4641.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="4651.5115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="26" y="4658.106">friend class RTSPClientConnection;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="4666.5344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="26" y="4673.1289">RTSPClientConnection* fOurConnection;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="4681.5574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="26" y="4688.1519">char* fURL;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="4696.5803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="26" y="4703.1748">char* fURLSuffix;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="4711.6033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="26" y="4718.1978">Boolean fReuseConnection, fDeliverViaTCP;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="4726.6262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="26" y="4733.2207">char* fProxyURLSuffix;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="505" y1="4739.6377" y2="4739.6377"/><ellipse cx="17" cy="4752.6492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="474" x="26" y="4756.2437">ParamsForREGISTER(RTSPClientConnection* ourConnection, char const* url, char const* urlSuffix,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="26" y="4771.2666">Boolean reuseConnection, Boolean deliverViaTCP, char const* proxyURLSuffix);</text><ellipse cx="17" cy="4782.6951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="26" y="4786.2896">virtual ~ParamsForREGISTER();</text><!--class RTSPServerSupportingHTTPStreaming--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="228.2754" id="RTSPServerSupportingHTTPStreaming" style="stroke: #A80036; stroke-width: 1.5;" width="536" x="886" y="3991"/><ellipse cx="1042.25" cy="4007" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1040.8281,4012.3594 Q1038.9688,4012.3594 1037.875,4010.9688 Q1036.7813,4009.5781 1036.7813,4006.5938 Q1036.7813,4004.0625 1037.9453,4002.4063 Q1039.1094,4000.75 1041.0938,4000.75 Q1042.5625,4000.75 1043.0313,4000.875 Q1043.5,4001.0781 1043.5,4001.0781 Q1043.5,4001.0781 1043.5,4001.0078 Q1043.5,4000.9375 1044.1094,4000.0156 L1045.1563,4003.6719 L1043.8281,4004.0781 Q1043.3594,4002.5313 1042.6953,4001.8672 Q1042.0313,4001.2031 1040.9688,4001.2031 Q1040.5781,4001.2031 1039.8125,4002.7344 Q1039.0469,4004.2656 1039.0469,4006.5156 Q1039.0469,4008.9844 1039.7109,4010.375 Q1040.375,4011.7656 1040.9063,4011.7656 Q1041.9688,4011.7656 1042.7266,4011 Q1043.4844,4010.2344 1043.8281,4008.5781 L1045.1563,4009.1719 Q1044.8281,4010.5781 1043.9297,4011.4688 Q1043.0313,4012.3594 1040.8281,4012.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="215" x="1062.75" y="4012.5576">RTSPServerSupportingHTTPStreaming</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="887" x2="1421" y1="4023" y2="4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="892" y="4039.606">UserAuthenticationDatabase* authDatabase = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="895" y="4054.6289"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="892" y="4069.6519">int ourSocket, Port ourPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="892" y="4084.6748">UserAuthenticationDatabase* authDatabase,</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="887" x2="1421" y1="4091.0918" y2="4091.0918"/><ellipse cx="897" cy="4104.1033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="906" y="4107.6978">static RTSPServerSupportingHTTPStreaming* createNew(UsageEnvironment&amp; env, Port rtspPort = 554,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="906" y="4122.7207">unsigned reclamationTestSeconds = 65);</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="909" y="4137.7437"/><ellipse cx="897" cy="4149.1721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="906" y="4152.7666">Boolean setHTTPPort(Port httpPort) { return setUpTunnelingOverHTTP(httpPort); }</text><polygon fill="#FFFF44" points="897,4159.1951,901,4163.1951,897,4167.1951,893,4163.1951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="906" y="4167.7896">RTSPServerSupportingHTTPStreaming(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="906" y="4182.8125">unsigned reclamationTestSeconds);</text><polygon fill="#FFFF44" points="897,4189.241,901,4193.241,897,4197.241,893,4193.241" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="906" y="4197.8354">virtual ~RTSPServerSupportingHTTPStreaming();</text><polygon fill="#FFFF44" points="897,4204.2639,901,4208.2639,897,4212.2639,893,4208.2639" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="510" x="906" y="4212.8584">virtual RTSPClientConnection* createNewClientConnection(int clientSocket, struct sockaddr_in clientAddr);</text><!--class RTSPClientConnectionSupportingHTTPStreaming--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="168.1836" id="RTSPClientConnectionSupportingHTTPStreaming" style="stroke: #A80036; stroke-width: 1.5;" width="612" x="541" y="4617"/><ellipse cx="705.25" cy="4633" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M703.8281,4638.3594 Q701.9688,4638.3594 700.875,4636.9688 Q699.7813,4635.5781 699.7813,4632.5938 Q699.7813,4630.0625 700.9453,4628.4063 Q702.1094,4626.75 704.0938,4626.75 Q705.5625,4626.75 706.0313,4626.875 Q706.5,4627.0781 706.5,4627.0781 Q706.5,4627.0781 706.5,4627.0078 Q706.5,4626.9375 707.1094,4626.0156 L708.1563,4629.6719 L706.8281,4630.0781 Q706.3594,4628.5313 705.6953,4627.8672 Q705.0313,4627.2031 703.9688,4627.2031 Q703.5781,4627.2031 702.8125,4628.7344 Q702.0469,4630.2656 702.0469,4632.5156 Q702.0469,4634.9844 702.7109,4636.375 Q703.375,4637.7656 703.9063,4637.7656 Q704.9688,4637.7656 705.7266,4637 Q706.4844,4636.2344 706.8281,4634.5781 L708.1563,4635.1719 Q707.8281,4636.5781 706.9297,4637.4688 Q706.0313,4638.3594 703.8281,4638.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="275" x="725.75" y="4638.5576">RTSPClientConnectionSupportingHTTPStreaming</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="542" x2="1152" y1="4649" y2="4649"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="549" y="4659.0115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="561" y="4665.606">u_int32_t fClientSessionId;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="549" y="4674.0344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="561" y="4680.6289">FramedSource* fStreamSource;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="549" y="4689.0574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="561" y="4695.6519">ByteStreamMemoryBufferSource* fPlaylistSource;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="549" y="4704.0803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="561" y="4710.6748">TCPStreamSink* fTCPSink;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="542" x2="1152" y1="4717.0918" y2="4717.0918"/><ellipse cx="552" cy="4730.1033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="586" x="561" y="4733.6978">RTSPClientConnectionSupportingHTTPStreaming(RTSPServer&amp; ourServer, int clientSocket, struct sockaddr_in clientAddr);</text><ellipse cx="552" cy="4745.1262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="561" y="4748.7207">virtual ~RTSPClientConnectionSupportingHTTPStreaming();</text><polygon fill="#FFFF44" points="552,4755.1492,556,4759.1492,552,4763.1492,548,4759.1492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="561" y="4763.7437">virtual void handleHTTPCmd_StreamingGET(char const* urlSuffix, char const* fullRequestStr);</text><polygon fill="#FFFF44" points="552,4770.1721,556,4774.1721,552,4778.1721,548,4774.1721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="561" y="4778.7666">static void afterStreaming(void* clientData);</text><!--class DynamicRTSPServer--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="168.1836" id="DynamicRTSPServer" style="stroke: #A80036; stroke-width: 1.5;" width="446" x="1188" y="4617"/><ellipse cx="1349.25" cy="4633" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1347.8281,4638.3594 Q1345.9688,4638.3594 1344.875,4636.9688 Q1343.7813,4635.5781 1343.7813,4632.5938 Q1343.7813,4630.0625 1344.9453,4628.4063 Q1346.1094,4626.75 1348.0938,4626.75 Q1349.5625,4626.75 1350.0313,4626.875 Q1350.5,4627.0781 1350.5,4627.0781 Q1350.5,4627.0781 1350.5,4627.0078 Q1350.5,4626.9375 1351.1094,4626.0156 L1352.1563,4629.6719 L1350.8281,4630.0781 Q1350.3594,4628.5313 1349.6953,4627.8672 Q1349.0313,4627.2031 1347.9688,4627.2031 Q1347.5781,4627.2031 1346.8125,4628.7344 Q1346.0469,4630.2656 1346.0469,4632.5156 Q1346.0469,4634.9844 1346.7109,4636.375 Q1347.375,4637.7656 1347.9063,4637.7656 Q1348.9688,4637.7656 1349.7266,4637 Q1350.4844,4636.2344 1350.8281,4634.5781 L1352.1563,4635.1719 Q1351.8281,4636.5781 1350.9297,4637.4688 Q1350.0313,4638.3594 1347.8281,4638.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="1369.75" y="4638.5576">DynamicRTSPServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1189" x2="1633" y1="4649" y2="4649"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="1208" y="4665.606">UserAuthenticationDatabase* authDatabase,</text><polygon fill="none" points="1199,4672.0344,1203,4676.0344,1199,4680.0344,1195,4676.0344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1208" y="4680.6289">virtual ServerMediaSession*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1189" x2="1633" y1="4687.0459" y2="4687.0459"/><ellipse cx="1199" cy="4700.0574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="1208" y="4703.6519">static DynamicRTSPServer* createNew(UsageEnvironment&amp; env, Port ourPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1208" y="4718.6748">unsigned reclamationTestSeconds = 65);</text><polygon fill="#FFFF44" points="1199,4725.1033,1203,4729.1033,1199,4733.1033,1195,4729.1033" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="1208" y="4733.6978">DynamicRTSPServer(UsageEnvironment&amp; env, int ourSocket, Port ourPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="1208" y="4748.7207">UserAuthenticationDatabase* authDatabase, unsigned reclamationTestSeconds);</text><polygon fill="#FFFF44" points="1199,4755.1492,1203,4759.1492,1199,4763.1492,1195,4759.1492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="1208" y="4763.7437">virtual ~DynamicRTSPServer();</text><polygon fill="#FFFF44" points="1199,4770.1721,1203,4774.1721,1199,4778.1721,1195,4774.1721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="1208" y="4778.7666">lookupServerMediaSession(char const* streamName, Boolean isFirstLookupInSession);</text><!--class RTSPClient--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="1940.8916" id="RTSPClient" style="stroke: #A80036; stroke-width: 1.5;" width="714" x="2729" y="627"/><ellipse cx="3049.75" cy="643" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3048.3281,648.3594 Q3046.4688,648.3594 3045.375,646.9688 Q3044.2813,645.5781 3044.2813,642.5938 Q3044.2813,640.0625 3045.4453,638.4063 Q3046.6094,636.75 3048.5938,636.75 Q3050.0625,636.75 3050.5313,636.875 Q3051,637.0781 3051,637.0781 Q3051,637.0781 3051,637.0078 Q3051,636.9375 3051.6094,636.0156 L3052.6563,639.6719 L3051.3281,640.0781 Q3050.8594,638.5313 3050.1953,637.8672 Q3049.5313,637.2031 3048.4688,637.2031 Q3048.0781,637.2031 3047.3125,638.7344 Q3046.5469,640.2656 3046.5469,642.5156 Q3046.5469,644.9844 3047.2109,646.375 Q3047.875,647.7656 3048.4063,647.7656 Q3049.4688,647.7656 3050.2266,647 Q3050.9844,646.2344 3051.3281,644.5781 L3052.6563,645.1719 Q3052.3281,646.5781 3051.4297,647.4688 Q3050.5313,648.3594 3048.3281,648.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="3070.25" y="648.5576">RTSPClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2730" x2="3442" y1="659" y2="659"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="2749" y="675.606">int verbosityLevel = 0,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2749" y="690.6289">char const* applicationName = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="2749" y="705.6519">portNumBits tunnelOverHTTPPortNum = 0,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2749" y="720.6748">Boolean streamOutgoing = False,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2749" y="735.6978">Boolean streamUsingTCP = False,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="2749" y="750.7207">Boolean forceMulticastOnUnspecified = False,</text><ellipse cx="2740" cy="762.1492" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="2749" y="765.7437">double start = 0.0f, double end = -1.0f, float scale = 1.0f,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="2749" y="780.7666">double start = 0.0f, double end = -1.0f, float scale = 1.0f,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="2749" y="795.7896">char const* absStartTime, char const* absEndTime = NULL, float scale = 1.0f,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="2749" y="810.8125">char const* absStartTime, char const* absEndTime = NULL, float scale = 1.0f,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="2749" y="825.8354">char const* parameterName, char const* parameterValue,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2749" y="840.8584">char const* sourceName,</text><ellipse cx="2740" cy="852.2869" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="2749" y="855.8813">static unsigned responseBufferSize;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="2749" y="870.9043">char*&amp; cmdURL, Boolean&amp; cmdURLWasAllocated,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="2749" y="885.9272">char const*&amp; protocolStr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="2749" y="900.9502">char*&amp; serverAddressStr, portNumBits&amp; serverPortNum,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="2749" y="915.9731">char const* scaleParamsStr, const char* speedParamsStr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="2749" y="930.9961">char const*&amp; prefix,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2749" y="946.019">char const*&amp; separator,</text><ellipse cx="2740" cy="957.4475" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="2749" y="961.042">u_int16_t desiredMaxIncomingPacketSize;</text><polygon fill="none" points="2740,967.4705,2744,971.4705,2740,975.4705,2736,971.4705" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2749" y="976.0649">int fVerbosityLevel;</text><polygon fill="none" points="2740,982.4934,2744,986.4934,2740,990.4934,2736,986.4934" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="2749" y="991.0879">unsigned fCSeq;</text><polygon fill="none" points="2740,997.5164,2744,1001.5164,2740,1005.5164,2736,1001.5164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2749" y="1006.1108">Authenticator fCurrentAuthenticator;</text><polygon fill="none" points="2740,1012.5393,2744,1016.5393,2740,1020.5393,2736,1016.5393" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="2749" y="1021.1338">Boolean fAllowBasicAuthentication;</text><polygon fill="none" points="2740,1027.5623,2744,1031.5623,2740,1035.5623,2736,1031.5623" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="2749" y="1036.1567">netAddressBits fServerAddress;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1044.5852"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="2749" y="1051.1797">portNumBits fTunnelOverHTTPPortNum;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1059.6082"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="2749" y="1066.2026">char* fUserAgentHeaderStr;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1074.6311"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="2749" y="1081.2256">unsigned fUserAgentHeaderStrLen;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1089.6541"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="2749" y="1096.2485">int fInputSocketNum, fOutputSocketNum;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1104.677"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="2749" y="1111.2715">char* fBaseURL;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1119.7"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2749" y="1126.2944">char* fLastSessionId;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1134.7229"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="410" x="2749" y="1141.3174">unsigned fSessionTimeoutParameter; // optionally set in response "Session:" headers</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1149.7458"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2749" y="1156.3403">char* fResponseBuffer;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1164.7688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="2749" y="1171.3633">unsigned fResponseBytesAlreadySeen, fResponseBufferBytesLeft;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1179.7917"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="543" x="2749" y="1186.3862">RequestQueue fRequestsAwaitingConnection, fRequestsAwaitingHTTPTunneling, fRequestsAwaitingResponse;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1194.8147"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="2749" y="1201.4092">char fSessionCookie[33];</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1209.8376"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2749" y="1216.4321">unsigned fSessionCookieCounter;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1224.8606"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="2749" y="1231.4551">Boolean fHTTPTunnelingConnectionIsPending;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2730" x2="3442" y1="1237.8721" y2="1237.8721"/><ellipse cx="2740" cy="1250.8835" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="2749" y="1254.478">static RTSPClient* createNew(UsageEnvironment&amp; env, char const* rtspURL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2749" y="1269.501">int socketNumToServer = -1);</text><ellipse cx="2740" cy="1280.9294" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2749" y="1284.5239">typedef void(responseHandler)(RTSPClient* rtspClient,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2749" y="1299.5469">int resultCode, char* resultString);</text><ellipse cx="2740" cy="1310.9753" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="2749" y="1314.5698">unsigned sendDescribeCommand(responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1325.9983" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="518" x="2749" y="1329.5928">unsigned sendOptionsCommand(responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1341.0212" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="668" x="2749" y="1344.6157">unsigned sendAnnounceCommand(char const* sdpDescription, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1356.0442" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="483" x="2749" y="1359.6387">unsigned sendSetupCommand(MediaSubsession&amp; subsession, responseHandler* responseHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2749" y="1374.6616">Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1386.0901" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="439" x="2749" y="1389.6846">unsigned sendPlayCommand(MediaSession&amp; session, responseHandler* responseHandler,</text><ellipse cx="2740" cy="1401.113" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2749" y="1404.7075">Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1416.136" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="2749" y="1419.7305">unsigned sendPlayCommand(MediaSubsession&amp; subsession, responseHandler* responseHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2749" y="1434.7534">Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1446.1819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="439" x="2749" y="1449.7764">unsigned sendPlayCommand(MediaSession&amp; session, responseHandler* responseHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2749" y="1464.7993">Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1476.2278" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="2749" y="1479.8223">unsigned sendPlayCommand(MediaSubsession&amp; subsession, responseHandler* responseHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2749" y="1494.8452">Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1506.2737" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="632" x="2749" y="1509.8682">unsigned sendPauseCommand(MediaSession&amp; session, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1521.2966" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="668" x="2749" y="1524.8911">unsigned sendPauseCommand(MediaSubsession&amp; subsession, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1536.3196" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="637" x="2749" y="1539.9141">unsigned sendRecordCommand(MediaSession&amp; session, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1551.3425" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="673" x="2749" y="1554.937">unsigned sendRecordCommand(MediaSubsession&amp; subsession, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1566.3655" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="2749" y="1569.96">unsigned sendTeardownCommand(MediaSession&amp; session, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1581.3884" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="688" x="2749" y="1584.9829">unsigned sendTeardownCommand(MediaSubsession&amp; subsession, responseHandler* responseHandler, Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1596.4114" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="2749" y="1600.0059">unsigned sendSetParameterCommand(MediaSession&amp; session, responseHandler* responseHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2749" y="1615.0288">Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1626.4573" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="626" x="2749" y="1630.0518">unsigned sendGetParameterCommand(MediaSession&amp; session, responseHandler* responseHandler, char const* parameterName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2749" y="1645.0747">Authenticator* authenticator = NULL);</text><ellipse cx="2740" cy="1656.5032" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="2749" y="1660.0977">void sendDummyUDPPackets(MediaSession&amp; session, unsigned numDummyPackets = 2);</text><ellipse cx="2740" cy="1671.5261" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="466" x="2749" y="1675.1206">void sendDummyUDPPackets(MediaSubsession&amp; subsession, unsigned numDummyPackets = 2);</text><ellipse cx="2740" cy="1686.5491" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="2749" y="1690.1436">void setSpeed(MediaSession&amp; session, float speed = 1.0f);</text><ellipse cx="2740" cy="1701.572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="450" x="2749" y="1705.1665">Boolean changeResponseHandler(unsigned cseq, responseHandler* newResponseHandler);</text><ellipse cx="2740" cy="1716.595" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="2749" y="1720.1895">int socketNum() const { return fInputSocketNum; }</text><ellipse cx="2740" cy="1731.6179" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="2749" y="1735.2124">static Boolean lookupByName(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2749" y="1750.2354">RTSPClient*&amp; resultClient);</text><ellipse cx="2740" cy="1761.6638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="2749" y="1765.2583">static Boolean parseRTSPURL(UsageEnvironment&amp; env, char const* url,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="559" x="2749" y="1780.2813">char*&amp; username, char*&amp; password, NetAddress&amp; address, portNumBits&amp; portNum, char const** urlSuffix = NULL);</text><ellipse cx="2740" cy="1791.7097" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="2749" y="1795.3042">void setUserAgentString(char const* userAgentName);</text><ellipse cx="2740" cy="1806.7327" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="2749" y="1810.3271">void disallowBasicAuthentication() { fAllowBasicAuthentication = False; }</text><ellipse cx="2740" cy="1821.7556" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="2749" y="1825.3501">unsigned sessionTimeoutParameter() const { return fSessionTimeoutParameter; }</text><ellipse cx="2740" cy="1836.7786" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="2749" y="1840.373">char const* url() const { return fBaseURL; }</text><polygon fill="#FFFF44" points="2740,1846.8015,2744,1850.8015,2740,1854.8015,2736,1850.8015" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="2749" y="1855.396">RTSPClient(UsageEnvironment&amp; env, char const* rtspURL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="538" x="2749" y="1870.4189">int verbosityLevel, char const* applicationName, portNumBits tunnelOverHTTPPortNum, int socketNumToServer);</text><polygon fill="#FFFF44" points="2740,1876.8474,2744,1880.8474,2740,1884.8474,2736,1880.8474" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2749" y="1885.4419">virtual ~RTSPClient();</text><polygon fill="#FFFF44" points="2740,1891.8704,2744,1895.8704,2740,1899.8704,2736,1895.8704" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="2749" y="1900.4648">void reset();</text><polygon fill="#FFFF44" points="2740,1906.8933,2744,1910.8933,2740,1914.8933,2736,1910.8933" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2749" y="1915.4878">void setBaseURL(char const* url);</text><polygon fill="#FFFF44" points="2740,1921.9163,2744,1925.9163,2740,1929.9163,2736,1925.9163" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="2749" y="1930.5107">int grabSocket(); // allows a subclass to reuse our input socket, so that it won't get closed when we're deleted</text><polygon fill="#FFFF44" points="2740,1936.9392,2744,1940.9392,2740,1944.9392,2736,1940.9392" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="2749" y="1945.5337">virtual unsigned sendRequest(RequestRecord* request);</text><polygon fill="#FFFF44" points="2740,1951.9622,2744,1955.9622,2740,1959.9622,2736,1955.9622" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="2749" y="1960.5566">virtual Boolean setRequestFields(RequestRecord* request,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="2749" y="1975.5796">char*&amp; extraHeaders, Boolean&amp; extraHeadersWereAllocated);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1984.0081"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2749" y="1990.6025">virtual Boolean isRTSPClient() const;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="1999.031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2749" y="2005.6255">void resetTCPSockets();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2014.054"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="2749" y="2020.6484">void resetResponseBuffer();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2029.0769"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="2749" y="2035.6714">int openConnection(); // -1: failure; 0: pending; 1: success</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2044.0999"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="645" x="2749" y="2050.6943">int connectToServer(int socketNum, portNumBits remotePortNum); // used to implement "openConnection()"; result values are the same</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2059.1228"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="2749" y="2065.7173">char* createAuthenticatorString(char const* cmd, char const* url);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2074.1458"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="2749" y="2080.7402">char* createBlocksizeString(Boolean streamUsingTCP);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2089.1687"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="2749" y="2095.7632">void handleRequestError(RequestRecord* request);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2104.1917"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="2749" y="2110.7861">Boolean parseResponseCode(char const* line, unsigned&amp; responseCode, char const*&amp; responseString);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2119.2146"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2749" y="2125.8091">void handleIncomingRequest();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2134.2375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="2749" y="2140.832">static Boolean checkForHeader(char const* line, char const* headerName, unsigned headerNameLength, char const*&amp; headerParams);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2149.2605"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="2749" y="2155.855">Boolean parseTransportParams(char const* paramsStr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="2749" y="2170.8779">unsigned char&amp; rtpChannelId, unsigned char&amp; rtcpChannelId);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2179.3064"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="2749" y="2185.9009">Boolean parseScaleParam(char const* paramStr, float&amp; scale);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2194.3293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="2749" y="2200.9238">Boolean parseSpeedParam(char const* paramStr, float&amp; speed);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2209.3523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="471" x="2749" y="2215.9468">Boolean parseRTPInfoParams(char const*&amp; paramStr, u_int16_t&amp; seqNum, u_int32_t&amp; timestamp);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2224.3752"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="625" x="2749" y="2230.9697">Boolean handleSETUPResponse(MediaSubsession&amp; subsession, char const* sessionParamsStr, char const* transportParamsStr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2749" y="2245.9927">Boolean streamUsingTCP);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2254.4211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="2749" y="2261.0156">Boolean handlePLAYResponse(MediaSession&amp; session, MediaSubsession&amp; subsession,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="2749" y="2276.0386">char const* rangeParamsStr, char const* rtpInfoParamsStr);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2284.467"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="2749" y="2291.0615">Boolean handleTEARDOWNResponse(MediaSession&amp; session, MediaSubsession&amp; subsession);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2299.49"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482" x="2749" y="2306.0845">Boolean handleGET_PARAMETERResponse(char const* parameterName, char*&amp; resultValueString);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2314.5129"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="2749" y="2321.1074">Boolean handleAuthenticationFailure(char const* wwwAuthenticateParamsStr);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2329.5359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="2749" y="2336.1304">Boolean resendCommand(RequestRecord* request);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2344.5588"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="2749" y="2351.1533">char const* sessionURL(MediaSession const&amp; session) const;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2359.5818"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="2749" y="2366.1763">static void handleAlternativeRequestByte(void*, u_int8_t requestByte);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2374.6047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="2749" y="2381.1992">void handleAlternativeRequestByte1(u_int8_t requestByte);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2389.6277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="2749" y="2396.2222">void constructSubsessionURL(MediaSubsession const&amp; subsession,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2749" y="2411.2451">char const*&amp; suffix);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2419.6736"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="2749" y="2426.2681">Boolean setupHTTPTunneling1(); // send the HTTP "GET"</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2434.6965"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="2749" y="2441.291">static void responseHandlerForHTTP_GET(RTSPClient* rtspClient, int responseCode, char* responseString);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2449.7195"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="2749" y="2456.314">void responseHandlerForHTTP_GET1(int responseCode, char* responseString);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2464.7424"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="2749" y="2471.3369">Boolean setupHTTPTunneling2(); // send the HTTP "POST"</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2479.7654"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="2749" y="2486.3599">static void connectionHandler(void*, int /*mask*/);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2494.7883"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2749" y="2501.3828">void connectionHandler1();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2509.8113"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="2749" y="2516.4058">static void incomingDataHandler(void*, int /*mask*/);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2524.8342"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2749" y="2531.4287">void incomingDataHandler1();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2539.8572"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="2749" y="2546.4517">void handleResponseBytes(int newBytesRead);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2737" y="2554.8801"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="2749" y="2561.4746">unsigned char fTCPStreamIdCount; // used for (optional) RTP/TCP</text><!--class RequestQueue--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="198.2295" id="RequestQueue" style="stroke: #A80036; stroke-width: 1.5;" width="268" x="2741" y="3049"/><ellipse cx="2828.75" cy="3065" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2827.3281,3070.3594 Q2825.4688,3070.3594 2824.375,3068.9688 Q2823.2813,3067.5781 2823.2813,3064.5938 Q2823.2813,3062.0625 2824.4453,3060.4063 Q2825.6094,3058.75 2827.5938,3058.75 Q2829.0625,3058.75 2829.5313,3058.875 Q2830,3059.0781 2830,3059.0781 Q2830,3059.0781 2830,3059.0078 Q2830,3058.9375 2830.6094,3058.0156 L2831.6563,3061.6719 L2830.3281,3062.0781 Q2829.8594,3060.5313 2829.1953,3059.8672 Q2828.5313,3059.2031 2827.4688,3059.2031 Q2827.0781,3059.2031 2826.3125,3060.7344 Q2825.5469,3062.2656 2825.5469,3064.5156 Q2825.5469,3066.9844 2826.2109,3068.375 Q2826.875,3069.7656 2827.4063,3069.7656 Q2828.4688,3069.7656 2829.2266,3069 Q2829.9844,3068.2344 2830.3281,3066.5781 L2831.6563,3067.1719 Q2831.3281,3068.5781 2830.4297,3069.4688 Q2829.5313,3070.3594 2827.3281,3070.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="2849.25" y="3070.5576">RequestQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2742" x2="3008" y1="3081" y2="3081"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2749" y="3091.0115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="2761" y="3097.606">RequestRecord* fHead;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2749" y="3106.0344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="2761" y="3112.6289">RequestRecord* fTail;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2742" x2="3008" y1="3119.0459" y2="3119.0459"/><ellipse cx="2752" cy="3132.0574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="2761" y="3135.6519">RequestQueue();</text><ellipse cx="2752" cy="3147.0803" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2761" y="3150.6748">RequestQueue(RequestQueue&amp; origQueue);</text><ellipse cx="2752" cy="3162.1033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="2761" y="3165.6978">virtual ~RequestQueue();</text><ellipse cx="2752" cy="3177.1262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2761" y="3180.7207">void enqueue(RequestRecord* request);</text><ellipse cx="2752" cy="3192.1492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2761" y="3195.7437">RequestRecord* dequeue();</text><ellipse cx="2752" cy="3207.1721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="2761" y="3210.7666">void putAtHead(RequestRecord* request);</text><ellipse cx="2752" cy="3222.1951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2761" y="3225.7896">RequestRecord* findByCSeq(unsigned cseq);</text><ellipse cx="2752" cy="3237.218" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="2761" y="3240.8125">Boolean isEmpty() const { return fHead == NULL; }</text><!--class RequestRecord--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="513.7114" id="RequestRecord" style="stroke: #A80036; stroke-width: 1.5;" width="506" x="3044" y="2891"/><ellipse cx="3249.25" cy="2907" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3247.8281,2912.3594 Q3245.9688,2912.3594 3244.875,2910.9688 Q3243.7813,2909.5781 3243.7813,2906.5938 Q3243.7813,2904.0625 3244.9453,2902.4063 Q3246.1094,2900.75 3248.0938,2900.75 Q3249.5625,2900.75 3250.0313,2900.875 Q3250.5,2901.0781 3250.5,2901.0781 Q3250.5,2901.0781 3250.5,2901.0078 Q3250.5,2900.9375 3251.1094,2900.0156 L3252.1563,2903.6719 L3250.8281,2904.0781 Q3250.3594,2902.5313 3249.6953,2901.8672 Q3249.0313,2901.2031 3247.9688,2901.2031 Q3247.5781,2901.2031 3246.8125,2902.7344 Q3246.0469,2904.2656 3246.0469,2906.5156 Q3246.0469,2908.9844 3246.7109,2910.375 Q3247.375,2911.7656 3247.9063,2911.7656 Q3248.9688,2911.7656 3249.7266,2911 Q3250.4844,2910.2344 3250.8281,2908.5781 L3252.1563,2909.1719 Q3251.8281,2910.5781 3250.9297,2911.4688 Q3250.0313,2912.3594 3247.8281,2912.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="3269.75" y="2912.5576">RequestRecord</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3045" x2="3549" y1="2923" y2="2923"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="480" x="3064" y="2939.606">MediaSession* session = NULL, MediaSubsession* subsession = NULL, u_int32_t booleanFlags = 0,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="3064" y="2954.6289">char const* absStartTime, char const* absEndTime = NULL, float scale = 1.0f,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3052" y="2963.0574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="3064" y="2969.6519">RequestRecord* fNext;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3052" y="2978.0803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="3064" y="2984.6748">unsigned fCSeq;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3052" y="2993.1033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="3064" y="2999.6978">char const* fCommandName;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3052" y="3008.1262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="3064" y="3014.7207">MediaSession* fSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3052" y="3023.1492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="3064" y="3029.7437">MediaSubsession* fSubsession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3052" y="3038.1721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3064" y="3044.7666">u_int32_t fBooleanFlags;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3052" y="3053.1951"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="3064" y="3059.7896">double fStart, fEnd;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3052" y="3068.218"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3064" y="3074.8125">char *fAbsStartTime, *fAbsEndTime;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3052" y="3083.241"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="3064" y="3089.8354">float fScale;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3052" y="3098.2639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="3064" y="3104.8584">char* fContentStr;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3052" y="3113.2869"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="3064" y="3119.8813">responseHandler* fHandler;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3045" x2="3549" y1="3126.2983" y2="3126.2983"/><ellipse cx="3055" cy="3139.3098" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="423" x="3064" y="3142.9043">RequestRecord(unsigned cseq, char const* commandName, responseHandler* handler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="429" x="3064" y="3157.9272">double start = 0.0f, double end = -1.0f, float scale = 1.0f, char const* contentStr = NULL);</text><ellipse cx="3055" cy="3169.3557" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="3064" y="3172.9502">RequestRecord(unsigned cseq, responseHandler* handler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="3064" y="3187.9731">MediaSession* session = NULL, MediaSubsession* subsession = NULL);</text><ellipse cx="3055" cy="3199.4016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3064" y="3202.9961">virtual ~RequestRecord();</text><ellipse cx="3055" cy="3214.4246" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="3064" y="3218.019">RequestRecord*&amp; next() { return fNext; }</text><ellipse cx="3055" cy="3229.4475" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3064" y="3233.042">unsigned&amp; cseq() { return fCSeq; }</text><ellipse cx="3055" cy="3244.4705" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="3064" y="3248.0649">char const* commandName() const { return fCommandName; }</text><ellipse cx="3055" cy="3259.4934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="3064" y="3263.0879">MediaSession* session() const { return fSession; }</text><ellipse cx="3055" cy="3274.5164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="3064" y="3278.1108">MediaSubsession* subsession() const { return fSubsession; }</text><ellipse cx="3055" cy="3289.5393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="3064" y="3293.1338">u_int32_t booleanFlags() const { return fBooleanFlags; }</text><ellipse cx="3055" cy="3304.5623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="3064" y="3308.1567">double start() const { return fStart; }</text><ellipse cx="3055" cy="3319.5852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="3064" y="3323.1797">double end() const { return fEnd; }</text><ellipse cx="3055" cy="3334.6082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="3064" y="3338.2026">char const* absStartTime() const { return fAbsStartTime; }</text><ellipse cx="3055" cy="3349.6311" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="3064" y="3353.2256">char const* absEndTime() const { return fAbsEndTime; }</text><ellipse cx="3055" cy="3364.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="3064" y="3368.2485">float scale() const { return fScale; }</text><ellipse cx="3055" cy="3379.677" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="3064" y="3383.2715">char* contentStr() const { return fContentStr; }</text><ellipse cx="3055" cy="3394.7" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="3064" y="3398.2944">responseHandler*&amp; handler() { return fHandler; }</text><!--class ProxyRTSPClient--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="438.5967" id="ProxyRTSPClient" style="stroke: #A80036; stroke-width: 1.5;" width="500" x="3585" y="2928.5"/><ellipse cx="3784.25" cy="2944.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3782.8281,2949.8594 Q3780.9688,2949.8594 3779.875,2948.4688 Q3778.7813,2947.0781 3778.7813,2944.0938 Q3778.7813,2941.5625 3779.9453,2939.9063 Q3781.1094,2938.25 3783.0938,2938.25 Q3784.5625,2938.25 3785.0313,2938.375 Q3785.5,2938.5781 3785.5,2938.5781 Q3785.5,2938.5781 3785.5,2938.5078 Q3785.5,2938.4375 3786.1094,2937.5156 L3787.1563,2941.1719 L3785.8281,2941.5781 Q3785.3594,2940.0313 3784.6953,2939.3672 Q3784.0313,2938.7031 3782.9688,2938.7031 Q3782.5781,2938.7031 3781.8125,2940.2344 Q3781.0469,2941.7656 3781.0469,2944.0156 Q3781.0469,2946.4844 3781.7109,2947.875 Q3782.375,2949.2656 3782.9063,2949.2656 Q3783.9688,2949.2656 3784.7266,2948.5 Q3785.4844,2947.7344 3785.8281,2946.0781 L3787.1563,2946.6719 Q3786.8281,2948.0781 3785.9297,2948.9688 Q3785.0313,2949.8594 3782.8281,2949.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="3804.75" y="2950.0576">ProxyRTSPClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3586" x2="4084" y1="2960.5" y2="2960.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="3605" y="2977.106">char const* username, char const* password,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="2985.5344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="3605" y="2992.1289">friend class ProxyServerMediaSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3000.5574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="3605" y="3007.1519">friend class ProxyServerMediaSubsession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3015.5803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="3605" y="3022.1748">ProxyServerMediaSession&amp; fOurServerMediaSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3030.6033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="3605" y="3037.1978">char* fOurURL;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3045.6262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="3605" y="3052.2207">Authenticator* fOurAuthenticator;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3060.6492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="3605" y="3067.2437">Boolean fStreamRTPOverTCP;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3075.6721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="3605" y="3082.2666">class ProxyServerMediaSubsession *fSetupQueueHead, *fSetupQueueTail;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3090.6951"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="3605" y="3097.2896">unsigned fNumSetupsDone;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3105.718"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="3605" y="3112.3125">unsigned fNextDESCRIBEDelay; // in seconds</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3120.741"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="3605" y="3127.3354">Boolean fServerSupportsGetParameter, fLastCommandWasPLAY;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3135.7639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="3605" y="3142.3584">TaskToken fLivenessCommandTask, fDESCRIBECommandTask, fSubsessionTimerTask;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3586" x2="4084" y1="3148.7754" y2="3148.7754"/><ellipse cx="3596" cy="3161.7869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="474" x="3605" y="3165.3813">ProxyRTSPClient(class ProxyServerMediaSession&amp; ourServerMediaSession, char const* rtspURL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="3605" y="3180.4043">portNumBits tunnelOverHTTPPortNum, int verbosityLevel, int socketNumToServer);</text><ellipse cx="3596" cy="3191.8328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="3605" y="3195.4272">virtual ~ProxyRTSPClient();</text><ellipse cx="3596" cy="3206.8557" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="3605" y="3210.4502">void continueAfterDESCRIBE(char const* sdpDescription);</text><ellipse cx="3596" cy="3221.8787" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="3605" y="3225.4731">void continueAfterLivenessCommand(int resultCode, Boolean serverSupportsGetParameter);</text><ellipse cx="3596" cy="3236.9016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="3605" y="3240.4961">void continueAfterSETUP();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3248.9246"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="3605" y="3255.519">void reset();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3263.9475"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="3605" y="3270.542">Authenticator* auth() { return fOurAuthenticator; }</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3278.9705"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3605" y="3285.5649">void scheduleLivenessCommand();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3293.9934"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="3605" y="3300.5879">static void sendLivenessCommand(void* clientData);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3309.0164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="3605" y="3315.6108">void scheduleDESCRIBECommand();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3324.0393"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="3605" y="3330.6338">static void sendDESCRIBE(void* clientData);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3339.0623"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="3605" y="3345.6567">static void subsessionTimeout(void* clientData);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3593" y="3354.0852"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3605" y="3360.6797">void handleSubsessionTimeout();</text><!--class ProxyServerMediaSession--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="489.1284" id="ProxyServerMediaSession" style="stroke: #A80036; stroke-width: 1.5;" width="450" x="3888" y="3860.5"/><ellipse cx="4037.25" cy="3876.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4035.8281,3881.8594 Q4033.9688,3881.8594 4032.875,3880.4688 Q4031.7813,3879.0781 4031.7813,3876.0938 Q4031.7813,3873.5625 4032.9453,3871.9063 Q4034.1094,3870.25 4036.0938,3870.25 Q4037.5625,3870.25 4038.0313,3870.375 Q4038.5,3870.5781 4038.5,3870.5781 Q4038.5,3870.5781 4038.5,3870.5078 Q4038.5,3870.4375 4039.1094,3869.5156 L4040.1563,3873.1719 L4038.8281,3873.5781 Q4038.3594,3872.0313 4037.6953,3871.3672 Q4037.0313,3870.7031 4035.9688,3870.7031 Q4035.5781,3870.7031 4034.8125,3872.2344 Q4034.0469,3873.7656 4034.0469,3876.0156 Q4034.0469,3878.4844 4034.7109,3879.875 Q4035.375,3881.2656 4035.9063,3881.2656 Q4036.9688,3881.2656 4037.7266,3880.5 Q4038.4844,3879.7344 4038.8281,3878.0781 L4040.1563,3878.6719 Q4039.8281,3880.0781 4038.9297,3880.9688 Q4038.0313,3881.8594 4035.8281,3881.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="143" x="4057.75" y="3882.0576">ProxyServerMediaSession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3889" x2="4337" y1="3892.5" y2="3892.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="3908" y="3909.106">RTSPServer* ourRTSPServer,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="3908" y="3924.1289">char const* inputStreamURL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3908" y="3939.1519">char const* streamName = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="3908" y="3954.1748">char const* username = NULL, char const* password = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3908" y="3969.1978">portNumBits tunnelOverHTTPPortNum = 0,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="3908" y="3984.2207">int verbosityLevel = 0,</text><ellipse cx="3899" cy="3995.6492" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="3908" y="3999.2437">char describeCompletedFlag;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="3908" y="4014.2666">char const* inputStreamURL, char const* streamName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="3908" y="4029.2896">char const* username, char const* password,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="3908" y="4044.3125">portNumBits tunnelOverHTTPPortNum, int verbosityLevel,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3908" y="4059.3354">int socketNumToServer,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="3908" y="4074.3584">createNewProxyRTSPClientFunc* ourCreateNewProxyRTSPClientFunc</text><polygon fill="none" points="3899,4080.7869,3903,4084.7869,3899,4088.7869,3895,4084.7869" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="3908" y="4089.3813">RTSPServer* fOurRTSPServer;</text><polygon fill="none" points="3899,4095.8098,3903,4099.8098,3899,4103.8098,3895,4099.8098" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="3908" y="4104.4043">ProxyRTSPClient* fProxyRTSPClient;</text><polygon fill="none" points="3899,4110.8328,3903,4114.8328,3899,4118.8328,3895,4114.8328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="3908" y="4119.4272">MediaSession* fClientMediaSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3896" y="4127.8557"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3908" y="4134.4502">friend class ProxyRTSPClient;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3896" y="4142.8787"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="3908" y="4149.4731">friend class ProxyServerMediaSubsession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3896" y="4157.9016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3908" y="4164.4961">int fVerbosityLevel;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3896" y="4172.9246"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="3908" y="4179.519">class PresentationTimeSessionNormalizer* fPresentationTimeSessionNormalizer;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3896" y="4187.9475"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="3908" y="4194.542">createNewProxyRTSPClientFunc* fCreateNewProxyRTSPClientFunc;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3889" x2="4337" y1="4200.959" y2="4200.959"/><ellipse cx="3899" cy="4213.9705" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="3908" y="4217.5649">static ProxyServerMediaSession* createNew(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3908" y="4232.5879">int socketNumToServer = -1);</text><ellipse cx="3899" cy="4244.0164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="3908" y="4247.6108">virtual ~ProxyServerMediaSession();</text><ellipse cx="3899" cy="4259.0393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="3908" y="4262.6338">char const* url() const;</text><ellipse cx="3899" cy="4274.0623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="3908" y="4277.6567">Boolean describeCompletedSuccessfully() const { return fClientMediaSession != NULL; }</text><polygon fill="#FFFF44" points="3899,4284.0852,3903,4288.0852,3899,4292.0852,3895,4288.0852" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="400" x="3908" y="4292.6797">ProxyServerMediaSession(UsageEnvironment&amp; env, RTSPServer* ourRTSPServer,</text><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="295" x="3908" y="4312.2866">defaultCreateNewProxyRTSPClientFunc);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3896" y="4321.594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="3908" y="4328.1885">void continueAfterDESCRIBE(char const* sdpDescription);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3896" y="4336.6169"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="404" x="3908" y="4343.2114">void resetDESCRIBEState(); // undoes what was done by "contineAfterDESCRIBE()"</text><!--class ProxyServerMediaSubsession--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="318.4131" id="ProxyServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.5;" width="667" x="3779.5" y="4542"/><ellipse cx="4026.75" cy="4558" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4025.3281,4563.3594 Q4023.4688,4563.3594 4022.375,4561.9688 Q4021.2813,4560.5781 4021.2813,4557.5938 Q4021.2813,4555.0625 4022.4453,4553.4063 Q4023.6094,4551.75 4025.5938,4551.75 Q4027.0625,4551.75 4027.5313,4551.875 Q4028,4552.0781 4028,4552.0781 Q4028,4552.0781 4028,4552.0078 Q4028,4551.9375 4028.6094,4551.0156 L4029.6563,4554.6719 L4028.3281,4555.0781 Q4027.8594,4553.5313 4027.1953,4552.8672 Q4026.5313,4552.2031 4025.4688,4552.2031 Q4025.0781,4552.2031 4024.3125,4553.7344 Q4023.5469,4555.2656 4023.5469,4557.5156 Q4023.5469,4559.9844 4024.2109,4561.375 Q4024.875,4562.7656 4025.4063,4562.7656 Q4026.4688,4562.7656 4027.2266,4562 Q4027.9844,4561.2344 4028.3281,4559.5781 L4029.6563,4560.1719 Q4029.3281,4561.5781 4028.4297,4562.4688 Q4027.5313,4563.3594 4025.3281,4563.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="164" x="4047.25" y="4563.5576">ProxyServerMediaSubsession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3780.5" x2="4445.5" y1="4574" y2="4574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3799.5" y="4590.606">unsigned char rtpPayloadTypeIfDynamic,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3787.5" y="4599.0344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3799.5" y="4605.6289">friend class ProxyRTSPClient;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3787.5" y="4614.0574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="3799.5" y="4620.6519">MediaSubsession&amp; fClientMediaSubsession; // the 'client' media subsession object that corresponds to this 'server' media subsession</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3787.5" y="4629.0803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="3799.5" y="4635.6748">ProxyServerMediaSubsession* fNext; // used when we're part of a queue</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3787.5" y="4644.1033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3799.5" y="4650.6978">Boolean fHaveSetupStream;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3780.5" x2="4445.5" y1="4657.1147" y2="4657.1147"/><ellipse cx="3790.5" cy="4670.1262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="3799.5" y="4673.7207">ProxyServerMediaSubsession(MediaSubsession&amp; mediaSubsession);</text><ellipse cx="3790.5" cy="4685.1492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="3799.5" y="4688.7437">virtual ~ProxyServerMediaSubsession();</text><ellipse cx="3790.5" cy="4700.1721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="3799.5" y="4703.7666">char const* codecName() const { return fClientMediaSubsession.codecName(); }</text><ellipse cx="3790.5" cy="4715.1951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="3799.5" y="4718.7896">char const* mediumName() const { return fClientMediaSubsession.mediumName(); }</text><ellipse cx="3790.5" cy="4730.218" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="3799.5" y="4733.8125">unsigned char rtpPayloadFormat() const { return fClientMediaSubsession.rtpPayloadFormat(); }</text><ellipse cx="3790.5" cy="4745.241" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="3799.5" y="4748.8354">virtual FramedSource* createNewStreamSource(unsigned clientSessionId,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3799.5" y="4763.8584">unsigned&amp; estBitrate);</text><ellipse cx="3790.5" cy="4775.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="3799.5" y="4778.8813">virtual void closeStreamSource(FramedSource* inputSource);</text><ellipse cx="3790.5" cy="4790.3098" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="3799.5" y="4793.9043">virtual RTPSink* createNewRTPSink(Groupsock* rtpGroupsock,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3799.5" y="4808.9272">FramedSource* inputSource);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3787.5" y="4817.3557"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="3799.5" y="4823.9502">static void subsessionByeHandler(void* clientData);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3787.5" y="4832.3787"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3799.5" y="4838.9731">void subsessionByeHandler();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3787.5" y="4847.4016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="3799.5" y="4853.9961">int verbosityLevel() const { return ((ProxyServerMediaSession*)fParentSession)-&gt;fVerbosityLevel; }</text><!--class ServerMediaSession--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="603.8491" id="ServerMediaSession" style="stroke: #A80036; stroke-width: 1.5;" width="419" x="3478.5" y="1295.5"/><ellipse cx="3626.75" cy="1311.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3625.3281,1316.8594 Q3623.4688,1316.8594 3622.375,1315.4688 Q3621.2813,1314.0781 3621.2813,1311.0938 Q3621.2813,1308.5625 3622.4453,1306.9063 Q3623.6094,1305.25 3625.5938,1305.25 Q3627.0625,1305.25 3627.5313,1305.375 Q3628,1305.5781 3628,1305.5781 Q3628,1305.5781 3628,1305.5078 Q3628,1305.4375 3628.6094,1304.5156 L3629.6563,1308.1719 L3628.3281,1308.5781 Q3627.8594,1307.0313 3627.1953,1306.3672 Q3626.5313,1305.7031 3625.4688,1305.7031 Q3625.0781,1305.7031 3624.3125,1307.2344 Q3623.5469,1308.7656 3623.5469,1311.0156 Q3623.5469,1313.4844 3624.2109,1314.875 Q3624.875,1316.2656 3625.4063,1316.2656 Q3626.4688,1316.2656 3627.2266,1315.5 Q3627.9844,1314.7344 3628.3281,1313.0781 L3629.6563,1313.6719 Q3629.3281,1315.0781 3628.4297,1315.9688 Q3627.5313,1316.8594 3625.3281,1316.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="3647.25" y="1317.0576">ServerMediaSession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3479.5" x2="3896.5" y1="1327.5" y2="1327.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3498.5" y="1344.106">char const* streamName = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="3498.5" y="1359.1289">char const* info = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="3498.5" y="1374.1519">char const* description = NULL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="3498.5" y="1389.1748">Boolean isSSM = False,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="3498.5" y="1404.1978">char const* mediumName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="3498.5" y="1419.2207">char const* info, char const* description,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1427.6492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="3498.5" y="1434.2437">Boolean fIsSSM;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1442.6721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="3498.5" y="1449.2666">friend class ServerMediaSubsessionIterator;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1457.6951"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="3498.5" y="1464.2896">ServerMediaSubsession* fSubsessionsHead;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1472.718"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="3498.5" y="1479.3125">ServerMediaSubsession* fSubsessionsTail;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1487.741"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3498.5" y="1494.3354">unsigned fSubsessionCounter;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1502.7639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="3498.5" y="1509.3584">char* fStreamName;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1517.7869"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="3498.5" y="1524.3813">char* fInfoSDPString;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1532.8098"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="3498.5" y="1539.4043">char* fDescriptionSDPString;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1547.8328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3498.5" y="1554.4272">char* fMiscSDPLines;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1562.8557"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3498.5" y="1569.4502">struct timeval fCreationTime;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1577.8787"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="3498.5" y="1584.4731">unsigned fReferenceCount;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1592.9016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="3498.5" y="1599.4961">Boolean fDeleteWhenUnreferenced;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3479.5" x2="3896.5" y1="1605.9131" y2="1605.9131"/><ellipse cx="3489.5" cy="1618.9246" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="3498.5" y="1622.519">static ServerMediaSession* createNew(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="3498.5" y="1637.542">char const* miscSDPLines = NULL);</text><ellipse cx="3489.5" cy="1648.9705" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="3498.5" y="1652.5649">static Boolean lookupByName(UsageEnvironment&amp; env,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="3498.5" y="1667.5879">ServerMediaSession*&amp; resultSession);</text><ellipse cx="3489.5" cy="1679.0164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="3498.5" y="1682.6108">char* generateSDPDescription(); // based on the entire session</text><ellipse cx="3489.5" cy="1694.0393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="3498.5" y="1697.6338">char const* streamName() const { return fStreamName; }</text><ellipse cx="3489.5" cy="1709.0623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="3498.5" y="1712.6567">Boolean addSubsession(ServerMediaSubsession* subsession);</text><ellipse cx="3489.5" cy="1724.0852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="3498.5" y="1727.6797">unsigned numSubsessions() const { return fSubsessionCounter; }</text><ellipse cx="3489.5" cy="1739.1082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="3498.5" y="1742.7026">void testScaleFactor(float&amp; scale); // sets "scale" to the actual supported scale</text><ellipse cx="3489.5" cy="1754.1311" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3498.5" y="1757.7256">float duration() const;</text><ellipse cx="3489.5" cy="1769.1541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="3498.5" y="1772.7485">unsigned referenceCount() const { return fReferenceCount; }</text><ellipse cx="3489.5" cy="1784.177" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="3498.5" y="1787.7715">void incrementReferenceCount() { ++fReferenceCount; }</text><ellipse cx="3489.5" cy="1799.2" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="3498.5" y="1802.7944">void decrementReferenceCount() { if (fReferenceCount &gt; 0) --fReferenceCount; }</text><ellipse cx="3489.5" cy="1814.2229" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="3498.5" y="1817.8174">Boolean&amp; deleteWhenUnreferenced() { return fDeleteWhenUnreferenced; }</text><ellipse cx="3489.5" cy="1829.2458" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="3498.5" y="1832.8403">void deleteAllSubsessions();</text><polygon fill="#FFFF44" points="3489.5,1839.2688,3493.5,1843.2688,3489.5,1847.2688,3485.5,1843.2688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="3498.5" y="1847.8633">ServerMediaSession(UsageEnvironment&amp; env, char const* streamName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="3498.5" y="1862.8862">Boolean isSSM, char const* miscSDPLines);</text><polygon fill="#FFFF44" points="3489.5,1869.3147,3493.5,1873.3147,3489.5,1877.3147,3485.5,1873.3147" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3498.5" y="1877.9092">virtual ~ServerMediaSession();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3486.5" y="1886.3376"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="3498.5" y="1892.9321">virtual Boolean isServerMediaSession() const;</text><!--class ServerMediaSubsession--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="799.1475" id="ServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.5;" width="524" x="4622" y="1198"/><ellipse cx="4812.25" cy="1214" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4810.8281,1219.3594 Q4808.9688,1219.3594 4807.875,1217.9688 Q4806.7813,1216.5781 4806.7813,1213.5938 Q4806.7813,1211.0625 4807.9453,1209.4063 Q4809.1094,1207.75 4811.0938,1207.75 Q4812.5625,1207.75 4813.0313,1207.875 Q4813.5,1208.0781 4813.5,1208.0781 Q4813.5,1208.0781 4813.5,1208.0078 Q4813.5,1207.9375 4814.1094,1207.0156 L4815.1563,1210.6719 L4813.8281,1211.0781 Q4813.3594,1209.5313 4812.6953,1208.8672 Q4812.0313,1208.2031 4810.9688,1208.2031 Q4810.5781,1208.2031 4809.8125,1209.7344 Q4809.0469,1211.2656 4809.0469,1213.5156 Q4809.0469,1215.9844 4809.7109,1217.375 Q4810.375,1218.7656 4810.9063,1218.7656 Q4811.9688,1218.7656 4812.7266,1218 Q4813.4844,1217.2344 4813.8281,1215.5781 L4815.1563,1216.1719 Q4814.8281,1217.5781 4813.9297,1218.4688 Q4813.0313,1219.3594 4810.8281,1219.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="135" x="4832.75" y="1219.5576">ServerMediaSubsession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4623" x2="5145" y1="1230" y2="1230"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4642" y="1246.606">netAddressBits clientAddress, // in</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="4642" y="1261.6289">Port const&amp; clientRTPPort, // in</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4642" y="1276.6519">Port const&amp; clientRTCPPort, // in</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="4642" y="1291.6748">netAddressBits&amp; destinationAddress, // in out</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4642" y="1306.6978">u_int8_t&amp; destinationTTL, // in out</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="4642" y="1321.7207">Boolean&amp; isMulticast, // out</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="4642" y="1336.7437">Port&amp; serverRTPPort, // out</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4642" y="1351.7666">Port&amp; serverRTCPPort, // out</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="4642" y="1366.7896">void*&amp; streamToken // out</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4642" y="1381.8125">TaskFunc* rtcpRRHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4642" y="1396.8354">void* rtcpRRHandlerClientData,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4642" y="1411.8584">unsigned short&amp; rtpSeqNum,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4642" y="1426.8813">unsigned&amp; rtpTimestamp,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="4642" y="1441.9043">ServerRequestAlternativeByteHandler* serverRequestAlternativeByteHandler,</text><polygon fill="none" points="4633,1448.3328,4637,1452.3328,4633,1456.3328,4629,1452.3328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="4642" y="1456.9272">ServerMediaSession* fParentSession;</text><polygon fill="none" points="4633,1463.3557,4637,1467.3557,4633,1471.3557,4629,1467.3557" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="4642" y="1471.9502">netAddressBits fServerAddressForSDP;</text><polygon fill="none" points="4633,1478.3787,4637,1482.3787,4633,1486.3787,4629,1482.3787" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="4642" y="1486.9731">portNumBits fPortNumForSDP;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4630" y="1495.4016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4642" y="1501.9961">friend class ServerMediaSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4630" y="1510.4246"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="4642" y="1517.019">friend class ServerMediaSubsessionIterator;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4630" y="1525.4475"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4642" y="1532.042">ServerMediaSubsession* fNext;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4630" y="1540.4705"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="4642" y="1547.0649">unsigned fTrackNumber;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4630" y="1555.4934"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4642" y="1562.0879">char const* fTrackId;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4623" x2="5145" y1="1568.5049" y2="1568.5049"/><ellipse cx="4633" cy="1581.5164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="4642" y="1585.1108">unsigned trackNumber() const { return fTrackNumber; }</text><ellipse cx="4633" cy="1596.5393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4642" y="1600.1338">char const* trackId();</text><ellipse cx="4633" cy="1611.5623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4642" y="1615.1567">virtual char const* sdpLines() = 0;</text><ellipse cx="4633" cy="1626.5852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="4642" y="1630.1797">virtual void getStreamParameters(unsigned clientSessionId, // in</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="4642" y="1645.2026">int tcpSocketNum, // in (-1 means use UDP, not TCP)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="4642" y="1660.2256">unsigned char rtpChannelId, // in (used if TCP)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="4642" y="1675.2485">unsigned char rtcpChannelId, // in (used if TCP)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="25" x="4642" y="1690.2715">) = 0;</text><ellipse cx="4633" cy="1701.7" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="4642" y="1705.2944">virtual void startStream(unsigned clientSessionId, void* streamToken,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="4642" y="1720.3174">void* serverRequestAlternativeByteHandlerClientData) = 0;</text><ellipse cx="4633" cy="1731.7458" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="4642" y="1735.3403">virtual void pauseStream(unsigned clientSessionId, void* streamToken);</text><ellipse cx="4633" cy="1746.7688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="423" x="4642" y="1750.3633">virtual void seekStream(unsigned clientSessionId, void* streamToken, double&amp; seekNPT,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4642" y="1765.3862">double streamDuration, u_int64_t&amp; numBytes);</text><ellipse cx="4633" cy="1776.8147" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="498" x="4642" y="1780.4092">virtual void seekStream(unsigned clientSessionId, void* streamToken, char*&amp; absStart, char*&amp; absEnd);</text><ellipse cx="4633" cy="1791.8376" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="4642" y="1795.4321">virtual void nullSeekStream(unsigned clientSessionId, void* streamToken,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4642" y="1810.4551">double streamEndTime, u_int64_t&amp; numBytes);</text><ellipse cx="4633" cy="1821.8835" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="4642" y="1825.478">virtual void setStreamScale(unsigned clientSessionId, void* streamToken, float scale);</text><ellipse cx="4633" cy="1836.9065" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="4642" y="1840.501">virtual float getCurrentNPT(void* streamToken);</text><ellipse cx="4633" cy="1851.9294" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="4642" y="1855.5239">virtual FramedSource* getStreamSource(void* streamToken);</text><ellipse cx="4633" cy="1866.9524" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="4642" y="1870.5469">virtual void deleteStream(unsigned clientSessionId, void*&amp; streamToken);</text><ellipse cx="4633" cy="1881.9753" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="4642" y="1885.5698">virtual void testScaleFactor(float&amp; scale); // sets "scale" to the actual supported scale</text><ellipse cx="4633" cy="1896.9983" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4642" y="1900.5928">virtual float duration() const;</text><ellipse cx="4633" cy="1912.0212" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="4642" y="1915.6157">virtual void getAbsoluteTimeRange(char*&amp; absStartTime, char*&amp; absEndTime) const;</text><ellipse cx="4633" cy="1927.0442" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="4642" y="1930.6387">void setServerAddressAndPortForSDP(netAddressBits addressBits,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4642" y="1945.6616">portNumBits portBits);</text><polygon fill="#FFFF44" points="4633,1952.0901,4637,1956.0901,4633,1960.0901,4629,1956.0901" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="4642" y="1960.6846">ServerMediaSubsession(UsageEnvironment&amp; env);</text><polygon fill="#FFFF44" points="4633,1967.113,4637,1971.113,4633,1975.113,4629,1971.113" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4642" y="1975.7075">virtual ~ServerMediaSubsession();</text><polygon fill="#FFFF44" points="4633,1982.136,4637,1986.136,4633,1990.136,4629,1986.136" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4642" y="1990.7305">char const* rangeSDPLine() const;</text><!--class ServerMediaSubsessionIterator--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="138.1377" id="ServerMediaSubsessionIterator" style="stroke: #A80036; stroke-width: 1.5;" width="337" x="4715.5" y="218.5"/><ellipse cx="4793.25" cy="234.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4791.8281,239.8594 Q4789.9688,239.8594 4788.875,238.4688 Q4787.7813,237.0781 4787.7813,234.0938 Q4787.7813,231.5625 4788.9453,229.9063 Q4790.1094,228.25 4792.0938,228.25 Q4793.5625,228.25 4794.0313,228.375 Q4794.5,228.5781 4794.5,228.5781 Q4794.5,228.5781 4794.5,228.5078 Q4794.5,228.4375 4795.1094,227.5156 L4796.1563,231.1719 L4794.8281,231.5781 Q4794.3594,230.0313 4793.6953,229.3672 Q4793.0313,228.7031 4791.9688,228.7031 Q4791.5781,228.7031 4790.8125,230.2344 Q4790.0469,231.7656 4790.0469,234.0156 Q4790.0469,236.4844 4790.7109,237.875 Q4791.375,239.2656 4791.9063,239.2656 Q4792.9688,239.2656 4793.7266,238.5 Q4794.4844,237.7344 4794.8281,236.0781 L4796.1563,236.6719 Q4795.8281,238.0781 4794.9297,238.9688 Q4794.0313,239.8594 4791.8281,239.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="173" x="4813.75" y="240.0576">ServerMediaSubsessionIterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4716.5" x2="5051.5" y1="250.5" y2="250.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4723.5" y="260.5115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4735.5" y="267.106">ServerMediaSession&amp; fOurSession;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4723.5" y="275.5344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4735.5" y="282.1289">ServerMediaSubsession* fNextPtr;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4716.5" x2="5051.5" y1="288.5459" y2="288.5459"/><ellipse cx="4726.5" cy="301.5574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="4735.5" y="305.1519">ServerMediaSubsessionIterator(ServerMediaSession&amp; session);</text><ellipse cx="4726.5" cy="316.5803" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="4735.5" y="320.1748">virtual ~ServerMediaSubsessionIterator();</text><ellipse cx="4726.5" cy="331.6033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="4735.5" y="335.1978">ServerMediaSubsession* next(); // NULL if none</text><ellipse cx="4726.5" cy="346.6262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="4735.5" y="350.2207">void reset();</text><!--class FramedSource--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="558.7803" id="FramedSource" style="stroke: #A80036; stroke-width: 1.5;" width="419" x="5680.5" y="8"/><ellipse cx="5844.75" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5843.3281,29.3594 Q5841.4688,29.3594 5840.375,27.9688 Q5839.2813,26.5781 5839.2813,23.5938 Q5839.2813,21.0625 5840.4453,19.4063 Q5841.6094,17.75 5843.5938,17.75 Q5845.0625,17.75 5845.5313,17.875 Q5846,18.0781 5846,18.0781 Q5846,18.0781 5846,18.0078 Q5846,17.9375 5846.6094,17.0156 L5847.6563,20.6719 L5846.3281,21.0781 Q5845.8594,19.5313 5845.1953,18.8672 Q5844.5313,18.2031 5843.4688,18.2031 Q5843.0781,18.2031 5842.3125,19.7344 Q5841.5469,21.2656 5841.5469,23.5156 Q5841.5469,25.9844 5842.2109,27.375 Q5842.875,28.7656 5843.4063,28.7656 Q5844.4688,28.7656 5845.2266,28 Q5845.9844,27.2344 5846.3281,25.5781 L5847.6563,26.1719 Q5847.3281,27.5781 5846.4297,28.4688 Q5845.5313,29.3594 5843.3281,29.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="5865.25" y="29.5576">FramedSource</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5681.5" x2="6098.5" y1="40" y2="40"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="5700.5" y="56.606">unsigned numTruncatedBytes,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="5700.5" y="71.6289">struct timeval presentationTime,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="5700.5" y="86.6519">afterGettingFunc* afterGettingFunc,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="5700.5" y="101.6748">void* afterGettingClientData,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="5700.5" y="116.6978">onCloseFunc* onCloseFunc,</text><polygon fill="none" points="5691.5,123.1262,5695.5,127.1262,5691.5,131.1262,5687.5,127.1262" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="5700.5" y="131.7207">unsigned char* fTo;</text><polygon fill="none" points="5691.5,138.1492,5695.5,142.1492,5691.5,146.1492,5687.5,142.1492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="5700.5" y="146.7437">unsigned fMaxSize;</text><polygon fill="none" points="5691.5,153.1721,5695.5,157.1721,5691.5,161.1721,5687.5,157.1721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="5700.5" y="161.7666">unsigned fFrameSize;</text><polygon fill="none" points="5691.5,168.1951,5695.5,172.1951,5691.5,176.1951,5687.5,172.1951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="5700.5" y="176.7896">unsigned fNumTruncatedBytes;</text><polygon fill="none" points="5691.5,183.218,5695.5,187.218,5691.5,191.218,5687.5,187.218" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="5700.5" y="191.8125">struct timeval fPresentationTime;</text><polygon fill="none" points="5691.5,198.241,5695.5,202.241,5691.5,206.241,5687.5,202.241" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="5700.5" y="206.8354">unsigned fDurationInMicroseconds;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5688.5" y="215.2639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="5700.5" y="221.8584">afterGettingFunc* fAfterGettingFunc;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5688.5" y="230.2869"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="5700.5" y="236.8813">void* fAfterGettingClientData;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5688.5" y="245.3098"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5700.5" y="251.9043">onCloseFunc* fOnCloseFunc;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5688.5" y="260.3328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="5700.5" y="266.9272">void* fOnCloseClientData;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5688.5" y="275.3557"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="5700.5" y="281.9502">Boolean fIsCurrentlyAwaitingData;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5681.5" x2="6098.5" y1="288.3672" y2="288.3672"/><ellipse cx="5691.5" cy="301.3787" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="5700.5" y="304.9731">static Boolean lookupByName(UsageEnvironment&amp; env, char const* sourceName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="5700.5" y="319.9961">FramedSource*&amp; resultSource);</text><ellipse cx="5691.5" cy="331.4246" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="5700.5" y="335.019">typedef void(afterGettingFunc)(void* clientData, unsigned frameSize,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="5700.5" y="350.042">unsigned durationInMicroseconds);</text><ellipse cx="5691.5" cy="361.4705" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="5700.5" y="365.0649">typedef void(onCloseFunc)(void* clientData);</text><ellipse cx="5691.5" cy="376.4934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="5700.5" y="380.0879">void getNextFrame(unsigned char* to, unsigned maxSize,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5700.5" y="395.1108">void* onCloseClientData);</text><ellipse cx="5691.5" cy="406.5393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="5700.5" y="410.1338">static void handleClosure(void* clientData);</text><ellipse cx="5691.5" cy="421.5623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="5700.5" y="425.1567">void handleClosure();</text><ellipse cx="5691.5" cy="436.5852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="5700.5" y="440.1797">void stopGettingFrames();</text><ellipse cx="5691.5" cy="451.6082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="5700.5" y="455.2026">virtual unsigned maxFrameSize() const;</text><ellipse cx="5691.5" cy="466.6311" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="5700.5" y="470.2256">virtual void doGetNextFrame() = 0;</text><ellipse cx="5691.5" cy="481.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="5700.5" y="485.2485">Boolean isCurrentlyAwaitingData() const;</text><ellipse cx="5691.5" cy="496.677" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="5700.5" y="500.2715">static void afterGetting(FramedSource* source);</text><polygon fill="#FFFF44" points="5691.5,506.7,5695.5,510.7,5691.5,514.7,5687.5,510.7" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="5700.5" y="515.2944">FramedSource(UsageEnvironment&amp; env);</text><polygon fill="#FFFF44" points="5691.5,521.7229,5695.5,525.7229,5691.5,529.7229,5687.5,525.7229" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="5700.5" y="530.3174">virtual ~FramedSource();</text><polygon fill="#FFFF44" points="5691.5,536.7458,5695.5,540.7458,5691.5,544.7458,5687.5,540.7458" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="5700.5" y="545.3403">virtual void doStopGettingFrames();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5688.5" y="553.7688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="5700.5" y="560.3633">virtual Boolean isFramedSource() const;</text><!--class FramedFilter--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="183.2065" id="FramedFilter" style="stroke: #A80036; stroke-width: 1.5;" width="356" x="5712" y="1506"/><ellipse cx="5850.75" cy="1522" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5849.3281,1527.3594 Q5847.4688,1527.3594 5846.375,1525.9688 Q5845.2813,1524.5781 5845.2813,1521.5938 Q5845.2813,1519.0625 5846.4453,1517.4063 Q5847.6094,1515.75 5849.5938,1515.75 Q5851.0625,1515.75 5851.5313,1515.875 Q5852,1516.0781 5852,1516.0781 Q5852,1516.0781 5852,1516.0078 Q5852,1515.9375 5852.6094,1515.0156 L5853.6563,1518.6719 L5852.3281,1519.0781 Q5851.8594,1517.5313 5851.1953,1516.8672 Q5850.5313,1516.2031 5849.4688,1516.2031 Q5849.0781,1516.2031 5848.3125,1517.7344 Q5847.5469,1519.2656 5847.5469,1521.5156 Q5847.5469,1523.9844 5848.2109,1525.375 Q5848.875,1526.7656 5849.4063,1526.7656 Q5850.4688,1526.7656 5851.2266,1526 Q5851.9844,1525.2344 5852.3281,1523.5781 L5853.6563,1524.1719 Q5853.3281,1525.5781 5852.4297,1526.4688 Q5851.5313,1527.3594 5849.3281,1527.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="5871.25" y="1527.5576">FramedFilter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5713" x2="6067" y1="1538" y2="1538"/><polygon fill="none" points="5723,1546.0115,5727,1550.0115,5723,1554.0115,5719,1550.0115" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="5732" y="1554.606">FramedSource* fInputSource;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5713" x2="6067" y1="1561.0229" y2="1561.0229"/><ellipse cx="5723" cy="1574.0344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="5732" y="1577.6289">FramedSource* inputSource() const;</text><ellipse cx="5723" cy="1589.0574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="5732" y="1592.6519">void reassignInputSource(FramedSource* newInputSource);</text><ellipse cx="5723" cy="1604.0803" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="5732" y="1607.6748">void detachInputSource();</text><polygon fill="#FFFF44" points="5723,1614.1033,5727,1618.1033,5723,1622.1033,5719,1618.1033" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="5732" y="1622.6978">FramedFilter(UsageEnvironment&amp; env, FramedSource* inputSource);</text><polygon fill="#FFFF44" points="5723,1629.1262,5727,1633.1262,5723,1637.1262,5719,1633.1262" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="5732" y="1637.7207">virtual ~FramedFilter();</text><polygon fill="#FFFF44" points="5723,1644.1492,5727,1648.1492,5723,1652.1492,5719,1648.1492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="5732" y="1652.7437">virtual char const* MIMEtype() const;</text><polygon fill="#FFFF44" points="5723,1659.1721,5727,1663.1721,5723,1667.1721,5719,1663.1721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="5732" y="1667.7666">virtual void getAttributes() const;</text><polygon fill="#FFFF44" points="5723,1674.1951,5727,1678.1951,5723,1682.1951,5719,1678.1951" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="5732" y="1682.7896">virtual void doStopGettingFrames();</text><!--class PresentationTimeSubsessionNormalizer--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="258.3213" id="PresentationTimeSubsessionNormalizer" style="stroke: #A80036; stroke-width: 1.5;" width="716" x="5532" y="3019"/><ellipse cx="5773.25" cy="3035" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5771.8281,3040.3594 Q5769.9688,3040.3594 5768.875,3038.9688 Q5767.7813,3037.5781 5767.7813,3034.5938 Q5767.7813,3032.0625 5768.9453,3030.4063 Q5770.1094,3028.75 5772.0938,3028.75 Q5773.5625,3028.75 5774.0313,3028.875 Q5774.5,3029.0781 5774.5,3029.0781 Q5774.5,3029.0781 5774.5,3029.0078 Q5774.5,3028.9375 5775.1094,3028.0156 L5776.1563,3031.6719 L5774.8281,3032.0781 Q5774.3594,3030.5313 5773.6953,3029.8672 Q5773.0313,3029.2031 5771.9688,3029.2031 Q5771.5781,3029.2031 5770.8125,3030.7344 Q5770.0469,3032.2656 5770.0469,3034.5156 Q5770.0469,3036.9844 5770.7109,3038.375 Q5771.375,3039.7656 5771.9063,3039.7656 Q5772.9688,3039.7656 5773.7266,3039 Q5774.4844,3038.2344 5774.8281,3036.5781 L5776.1563,3037.1719 Q5775.8281,3038.5781 5774.9297,3039.4688 Q5774.0313,3040.3594 5771.8281,3040.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="5793.75" y="3040.5576">PresentationTimeSubsessionNormalizer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5533" x2="6247" y1="3051" y2="3051"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5540" y="3061.0115"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="5552" y="3067.606">friend class PresentationTimeSessionNormalizer;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5540" y="3076.0344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="5552" y="3082.6289">PresentationTimeSessionNormalizer&amp; fParent;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5540" y="3091.0574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="5552" y="3097.6519">RTPSource* fRTPSource;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5540" y="3106.0803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="5552" y="3112.6748">RTPSink* fRTPSink;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5540" y="3121.1033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5552" y="3127.6978">char const* fCodecName;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5540" y="3136.1262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="5552" y="3142.7207">PresentationTimeSubsessionNormalizer* fNext;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5533" x2="6247" y1="3149.1377" y2="3149.1377"/><ellipse cx="5543" cy="3162.1492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="5552" y="3165.7437">void setRTPSink(RTPSink* rtpSink);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5540" y="3174.1721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="667" x="5552" y="3180.7666">PresentationTimeSubsessionNormalizer(PresentationTimeSessionNormalizer&amp; parent, FramedSource* inputSource, RTPSource* rtpSource,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="5552" y="3195.7896">char const* codecName, PresentationTimeSubsessionNormalizer* next);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5540" y="3204.218"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="5552" y="3210.8125">virtual ~PresentationTimeSubsessionNormalizer();</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5540" y="3219.241"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="5552" y="3225.8354">static void afterGettingFrame(void* clientData, unsigned frameSize, unsigned numTruncatedBytes,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="5552" y="3240.8584">struct timeval presentationTime, unsigned durationInMicroseconds);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5540" y="3249.2869"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="690" x="5552" y="3255.8813">void afterGettingFrame(unsigned frameSize, unsigned numTruncatedBytes, struct timeval presentationTime, unsigned durationInMicroseconds);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5540" y="3264.3098"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="5552" y="3270.9043">virtual void doGetNextFrame();</text><!--class PresentationTimeSessionNormalizer--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="228.2754" id="PresentationTimeSessionNormalizer" style="stroke: #A80036; stroke-width: 1.5;" width="654" x="3933" y="1483.5"/><ellipse cx="4153.75" cy="1499.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4152.3281,1504.8594 Q4150.4688,1504.8594 4149.375,1503.4688 Q4148.2813,1502.0781 4148.2813,1499.0938 Q4148.2813,1496.5625 4149.4453,1494.9063 Q4150.6094,1493.25 4152.5938,1493.25 Q4154.0625,1493.25 4154.5313,1493.375 Q4155,1493.5781 4155,1493.5781 Q4155,1493.5781 4155,1493.5078 Q4155,1493.4375 4155.6094,1492.5156 L4156.6563,1496.1719 L4155.3281,1496.5781 Q4154.8594,1495.0313 4154.1953,1494.3672 Q4153.5313,1493.7031 4152.4688,1493.7031 Q4152.0781,1493.7031 4151.3125,1495.2344 Q4150.5469,1496.7656 4150.5469,1499.0156 Q4150.5469,1501.4844 4151.2109,1502.875 Q4151.875,1504.2656 4152.4063,1504.2656 Q4153.4688,1504.2656 4154.2266,1503.5 Q4154.9844,1502.7344 4155.3281,1501.0781 L4156.6563,1501.6719 Q4156.3281,1503.0781 4155.4297,1503.9688 Q4154.5313,1504.8594 4152.3281,1504.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="204" x="4174.25" y="1505.0576">PresentationTimeSessionNormalizer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3934" x2="4586" y1="1515.5" y2="1515.5"/><ellipse cx="3944" cy="1528.5115" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="3953" y="1532.106">PresentationTimeSubsessionNormalizer*</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="3956" y="1547.1289"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3941" y="1555.5574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="3953" y="1562.1519">friend class PresentationTimeSubsessionNormalizer;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3941" y="1570.5803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="3953" y="1577.1748">PresentationTimeSubsessionNormalizer* fSubsessionNormalizers;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3941" y="1585.6033"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="3953" y="1592.1978">PresentationTimeSubsessionNormalizer* fMasterSSNormalizer;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3941" y="1600.6262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="3953" y="1607.2207">struct timeval fPTAdjustment;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3934" x2="4586" y1="1613.6377" y2="1613.6377"/><ellipse cx="3944" cy="1626.6492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="3953" y="1630.2437">PresentationTimeSessionNormalizer(UsageEnvironment&amp; env);</text><ellipse cx="3944" cy="1641.6721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="3953" y="1645.2666">virtual ~PresentationTimeSessionNormalizer();</text><ellipse cx="3944" cy="1656.6951" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="628" x="3953" y="1660.2896">createNewPresentationTimeSubsessionNormalizer(FramedSource* inputSource, RTPSource* rtpSource, char const* codecName);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3941" y="1668.718"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="3953" y="1675.3125">void normalizePresentationTime(PresentationTimeSubsessionNormalizer* ssNormalizer,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="3953" y="1690.3354">struct timeval&amp; toPT, struct timeval const&amp; fromPT);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3941" y="1698.7639"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="520" x="3953" y="1705.3584">void removePresentationTimeSubsessionNormalizer(PresentationTimeSubsessionNormalizer* ssNormalizer);</text><!--class OnDemandServerMediaSubsession--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="1039.5146" id="OnDemandServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.5;" width="675" x="4684.5" y="2628"/><ellipse cx="4918.25" cy="2644" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4916.8281,2649.3594 Q4914.9688,2649.3594 4913.875,2647.9688 Q4912.7813,2646.5781 4912.7813,2643.5938 Q4912.7813,2641.0625 4913.9453,2639.4063 Q4915.1094,2637.75 4917.0938,2637.75 Q4918.5625,2637.75 4919.0313,2637.875 Q4919.5,2638.0781 4919.5,2638.0781 Q4919.5,2638.0781 4919.5,2638.0078 Q4919.5,2637.9375 4920.1094,2637.0156 L4921.1563,2640.6719 L4919.8281,2641.0781 Q4919.3594,2639.5313 4918.6953,2638.8672 Q4918.0313,2638.2031 4916.9688,2638.2031 Q4916.5781,2638.2031 4915.8125,2639.7344 Q4915.0469,2641.2656 4915.0469,2643.5156 Q4915.0469,2645.9844 4915.7109,2647.375 Q4916.375,2648.7656 4916.9063,2648.7656 Q4917.9688,2648.7656 4918.7266,2648 Q4919.4844,2647.2344 4919.8281,2645.5781 L4921.1563,2646.1719 Q4920.8281,2647.5781 4919.9297,2648.4688 Q4919.0313,2649.3594 4916.8281,2649.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="199" x="4938.75" y="2649.5576">OnDemandServerMediaSubsession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4685.5" x2="5358.5" y1="2660" y2="2660"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4704.5" y="2676.606">protected: // we're a virtual base class</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4704.5" y="2691.6289">portNumBits initialPortNum = 6970,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4704.5" y="2706.6519">netAddressBits clientAddress,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="4704.5" y="2721.6748">Port const&amp; clientRTPPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="4704.5" y="2736.6978">Port const&amp; clientRTCPPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="4704.5" y="2751.7207">int tcpSocketNum,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="4704.5" y="2766.7437">unsigned char rtpChannelId,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4704.5" y="2781.7666">unsigned char rtcpChannelId,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="4704.5" y="2796.7896">netAddressBits&amp; destinationAddress,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4704.5" y="2811.8125">u_int8_t&amp; destinationTTL,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4704.5" y="2826.8354">Boolean&amp; isMulticast,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4704.5" y="2841.8584">Port&amp; serverRTPPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4704.5" y="2856.8813">Port&amp; serverRTCPPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4704.5" y="2871.9043">TaskFunc* rtcpRRHandler,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4704.5" y="2886.9272">void* rtcpRRHandlerClientData,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4704.5" y="2901.9502">unsigned short&amp; rtpSeqNum,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4704.5" y="2916.9731">unsigned&amp; rtpTimestamp,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="4704.5" y="2931.9961">ServerRequestAlternativeByteHandler* serverRequestAlternativeByteHandler,</text><polygon fill="none" points="4695.5,2938.4246,4699.5,2942.4246,4695.5,2946.4246,4691.5,2942.4246" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="4704.5" y="2947.019">protected: // new virtual functions, defined by all subclasses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="4704.5" y="2962.042">unsigned char rtpPayloadTypeIfDynamic,</text><polygon fill="none" points="4695.5,2968.4705,4699.5,2972.4705,4695.5,2976.4705,4691.5,2972.4705" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="4704.5" y="2977.0649">char* fSDPLines;</text><polygon fill="none" points="4695.5,2983.4934,4699.5,2987.4934,4695.5,2991.4934,4691.5,2987.4934" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="4704.5" y="2992.0879">HashTable* fDestinationsHashTable; // indexed by client session id</text><polygon fill="none" points="4695.5,2998.5164,4699.5,3002.5164,4695.5,3006.5164,4691.5,3002.5164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="4704.5" y="3007.1108">private:</text><polygon fill="none" points="4695.5,3013.5393,4699.5,3017.5393,4695.5,3021.5393,4691.5,3017.5393" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4704.5" y="3022.1338">Boolean fReuseFirstSource;</text><polygon fill="none" points="4695.5,3028.5623,4699.5,3032.5623,4695.5,3036.5623,4691.5,3032.5623" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4704.5" y="3037.1567">portNumBits fInitialPortNum;</text><polygon fill="none" points="4695.5,3043.5852,4699.5,3047.5852,4695.5,3051.5852,4691.5,3047.5852" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="4704.5" y="3052.1797">Boolean fMultiplexRTCPWithRTP;</text><polygon fill="none" points="4695.5,3058.6082,4699.5,3062.6082,4695.5,3066.6082,4691.5,3062.6082" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="4704.5" y="3067.2026">void* fLastStreamToken;</text><polygon fill="none" points="4695.5,3073.6311,4699.5,3077.6311,4695.5,3081.6311,4691.5,3077.6311" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="4704.5" y="3082.2256">char fCNAME[100]; // for RTCP</text><polygon fill="none" points="4695.5,3088.6541,4699.5,3092.6541,4695.5,3096.6541,4691.5,3092.6541" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="4704.5" y="3097.2485">RTCPAppHandlerFunc* fAppHandlerTask;</text><polygon fill="none" points="4695.5,3103.677,4699.5,3107.677,4695.5,3111.677,4691.5,3107.677" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="4704.5" y="3112.2715">void* fAppHandlerClientData;</text><polygon fill="none" points="4695.5,3118.7,4699.5,3122.7,4695.5,3126.7,4691.5,3122.7" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4704.5" y="3127.2944">friend class StreamState;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4685.5" x2="5358.5" y1="3133.7114" y2="3133.7114"/><polygon fill="#FFFF44" points="4695.5,3141.7229,4699.5,3145.7229,4695.5,3149.7229,4691.5,3145.7229" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="428" x="4704.5" y="3150.3174">OnDemandServerMediaSubsession(UsageEnvironment&amp; env, Boolean reuseFirstSource,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="4704.5" y="3165.3403">Boolean multiplexRTCPWithRTP = False);</text><polygon fill="#FFFF44" points="4695.5,3171.7688,4699.5,3175.7688,4695.5,3179.7688,4691.5,3175.7688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="4704.5" y="3180.3633">virtual ~OnDemandServerMediaSubsession();</text><polygon fill="#FFFF44" points="4695.5,3186.7917,4699.5,3190.7917,4695.5,3194.7917,4691.5,3190.7917" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4704.5" y="3195.3862">virtual char const* sdpLines();</text><polygon fill="#FFFF44" points="4695.5,3201.8147,4699.5,3205.8147,4695.5,3209.8147,4691.5,3205.8147" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="4704.5" y="3210.4092">virtual void getStreamParameters(unsigned clientSessionId,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="4704.5" y="3225.4321">void*&amp; streamToken);</text><polygon fill="#FFFF44" points="4695.5,3231.8606,4699.5,3235.8606,4695.5,3239.8606,4691.5,3235.8606" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="4704.5" y="3240.4551">virtual void startStream(unsigned clientSessionId, void* streamToken,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="4704.5" y="3255.478">void* serverRequestAlternativeByteHandlerClientData);</text><polygon fill="#FFFF44" points="4695.5,3261.9065,4699.5,3265.9065,4695.5,3269.9065,4691.5,3265.9065" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="4704.5" y="3270.501">virtual void pauseStream(unsigned clientSessionId, void* streamToken);</text><polygon fill="#FFFF44" points="4695.5,3276.9294,4699.5,3280.9294,4695.5,3284.9294,4691.5,3280.9294" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="649" x="4704.5" y="3285.5239">virtual void seekStream(unsigned clientSessionId, void* streamToken, double&amp; seekNPT, double streamDuration, u_int64_t&amp; numBytes);</text><polygon fill="#FFFF44" points="4695.5,3291.9524,4699.5,3295.9524,4695.5,3299.9524,4691.5,3295.9524" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="498" x="4704.5" y="3300.5469">virtual void seekStream(unsigned clientSessionId, void* streamToken, char*&amp; absStart, char*&amp; absEnd);</text><polygon fill="#FFFF44" points="4695.5,3306.9753,4699.5,3310.9753,4695.5,3314.9753,4691.5,3310.9753" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="4704.5" y="3315.5698">virtual void nullSeekStream(unsigned clientSessionId, void* streamToken,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4704.5" y="3330.5928">double streamEndTime, u_int64_t&amp; numBytes);</text><polygon fill="#FFFF44" points="4695.5,3337.0212,4699.5,3341.0212,4695.5,3345.0212,4691.5,3341.0212" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="4704.5" y="3345.6157">virtual void setStreamScale(unsigned clientSessionId, void* streamToken, float scale);</text><polygon fill="#FFFF44" points="4695.5,3352.0442,4699.5,3356.0442,4695.5,3360.0442,4691.5,3356.0442" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="4704.5" y="3360.6387">virtual float getCurrentNPT(void* streamToken);</text><polygon fill="#FFFF44" points="4695.5,3367.0671,4699.5,3371.0671,4695.5,3375.0671,4691.5,3371.0671" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="4704.5" y="3375.6616">virtual FramedSource* getStreamSource(void* streamToken);</text><polygon fill="#FFFF44" points="4695.5,3382.0901,4699.5,3386.0901,4695.5,3390.0901,4691.5,3386.0901" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="4704.5" y="3390.6846">virtual void deleteStream(unsigned clientSessionId, void*&amp; streamToken);</text><polygon fill="#FFFF44" points="4695.5,3397.113,4699.5,3401.113,4695.5,3405.113,4691.5,3401.113" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="4704.5" y="3405.7075">virtual char const* getAuxSDPLine(RTPSink* rtpSink,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4704.5" y="3420.7305">FramedSource* inputSource);</text><polygon fill="#FFFF44" points="4695.5,3427.1589,4699.5,3431.1589,4695.5,3435.1589,4691.5,3431.1589" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="606" x="4704.5" y="3435.7534">virtual void seekStreamSource(FramedSource* inputSource, double&amp; seekNPT, double streamDuration, u_int64_t&amp; numBytes);</text><polygon fill="#FFFF44" points="4695.5,3442.1819,4699.5,3446.1819,4695.5,3450.1819,4691.5,3446.1819" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="4704.5" y="3450.7764">virtual void seekStreamSource(FramedSource* inputSource, char*&amp; absStart, char*&amp; absEnd);</text><polygon fill="#FFFF44" points="4695.5,3457.2048,4699.5,3461.2048,4695.5,3465.2048,4691.5,3461.2048" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="4704.5" y="3465.7993">virtual void setStreamSourceScale(FramedSource* inputSource, float scale);</text><polygon fill="#FFFF44" points="4695.5,3472.2278,4699.5,3476.2278,4695.5,3480.2278,4691.5,3476.2278" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="548" x="4704.5" y="3480.8223">virtual void setStreamSourceDuration(FramedSource* inputSource, double streamDuration, u_int64_t&amp; numBytes);</text><polygon fill="#FFFF44" points="4695.5,3487.2507,4699.5,3491.2507,4695.5,3495.2507,4691.5,3491.2507" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="4704.5" y="3495.8452">virtual void closeStreamSource(FramedSource* inputSource);</text><polygon fill="#FFFF44" points="4695.5,3502.2737,4699.5,3506.2737,4695.5,3510.2737,4691.5,3506.2737" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="4704.5" y="3510.8682">virtual FramedSource* createNewStreamSource(unsigned clientSessionId,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="4704.5" y="3525.8911">unsigned&amp; estBitrate) = 0;</text><polygon fill="#FFFF44" points="4695.5,3532.3196,4699.5,3536.3196,4695.5,3540.3196,4691.5,3536.3196" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="4704.5" y="3540.9141">virtual RTPSink* createNewRTPSink(Groupsock* rtpGroupsock,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="4704.5" y="3555.937">FramedSource* inputSource) = 0;</text><polygon fill="#FFFF44" points="4695.5,3562.3655,4699.5,3566.3655,4695.5,3570.3655,4691.5,3566.3655" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="4704.5" y="3570.96">virtual Groupsock* createGroupsock(struct in_addr const&amp; addr, Port port);</text><ellipse cx="4695.5" cy="3582.3884" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="4704.5" y="3585.9829">void multiplexRTCPWithRTP() { fMultiplexRTCPWithRTP = True; }</text><ellipse cx="4695.5" cy="3597.4114" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="4704.5" y="3601.0059">void setRTCPAppPacketHandler(RTCPAppHandlerFunc* handler, void* clientData);</text><ellipse cx="4695.5" cy="3612.4343" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="4704.5" y="3616.0288">void sendRTCPAppPacket(u_int8_t subtype, char const* name,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="4704.5" y="3631.0518">u_int8_t* appDependentData, unsigned appDependentDataSize);</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4692.5" y="3639.4802"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="4704.5" y="3646.0747">void setSDPLinesFromRTPSink(RTPSink* rtpSink, FramedSource* inputSource,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="4704.5" y="3661.0977">unsigned estBitrate);</text><!--class Destinations--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="198.2295" id="Destinations" style="stroke: #A80036; stroke-width: 1.5;" width="424" x="5155" y="188.5"/><ellipse cx="5327.75" cy="204.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5326.3281,209.8594 Q5324.4688,209.8594 5323.375,208.4688 Q5322.2813,207.0781 5322.2813,204.0938 Q5322.2813,201.5625 5323.4453,199.9063 Q5324.6094,198.25 5326.5938,198.25 Q5328.0625,198.25 5328.5313,198.375 Q5329,198.5781 5329,198.5781 Q5329,198.5781 5329,198.5078 Q5329,198.4375 5329.6094,197.5156 L5330.6563,201.1719 L5329.3281,201.5781 Q5328.8594,200.0313 5328.1953,199.3672 Q5327.5313,198.7031 5326.4688,198.7031 Q5326.0781,198.7031 5325.3125,200.2344 Q5324.5469,201.7656 5324.5469,204.0156 Q5324.5469,206.4844 5325.2109,207.875 Q5325.875,209.2656 5326.4063,209.2656 Q5327.4688,209.2656 5328.2266,208.5 Q5328.9844,207.7344 5329.3281,206.0781 L5330.6563,206.6719 Q5330.3281,208.0781 5329.4297,208.9688 Q5328.5313,209.8594 5326.3281,209.8594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="5348.25" y="210.0576">Destinations</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5156" x2="5578" y1="220.5" y2="220.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="5175" y="237.106">Port const&amp; rtpDestPort,</text><ellipse cx="5166" cy="248.5344" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="5175" y="252.1289">Boolean isTCP;</text><ellipse cx="5166" cy="263.5574" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="5175" y="267.1519">struct in_addr addr;</text><ellipse cx="5166" cy="278.5803" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="5175" y="282.1748">Port rtpPort;</text><ellipse cx="5166" cy="293.6033" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="5175" y="297.1978">Port rtcpPort;</text><ellipse cx="5166" cy="308.6262" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="5175" y="312.2207">int tcpSocketNum;</text><ellipse cx="5166" cy="323.6492" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="5175" y="327.2437">unsigned char rtpChannelId, rtcpChannelId;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5156" x2="5578" y1="333.6606" y2="333.6606"/><ellipse cx="5166" cy="346.6721" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="5175" y="350.2666">Destinations(struct in_addr const&amp; destAddr,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5175" y="365.2896">Port const&amp; rtcpDestPort);</text><ellipse cx="5166" cy="376.718" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="398" x="5175" y="380.3125">Destinations(int tcpSockNum, unsigned char rtpChanId, unsigned char rtcpChanId);</text><!--class StreamState--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="588.8262" id="StreamState" style="stroke: #A80036; stroke-width: 1.5;" width="403" x="5252.5" y="1303"/><ellipse cx="5415.75" cy="1319" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5414.3281,1324.3594 Q5412.4688,1324.3594 5411.375,1322.9688 Q5410.2813,1321.5781 5410.2813,1318.5938 Q5410.2813,1316.0625 5411.4453,1314.4063 Q5412.6094,1312.75 5414.5938,1312.75 Q5416.0625,1312.75 5416.5313,1312.875 Q5417,1313.0781 5417,1313.0781 Q5417,1313.0781 5417,1313.0078 Q5417,1312.9375 5417.6094,1312.0156 L5418.6563,1315.6719 L5417.3281,1316.0781 Q5416.8594,1314.5313 5416.1953,1313.8672 Q5415.5313,1313.2031 5414.4688,1313.2031 Q5414.0781,1313.2031 5413.3125,1314.7344 Q5412.5469,1316.2656 5412.5469,1318.5156 Q5412.5469,1320.9844 5413.2109,1322.375 Q5413.875,1323.7656 5414.4063,1323.7656 Q5415.4688,1323.7656 5416.2266,1323 Q5416.9844,1322.2344 5417.3281,1320.5781 L5418.6563,1321.1719 Q5418.3281,1322.5781 5417.4297,1323.4688 Q5416.5313,1324.3594 5414.3281,1324.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="5436.25" y="1324.5576">StreamState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5253.5" x2="5654.5" y1="1335" y2="1335"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="5272.5" y="1351.606">Port const&amp; serverRTPPort, Port const&amp; serverRTCPPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="5272.5" y="1366.6289">RTPSink* rtpSink, BasicUDPSink* udpSink,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="5272.5" y="1381.6519">unsigned totalBW, FramedSource* mediaSource,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="5272.5" y="1396.6748">TaskFunc* rtcpRRHandler, void* rtcpRRHandlerClientData,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="5272.5" y="1411.6978">ServerRequestAlternativeByteHandler* serverRequestAlternativeByteHandler,</text><ellipse cx="5263.5" cy="1423.1262" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="5272.5" y="1426.7207">private:</text><ellipse cx="5263.5" cy="1438.1492" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="5272.5" y="1441.7437">OnDemandServerMediaSubsession&amp; fMaster;</text><ellipse cx="5263.5" cy="1453.1721" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="5272.5" y="1456.7666">Boolean fAreCurrentlyPlaying;</text><ellipse cx="5263.5" cy="1468.1951" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="5272.5" y="1471.7896">unsigned fReferenceCount;</text><ellipse cx="5263.5" cy="1483.218" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="5272.5" y="1486.8125">Port fServerRTPPort, fServerRTCPPort;</text><ellipse cx="5263.5" cy="1498.241" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="5272.5" y="1501.8354">RTPSink* fRTPSink;</text><ellipse cx="5263.5" cy="1513.2639" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5272.5" y="1516.8584">BasicUDPSink* fUDPSink;</text><ellipse cx="5263.5" cy="1528.2869" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="5272.5" y="1531.8813">float fStreamDuration;</text><ellipse cx="5263.5" cy="1543.3098" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5272.5" y="1546.9043">unsigned fTotalBW;</text><ellipse cx="5263.5" cy="1558.3328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5272.5" y="1561.9272">RTCPInstance* fRTCPInstance;</text><ellipse cx="5263.5" cy="1573.3557" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5272.5" y="1576.9502">FramedSource* fMediaSource;</text><ellipse cx="5263.5" cy="1588.3787" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="5272.5" y="1591.9731">float fStartNPT;</text><ellipse cx="5263.5" cy="1603.4016" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="5272.5" y="1606.9961">Groupsock* fRTPgs;</text><ellipse cx="5263.5" cy="1618.4246" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="5272.5" y="1622.019">Groupsock* fRTCPgs;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5253.5" x2="5654.5" y1="1628.436" y2="1628.436"/><ellipse cx="5263.5" cy="1641.4475" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="5272.5" y="1645.042">StreamState(OnDemandServerMediaSubsession&amp; master,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5272.5" y="1660.0649">Groupsock* rtpGS, Groupsock* rtcpGS);</text><ellipse cx="5263.5" cy="1671.4934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="5272.5" y="1675.0879">virtual ~StreamState();</text><ellipse cx="5263.5" cy="1686.5164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="5272.5" y="1690.1108">void startPlaying(Destinations* destinations,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="5272.5" y="1705.1338">void* serverRequestAlternativeByteHandlerClientData);</text><ellipse cx="5263.5" cy="1716.5623" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="5272.5" y="1720.1567">void pause();</text><ellipse cx="5263.5" cy="1731.5852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="5272.5" y="1735.1797">void sendRTCPAppPacket(u_int8_t subtype, char const* name,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="5272.5" y="1750.2026">u_int8_t* appDependentData, unsigned appDependentDataSize);</text><ellipse cx="5263.5" cy="1761.6311" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="5272.5" y="1765.2256">void endPlaying(Destinations* destinations);</text><ellipse cx="5263.5" cy="1776.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5272.5" y="1780.2485">void reclaim();</text><ellipse cx="5263.5" cy="1791.677" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5272.5" y="1795.2715">unsigned&amp; referenceCount() { return fReferenceCount; }</text><ellipse cx="5263.5" cy="1806.7" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="5272.5" y="1810.2944">Port const&amp; serverRTPPort() const { return fServerRTPPort; }</text><ellipse cx="5263.5" cy="1821.7229" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="5272.5" y="1825.3174">Port const&amp; serverRTCPPort() const { return fServerRTCPPort; }</text><ellipse cx="5263.5" cy="1836.7458" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="5272.5" y="1840.3403">RTPSink* rtpSink() const { return fRTPSink; }</text><ellipse cx="5263.5" cy="1851.7688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="5272.5" y="1855.3633">float streamDuration() const { return fStreamDuration; }</text><ellipse cx="5263.5" cy="1866.7917" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="5272.5" y="1870.3862">FramedSource* mediaSource() const { return fMediaSource; }</text><ellipse cx="5263.5" cy="1881.8147" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="5272.5" y="1885.4092">float&amp; startNPT() { return fStartNPT; }</text><!--class HandlerServerForREGISTERCommand--><rect fill="#FEFECE" filter="url(#f1aq5jm439gatp)" height="288.3672" id="HandlerServerForREGISTERCommand" style="stroke: #A80036; stroke-width: 1.5;" width="669" x="2323.5" y="3961"/><ellipse cx="2545.25" cy="3977" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2543.8281,3982.3594 Q2541.9688,3982.3594 2540.875,3980.9688 Q2539.7813,3979.5781 2539.7813,3976.5938 Q2539.7813,3974.0625 2540.9453,3972.4063 Q2542.1094,3970.75 2544.0938,3970.75 Q2545.5625,3970.75 2546.0313,3970.875 Q2546.5,3971.0781 2546.5,3971.0781 Q2546.5,3971.0781 2546.5,3971.0078 Q2546.5,3970.9375 2547.1094,3970.0156 L2548.1563,3973.6719 L2546.8281,3974.0781 Q2546.3594,3972.5313 2545.6953,3971.8672 Q2545.0313,3971.2031 2543.9688,3971.2031 Q2543.5781,3971.2031 2542.8125,3972.7344 Q2542.0469,3974.2656 2542.0469,3976.5156 Q2542.0469,3978.9844 2542.7109,3980.375 Q2543.375,3981.7656 2543.9063,3981.7656 Q2544.9688,3981.7656 2545.7266,3981 Q2546.4844,3980.2344 2546.8281,3978.5781 L2548.1563,3979.1719 Q2547.8281,3980.5781 2546.9297,3981.4688 Q2546.0313,3982.3594 2543.8281,3982.3594 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="217" x="2565.75" y="3982.5576">HandlerServerForREGISTERCommand</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2324.5" x2="2991.5" y1="3993" y2="3993"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="2343.5" y="4009.606">Port ourPort = 0, UserAuthenticationDatabase* authDatabase = NULL,</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2331.5" y="4018.0344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2343.5" y="4024.6289">onRTSPClientCreationFunc* fCreationFunc;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2331.5" y="4033.0574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2343.5" y="4039.6519">int fVerbosityLevel;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2331.5" y="4048.0803"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2343.5" y="4054.6748">char* fApplicationName;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2324.5" x2="2991.5" y1="4061.0918" y2="4061.0918"/><ellipse cx="2334.5" cy="4074.1033" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="601" x="2343.5" y="4077.6978">static HandlerServerForREGISTERCommand* createNew(UsageEnvironment&amp; env, onRTSPClientCreationFunc* creationFunc,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="2343.5" y="4092.7207">int verbosityLevel = 0, char const* applicationName = NULL);</text><ellipse cx="2334.5" cy="4104.1492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="2343.5" y="4107.7437">portNumBits serverPortNum() const { return ntohs(fServerPort.num()); }</text><polygon fill="#FFFF44" points="2334.5,4114.1721,2338.5,4118.1721,2334.5,4122.1721,2330.5,4118.1721" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="643" x="2343.5" y="4122.7666">HandlerServerForREGISTERCommand(UsageEnvironment&amp; env, onRTSPClientCreationFunc* creationFunc, int ourSocket, Port ourPort,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="453" x="2343.5" y="4137.7896">UserAuthenticationDatabase* authDatabase, int verbosityLevel, char const* applicationName);</text><polygon fill="#FFFF44" points="2334.5,4144.218,2338.5,4148.218,2334.5,4152.218,2330.5,4148.218" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="2343.5" y="4152.8125">virtual ~HandlerServerForREGISTERCommand();</text><polygon fill="#FFFF44" points="2334.5,4159.241,2338.5,4163.241,2334.5,4167.241,2330.5,4163.241" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="536" x="2343.5" y="4167.8354">virtual RTSPClient* createNewRTSPClient(char const* rtspURL, int verbosityLevel, char const* applicationName,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2343.5" y="4182.8584">int socketNumToServer);</text><polygon fill="#FFFF44" points="2334.5,4189.2869,2338.5,4193.2869,2334.5,4197.2869,2330.5,4193.2869" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="2343.5" y="4197.8813">virtual char const* allowedCommandNames(); // we support "OPTIONS" and "REGISTER" only</text><polygon fill="#FFFF44" points="2334.5,4204.3098,2338.5,4208.3098,2334.5,4212.3098,2330.5,4208.3098" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="562" x="2343.5" y="4212.9043">virtual Boolean weImplementREGISTER(char const* proxyURLSuffix, char*&amp; responseStr); // redefined to return True</text><polygon fill="#FFFF44" points="2334.5,4219.3328,2338.5,4223.3328,2334.5,4227.3328,2330.5,4223.3328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="2343.5" y="4227.9272">virtual void implementCmd_REGISTER(char const* url, char const* urlSuffix, int socketToRemoteServer,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="2343.5" y="4242.9502">Boolean deliverViaTCP, char const* proxyURLSuffix);</text><!--link Medium to GenericMediaServer--><path d="M3396.16,335.4 C3187.35,381.02 2909.26,467.67 2711,627 C2451.42,835.6 2275.65,1190.04 2185.91,1407.68 " fill="none" id="Medium-GenericMediaServer" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3394.81,328.53,3415.83,331.18,3397.75,342.22,3394.81,328.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--link GenericMediaServer to ClientConnection--><path d="M1955.49,1798.95 C1702.69,2114.64 1217.61,2720.4 994.096,2999.52 " fill="none" id="GenericMediaServer-ClientConnection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="984.628,3011.35,993.3748,3006.823,987.7524,3007.4464,987.129,3001.824,984.628,3011.35" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="987.7524" x2="994.004" y1="3007.4464" y2="2999.64"/><ellipse cx="1959.8741" cy="1793.4503" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1954.8682" x2="1964.88" y1="1799.6905" y2="1787.21"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1953.6338" x2="1966.1143" y1="1788.4443" y2="1798.4562"/><!--link GenericMediaServer to ClientSession--><path d="M2169.81,1801.72 C2259.92,2142.06 2437.81,2813.91 2502.1,3056.74 " fill="none" id="GenericMediaServer-ClientSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2505.99,3071.43,2507.5509,3061.7056,2504.7091,3066.5969,2499.8179,3063.7551,2505.99,3071.43" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2504.7091" x2="2502.155" y1="3066.5969" y2="3056.925"/><ellipse cx="2168.0194" cy="1794.943" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2170.0689" x2="2165.97" y1="1802.6761" y2="1787.21"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2160.2864" x2="2175.7525" y1="1796.9925" y2="1792.8936"/><!--link GenericMediaServer to RTSPServer--><path d="M2099.82,1807.31 C2081.66,2041.65 2051.72,2427.96 2028.65,2725.69 " fill="none" id="GenericMediaServer-RTSPServer" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="2092.85,1806.61,2101.38,1787.21,2106.81,1807.7,2092.85,1806.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServer to RTSPServerWithREGISTERProxying--><path d="M1868.19,3589.64 C1835.83,3701.19 1802.7,3815.45 1775.89,3907.852 " fill="none" id="RTSPServer-RTSPServerWithREGISTERProxying" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1861.5,3587.57,1873.8,3570.31,1874.95,3591.47,1861.5,3587.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServer to RTSPClientConnection--><path d="M1667.32,3384.7 C1514.45,3484.81 1326.41,3595.02 1144,3668 C1027.45,3714.63 977.349,3666.35 868,3728 C866.646,3728.76 865.295,3729.53 863.946,3730.31 " fill="none" id="RTSPServer-RTSPClientConnection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="850.789,3738.13,860.5694,3736.971,855.0873,3735.5757,856.4826,3730.0937,850.789,3738.13" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="855.0873" x2="863.683" y1="3735.5757" y2="3730.465"/><ellipse cx="1673.4468" cy="3380.6771" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1666.7635" x2="1680.13" y1="3385.0741" y2="3376.28"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1669.0497" x2="1677.8438" y1="3373.9938" y2="3387.3603"/><!--link ClientConnection to RTSPClientConnection--><path d="M817.196,3303.28 C773.454,3418.04 711.818,3579.75 655.377,3727.83 " fill="none" id="ClientConnection-RTSPClientConnection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="810.667,3300.76,824.331,3284.56,823.748,3305.74,810.667,3300.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServer to RTSPClientSession--><path d="M2224.15,3581.61 C2255.53,3614.96 2290.42,3644.66 2329,3668 C2588.96,3825.28 2740.37,3587.93 3010,3728 C3052.4,3750.03 3091.41,3780.39 3126.49,3814.39 " fill="none" id="RTSPServer-RTSPClientSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3137.25,3825.06,3133.6712,3815.8844,3133.6978,3821.5412,3128.041,3821.5678,3137.25,3825.06" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3133.6978" x2="3126.595" y1="3821.5412" y2="3814.5"/><ellipse cx="2219.0517" cy="3576.0519" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2224.4633" x2="2213.64" y1="3581.9437" y2="3570.16"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2213.1598" x2="2224.9435" y1="3581.4635" y2="3570.6402"/><!--link ClientSession to RTSPClientSession--><path d="M2534.91,3244.48 C2551.18,3362.27 2596.72,3560.1 2723,3668 C2822.07,3752.65 2898.11,3661.2 3010,3728 C3053.44,3753.93 3093.75,3788 3130.05,3825.05 " fill="none" id="ClientSession-RTSPClientSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2527.95,3245.26,2532.32,3224.52,2541.83,3243.46,2527.95,3245.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPClientSession to streamState--><path d="M3327,4399.987 C3327,4490.549 3327,4581.485 3327,4639.108 " fill="none" id="RTSPClientSession-streamState" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3327,4654.45,3331,4645.45,3327,4649.45,3323,4645.45,3327,4654.45" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3327" x2="3327" y1="4649.45" y2="4639.45"/><ellipse cx="3327" cy="4392.738" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3327" x2="3327" y1="4400.738" y2="4384.738"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3319" x2="3335" y1="4392.738" y2="4392.738"/><!--link RTSPServer to ServerMediaSessionIterator--><path d="M2067.25,3585.2 C2095.68,3759.22 2125.31,3940.604 2140.89,4035.986 " fill="none" id="RTSPServer-ServerMediaSessionIterator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2143.31,4050.821,2145.8085,4041.2943,2142.5048,4045.8863,2137.9129,4042.5826,2143.31,4050.821" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2142.5048" x2="2140.895" y1="4045.8863" y2="4036.017"/><ellipse cx="2066.108" cy="3578.2056" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2067.396" x2="2064.82" y1="3586.1013" y2="3570.31"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2058.2124" x2="2074.0036" y1="3579.4936" y2="3576.9176"/><!--link RTSPClientConnection to ParamsForREGISTER--><path d="M343.861,4496.135 C328.404,4531.999 313.817,4565.847 301.133,4595.278 " fill="none" id="RTSPClientConnection-ParamsForREGISTER" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="295.064,4609.36,302.2995,4602.6781,297.043,4604.7683,294.9528,4599.5118,295.064,4609.36" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="297.043" x2="301.0005" y1="4604.7683" y2="4595.585"/><ellipse cx="346.7053" cy="4489.536" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="343.5396" x2="349.871" y1="4496.883" y2="4482.189"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="339.3583" x2="354.0523" y1="4486.3703" y2="4492.7017"/><!--link RTSPServer to RTSPServerSupportingHTTPStreaming--><path d="M1666.24,3478.42 C1589.78,3558.43 1510.03,3644.91 1439,3728 C1366.21,3813.14 1289.87,3914.613 1234.53,3990.672 " fill="none" id="RTSPServer-RTSPServerSupportingHTTPStreaming" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1661.59,3473.16,1680.48,3463.56,1671.7,3482.84,1661.59,3473.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServerSupportingHTTPStreaming to RTSPClientConnectionSupportingHTTPStreaming--><path d="M1088.54,4232.655 C1031.2,4343.604 949.093,4502.466 896.918,4603.417 " fill="none" id="RTSPServerSupportingHTTPStreaming-RTSPClientConnectionSupportingHTTPStreaming" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="889.918,4616.96,897.6037,4610.8012,892.2137,4612.5182,890.4968,4607.1282,889.918,4616.96" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="892.2137" x2="896.805" y1="4612.5182" y2="4603.6345"/><ellipse cx="1091.8575" cy="4226.2323" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1088.1851" x2="1095.53" y1="4233.3395" y2="4219.125"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1084.7503" x2="1098.9648" y1="4222.5598" y2="4229.9047"/><!--link RTSPClientConnection to RTSPClientConnectionSupportingHTTPStreaming--><path d="M734.053,4499.731 C758.676,4543.389 781.532,4583.917 800.151,4616.931 " fill="none" id="RTSPClientConnection-RTSPClientConnectionSupportingHTTPStreaming" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="727.888,4503.048,724.161,4482.189,740.083,4496.171,727.888,4503.048" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServerSupportingHTTPStreaming to DynamicRTSPServer--><path d="M1210.95,4237.635 C1261.07,4353.478 1332.51,4518.59 1375.07,4616.96 " fill="none" id="RTSPServerSupportingHTTPStreaming-DynamicRTSPServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1204.46,4240.26,1202.94,4219.125,1217.31,4234.701,1204.46,4240.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Medium to RTSPClient--><path d="M3549.78,478.69 C3518.48,525.92 3486.88,577.28 3461,627 C3454.96,638.61 3448.96,650.33 3443,662.16 " fill="none" id="Medium-RTSPClient" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3544.12,474.56,3561.06,461.83,3555.76,482.35,3544.12,474.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPClient to RequestQueue--><path d="M2952.11,2581.12 C2926.02,2772.57 2902.44,2945.65 2888.41,3048.61 " fill="none" id="RTSPClient-RequestQueue" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2953.87,2568.19,2949.0952,2573.5938,2952.2469,2580.0797,2957.0217,2574.6759,2953.87,2568.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPClient to RequestRecord--><path d="M3219.92,2581.31 C3235.35,2694.54 3249.9,2801.34 3262.12,2891 " fill="none" id="RTSPClient-RequestRecord" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3218.13,2568.19,3214.9783,2574.6759,3219.7531,2580.0797,3222.9048,2573.5938,3218.13,2568.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPClient to ProxyRTSPClient--><path d="M3455.92,2562.07 C3457.61,2564.05 3459.3,2566.03 3461,2568 C3496.39,2608.97 3529.46,2588.99 3567,2628 C3648.92,2713.13 3711.78,2828.26 3755.96,2928.45 " fill="none" id="RTSPClient-ProxyRTSPClient" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3450.53,2566.54,3443.14,2546.68,3461.3,2557.59,3450.53,2566.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ProxyRTSPClient to ProxyServerMediaSession--><path d="M3887.78,3367.8 C3927.78,3513.1 3983.26,3704.19 4029.25,3855.27 " fill="none" id="ProxyRTSPClient-ProxyServerMediaSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4030.74,3860.175,4031.9451,3850.4001,4029.2836,3855.3918,4024.292,3852.7303,4030.74,3860.175" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ProxyServerMediaSession to ProxyRTSPClient--><path d="M4053.97,3860.175 C4012.46,3710.12 3956.78,3519.21 3911.84,3372.98 " fill="none" id="ProxyServerMediaSession-ProxyRTSPClient" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3910.25,3367.8,3909.0798,3377.5791,3911.7234,3372.578,3916.7246,3375.2216,3910.25,3367.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ProxyRTSPClient to ProxyServerMediaSubsession--><path d="M3790.02,3367.73 C3744.67,3642.02 3702.77,4120.154 3870,4482 C3879.12,4501.73 3890.96,4520.441 3904.5,4537.995 " fill="none" id="ProxyRTSPClient-ProxyServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3907.6,4541.958,3905.2097,4532.4036,3904.5211,4538.0184,3898.9063,4537.3298,3907.6,4541.958" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Medium to ServerMediaSession--><path d="M3688,481.52 C3688,695.97 3688,1044.95 3688,1295.38 " fill="none" id="Medium-ServerMediaSession" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3681,481.52,3688,461.52,3695,481.52,3681,481.52" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Medium to ServerMediaSubsession--><path d="M3979.74,326.43 C4181.44,367.53 4441.72,452.45 4604,627 C4747.45,781.29 4817.91,1004.55 4852.31,1197.93 " fill="none" id="Medium-ServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3978.35,333.29,3960.1,322.53,3981.08,319.56,3978.35,333.29" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ServerMediaSubsessionIterator to ServerMediaSubsession--><path d="M4884,361.58 C4884,519.05 4884,900.22 4884,1197.77 " fill="none" id="ServerMediaSubsessionIterator-ServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4884,356.53,4880,365.53,4884,361.53,4888,365.53,4884,356.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ServerMediaSession to ProxyServerMediaSession--><path d="M3685.46,1919.57 C3700.72,2128.68 3754.46,2393.99 3915,2568 C3974.19,2632.15 4050.3,2557.67 4102,2628 C4366.94,2988.43 4275.68,3543.61 4190.8,3860.353 " fill="none" id="ServerMediaSession-ProxyServerMediaSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3678.47,1919.94,3684.1,1899.51,3692.44,1918.99,3678.47,1919.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ProxyServerMediaSession to ProxyServerMediaSubsession--><path d="M4113,4349.745 C4113,4412.684 4113,4478.922 4113,4536.648 " fill="none" id="ProxyServerMediaSession-ProxyServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4113,4541.852,4117,4532.852,4113,4536.852,4109,4532.852,4113,4541.852" style="stroke: #A80036; stroke-width: 1.0;"/><!--link FramedSource to FramedFilter--><path d="M5890,587.28 C5890,883.38 5890,1318.94 5890,1505.86 " fill="none" id="FramedSource-FramedFilter" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5883,587.09,5890,567.09,5897,587.09,5883,587.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--link FramedFilter to PresentationTimeSubsessionNormalizer--><path d="M5890,1709.13 C5890,1988.53 5890,2721.52 5890,3018.89 " fill="none" id="FramedFilter-PresentationTimeSubsessionNormalizer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5883,1709.02,5890,1689.02,5897,1709.02,5883,1709.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Medium to PresentationTimeSessionNormalizer--><path d="M3827.46,478.59 C3858.64,525.73 3889.87,577.07 3915,627 C4063.9,922.82 4178.06,1298.58 4229.71,1483.39 " fill="none" id="Medium-PresentationTimeSessionNormalizer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3821.51,482.29,3816.21,461.77,3833.15,474.51,3821.51,482.29" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ServerMediaSubsession to OnDemandServerMediaSubsession--><path d="M4921.31,2017.15 C4938.07,2205.24 4958.02,2429.1 4975.73,2627.75 " fill="none" id="ServerMediaSubsession-OnDemandServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4914.32,2017.57,4919.52,1997.03,4928.26,2016.33,4914.32,2017.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Destinations to OnDemandServerMediaSubsession--><path d="M5316.54,391.23 C5286.9,456.95 5252.01,544.97 5235,627 C5059.74,1472.28 5281.73,1712.94 5163,2568 C5160.26,2587.73 5157.14,2607.76 5153.7,2627.94 " fill="none" id="Destinations-OnDemandServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5318.66,386.53,5311.3113,393.0872,5316.6028,391.0872,5318.6029,396.3787,5318.66,386.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Destinations to StreamState--><path d="M5373.86,391.66 C5386.79,586.09 5415.2,1013.21 5434.48,1303 " fill="none" id="Destinations-StreamState" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5373.52,386.54,5370.1205,395.7836,5373.8488,391.5292,5378.1032,395.2575,5373.52,386.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--link StreamState to OnDemandServerMediaSubsession--><path d="M5391.93,1897.38 C5349.81,2090.13 5290.1,2345.47 5225,2568 C5219.24,2587.68 5213.2,2607.67 5206.96,2627.82 " fill="none" id="StreamState-OnDemandServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5393.05,1892.27,5387.2371,1900.2205,5391.9926,1897.1569,5395.0562,1901.9124,5393.05,1892.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--link OnDemandServerMediaSubsession to ProxyServerMediaSubsession--><path d="M4808.39,3686.91 C4694,3940.997 4538.71,4240.713 4355,4482 C4339.41,4502.471 4321.72,4522.552 4303.17,4541.734 " fill="none" id="OnDemandServerMediaSubsession-ProxyServerMediaSubsession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4802.16,3683.7,4816.73,3668.31,4814.93,3689.42,4802.16,3683.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RTSPServer to HandlerServerForREGISTERCommand--><path d="M2273.52,3586.8 C2292.07,3614.43 2310.67,3641.69 2329,3668 C2398.38,3767.6 2480.63,3876.595 2545.53,3960.697 " fill="none" id="RTSPServer-HandlerServerForREGISTERCommand" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2267.6,3590.54,2262.29,3570.03,2279.23,3582.76,2267.6,3590.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml


class Medium {
    + static Boolean lookupByName(UsageEnvironment& env, char const* mediumName, Medium*& resultMedium);
    + static void close(UsageEnvironment& env, char const* mediumName);
    + static void close(Medium* medium); // alternative close() method using ptrs
    + UsageEnvironment& envir() const { return fEnviron; }
    + char const* name() const { return fMediumName; }
    + virtual Boolean isSource() const;
    + virtual Boolean isSink() const;
    + virtual Boolean isRTCPInstance() const;
    + virtual Boolean isRTSPClient() const;
    + virtual Boolean isRTSPServer() const;
    + virtual Boolean isMediaSession() const;
    + virtual Boolean isServerMediaSession() const;
    + virtual Boolean isDarwinInjector() const;
    # friend class MediaLookupTable;
    # Medium(UsageEnvironment& env);
    # virtual ~Medium();
    # TaskToken& nextTask();
    - UsageEnvironment& fEnviron;
    - char fMediumName[mediumNameMaxLen];
    - TaskToken fNextTask;
}


class GenericMediaServer {
    + void addServerMediaSession(ServerMediaSession* serverMediaSession);
    + virtual ServerMediaSession*
    + lookupServerMediaSession(char const* streamName, Boolean isFirstLookupInSession = True);
    + void removeServerMediaSession(ServerMediaSession* serverMediaSession);
    + void removeServerMediaSession(char const* streamName);
    + void closeAllClientSessionsForServerMediaSession(ServerMediaSession* serverMediaSession);
    + void closeAllClientSessionsForServerMediaSession(char const* streamName);
    + void deleteServerMediaSession(ServerMediaSession* serverMediaSession);
    + void deleteServerMediaSession(char const* streamName);
    # GenericMediaServer(UsageEnvironment& env, int ourSocket, Port ourPort);
    # virtual ~GenericMediaServer();
    # static int setUpOurSocket(UsageEnvironment& env, Port& ourPort);
    # static void incomingConnectionHandler(void*, int /*mask*/);
    # void incomingConnectionHandler();
    # void incomingConnectionHandlerOnSocket(int serverSocket);
    # virtual ClientConnection*
    # createNewClientConnection(int clientSocket, struct sockaddr_in clientAddr) = 0;
    # int fServerSocket;
    # Port fServerPort;
    # HashTable* fServerMediaSessions;
    # HashTable* fClientConnections;
    # HashTable* fClientSessions;
}
Medium <|.. GenericMediaServer


class ClientConnection {
    # ClientConnection(GenericMediaServer& ourServer, int clientSocket, struct sockaddr_in clientAddr);
    # virtual ~ClientConnection();
    # UsageEnvironment& envir() { return fOurServer.envir(); }
    # void closeSockets();
    # static void incomingRequestHandler(void*, int /*mask*/);
    # void incomingRequestHandler();
    # virtual void handleRequestBytes(int newBytesRead) = 0;
    # void resetRequestBuffer();
    # friend class GenericMediaServer;
    # GenericMediaServer& fOurServer;
    # int fOurSocket;
    # struct sockaddr_in fClientAddr;
    # unsigned char fRequestBuffer[REQUEST_BUFFER_SIZE];
    # unsigned char fResponseBuffer[RESPONSE_BUFFER_SIZE];
    # unsigned fRequestBytesAlreadySeen, fRequestBufferBytesLeft;
}
GenericMediaServer +- -> ClientConnection


class ClientSession {
    + ClientSession(GenericMediaServer& ourServer, u_int32_t sessionId);
    + virtual ~ClientSession();
    + UsageEnvironment& envir() { return fOurServer.envir(); }

    # friend class GenericMediaServer;
    # GenericMediaServer& fOurServer;
    # u_int32_t fOurSessionId;
    # ServerMediaSession* fOurServerMediaSession;
}
GenericMediaServer +- -> ClientSession


class RTSPServer {
    + static RTSPServer* createNew(UsageEnvironment& env, Port ourPort = 554,
    +     UserAuthenticationDatabase* authDatabase = NULL,
    +     unsigned reclamationTestSeconds = 65);
    + static Boolean lookupByName(UsageEnvironment& env, char const* name,
    +     RTSPServer*& resultServer);
    + typedef void(responseHandlerForREGISTER)(RTSPServer* rtspServer, unsigned requestId, int resultCode, char* resultString);
    + unsigned registerStream(ServerMediaSession* serverMediaSession,
    +     char const* remoteClientNameOrAddress, portNumBits remoteClientPortNum,
    +     responseHandlerForREGISTER* responseHandler,
    +     char const* username = NULL, char const* password = NULL,
    +     Boolean receiveOurStreamViaTCP = False,
    +     char const* proxyURLSuffix = NULL);
    + char* rtspURL(ServerMediaSession const* serverMediaSession, int clientSocket = -1) const;
    + char* rtspURLPrefix(int clientSocket = -1) const;
    + UserAuthenticationDatabase* setAuthenticationDatabase(UserAuthenticationDatabase* newDB);
    + void disableStreamingRTPOverTCP();
    + Boolean setUpTunnelingOverHTTP(Port httpPort);
    + portNumBits httpServerPortNum() const; // in host byte order.  (Returns 0 if not present.)
    # RTSPServer(UsageEnvironment& env,
          int ourSocket, Port ourPort,
          UserAuthenticationDatabase* authDatabase,
          unsigned reclamationTestSeconds);
    # virtual ~RTSPServer();
    # virtual char const* allowedCommandNames();
    # virtual Boolean weImplementREGISTER(char const* proxyURLSuffix, char*& responseStr);
    # virtual void implementCmd_REGISTER(char const* url, char const* urlSuffix, int socketToRemoteServer,
          Boolean deliverViaTCP, char const* proxyURLSuffix);
    # virtual UserAuthenticationDatabase* getAuthenticationDatabaseForCommand(char const* cmdName);
    # virtual Boolean specialClientAccessCheck(int clientSocket, struct sockaddr_in& clientAddr,
          char const* urlSuffix);
    # virtual Boolean specialClientUserAccessCheck(int clientSocket, struct sockaddr_in& clientAddr,
        char const* urlSuffix, char const* username);
    - virtual Boolean isRTSPServer() const;
    # virtual ClientConnection* createNewClientConnection(int clientSocket, struct sockaddr_in clientAddr);
    # virtual ClientSession* createNewClientSession(u_int32_t sessionId);
    - static void incomingConnectionHandlerHTTP(void*, int /*mask*/);
    - void incomingConnectionHandlerHTTP();
    - void noteTCPStreamingOnSocket(int socketNum, RTSPClientSession* clientSession, unsigned trackNum);
    - void unnoteTCPStreamingOnSocket(int socketNum, RTSPClientSession* clientSession, unsigned trackNum);
    - void stopTCPStreamingOnSocket(int socketNum);
    - friend class RTSPClientConnection;
    - friend class RTSPClientSession;
    - friend class ServerMediaSessionIterator;
    - friend class RegisterRequestRecord;
    - int fHTTPServerSocket;
    - Port fHTTPServerPort; 
    - HashTable* fClientConnectionsForHTTPTunneling;
    - HashTable* fTCPStreamingDatabase;
    - HashTable* fPendingRegisterRequests;
    - unsigned fRegisterRequestCounter;
    - UserAuthenticationDatabase* fAuthDB;
    - unsigned fReclamationTestSeconds;
    - Boolean fAllowStreamingRTPOverTCP;
}
GenericMediaServer <|.. RTSPServer


class RTSPServerWithREGISTERProxying {
    + static RTSPServerWithREGISTERProxying* createNew(UsageEnvironment& env, Port ourPort = 554,
        UserAuthenticationDatabase* authDatabase = NULL,
        UserAuthenticationDatabase* authDatabaseForREGISTER = NULL,
        unsigned reclamationTestSeconds = 65,
        Boolean streamRTPOverTCP = False,
        int verbosityLevelForProxying = 0);

    # RTSPServerWithREGISTERProxying(UsageEnvironment& env, int ourSocket, Port ourPort,
        UserAuthenticationDatabase* authDatabase, UserAuthenticationDatabase* authDatabaseForREGISTER,
        unsigned reclamationTestSeconds,
        Boolean streamRTPOverTCP, int verbosityLevelForProxying);
    # virtual ~RTSPServerWithREGISTERProxying();
    # virtual char const* allowedCommandNames();
    # virtual Boolean weImplementREGISTER(char const* proxyURLSuffix, char*& responseStr);
    # virtual void implementCmd_REGISTER(char const* url, char const* urlSuffix, int socketToRemoteServer,
        Boolean deliverViaTCP, char const* proxyURLSuffix);
    # virtual UserAuthenticationDatabase* getAuthenticationDatabaseForCommand(char const* cmdName);
    - Boolean fStreamRTPOverTCP;
    - int fVerbosityLevelForProxying;
    - unsigned fRegisteredProxyCounter;
    - char* fAllowedCommandNames;
    - UserAuthenticationDatabase* fAuthDBForREGISTER;
}
RTSPServer <|- - RTSPServerWithREGISTERProxying


class RTSPClientConnection {
    # virtual void handleRequestBytes(int newBytesRead);
    # RTSPClientConnection(RTSPServer& ourServer, int clientSocket, struct sockaddr_in clientAddr);
    # virtual ~RTSPClientConnection();
    # friend class RTSPServer;
    # virtual void handleCmd_OPTIONS();
    # virtual void handleCmd_GET_PARAMETER(char const* fullRequestStr);
    # virtual void handleCmd_SET_PARAMETER(char const* fullRequestStr);
    # virtual void handleCmd_DESCRIBE(char const* urlPreSuffix, char const* urlSuffix, char const* fullRequestStr);
    # virtual void handleCmd_REGISTER(char const* url, char const* urlSuffix, char const* fullRequestStr,
    #     Boolean reuseConnection, Boolean deliverViaTCP, char const* proxyURLSuffix);
    # virtual void handleCmd_bad();
    # virtual void handleCmd_notSupported();
    # virtual void handleCmd_notFound();
    # virtual void handleCmd_sessionNotFound();
    # virtual void handleCmd_unsupportedTransport();
    # virtual Boolean parseHTTPRequestString(char* resultCmdName, unsigned resultCmdNameMaxSize,
    #     char* urlSuffix, unsigned urlSuffixMaxSize,
    #     char* sessionCookie, unsigned sessionCookieMaxSize,
    #     char* acceptStr, unsigned acceptStrMaxSize);
    # virtual void handleHTTPCmd_notSupported();
    # virtual void handleHTTPCmd_notFound();
    # virtual void handleHTTPCmd_OPTIONS();
    # virtual void handleHTTPCmd_TunnelingGET(char const* sessionCookie);
    # virtual Boolean handleHTTPCmd_TunnelingPOST(char const* sessionCookie, unsigned char const* extraData, unsigned extraDataSize);
    # virtual void handleHTTPCmd_StreamingGET(char const* urlSuffix, char const* fullRequestStr);
    # void resetRequestBuffer();
    # void closeSockets();
    # static void handleAlternativeRequestByte(void*, u_int8_t requestByte);
    # void handleAlternativeRequestByte1(u_int8_t requestByte);
    # Boolean authenticationOK(char const* cmdName, char const* urlSuffix, char const* fullRequestStr);
    # void changeClientInputSocket(int newSocketNum, unsigned char const* extraData, unsigned extraDataSize);
    # static void continueHandlingREGISTER(ParamsForREGISTER* params);
    # virtual void continueHandlingREGISTER1(ParamsForREGISTER* params);
    # void setRTSPResponse(char const* responseStr);
    # void setRTSPResponse(char const* responseStr, u_int32_t sessionId);
    # void setRTSPResponse(char const* responseStr, char const* contentStr);
    # void setRTSPResponse(char const* responseStr, u_int32_t sessionId, char const* contentStr);
    # RTSPServer& fOurRTSPServer;
    # int& fClientInputSocket;
    # int fClientOutputSocket;
    # Boolean fIsActive;
    # unsigned char* fLastCRLF;
    # unsigned fRecursionCount;
    # char const* fCurrentCSeq;
    # Authenticator fCurrentAuthenticator;
    # char* fOurSessionCookie;
    # unsigned fBase64RemainderCount;
}
RTSPServer +- -> RTSPClientConnection
ClientConnection <|- - RTSPClientConnection


class RTSPClientSession {
    # RTSPClientSession(RTSPServer& ourServer, u_int32_t sessionId);
    # virtual ~RTSPClientSession();
    # friend class RTSPServer;
    # virtual void handleCmd_SETUP(RTSPClientConnection* ourClientConnection,
         char const* urlPreSuffix, char const* urlSuffix, char const* fullRequestStr);
    # virtual void handleCmd_withinSession(RTSPClientConnection* ourClientConnection,
         char const* cmdName,
         char const* urlPreSuffix, char const* urlSuffix,
         char const* fullRequestStr);
    # virtual void handleCmd_TEARDOWN(RTSPClientConnection* ourClientConnection,
         ServerMediaSubsession* subsession);
    # virtual void handleCmd_PLAY(RTSPClientConnection* ourClientConnection,
         ServerMediaSubsession* subsession, char const* fullRequestStr);
    # virtual void handleCmd_PAUSE(RTSPClientConnection* ourClientConnection,
         ServerMediaSubsession* subsession);
    # virtual void handleCmd_GET_PARAMETER(RTSPClientConnection* ourClientConnection,
         ServerMediaSubsession* subsession, char const* fullRequestStr);
    # virtual void handleCmd_SET_PARAMETER(RTSPClientConnection* ourClientConnection,
         ServerMediaSubsession* subsession, char const* fullRequestStr);
    # void deleteStreamByTrack(unsigned trackNum);
    # void reclaimStreamStates();
    # Boolean isMulticast();
    # void noteLiveness();
    # static void noteClientLiveness(RTSPClientSession* clientSession);
    # static void livenessTimeoutTask(RTSPClientSession* clientSession);
    # void setRTSPResponse(RTSPClientConnection* ourClientConnection, char const* responseStr);
    # void setRTSPResponse(RTSPClientConnection* ourClientConnection, char const* responseStr, u_int32_t sessionId);
    # void setRTSPResponse(RTSPClientConnection* ourClientConnection, char const* responseStr, char const* contentStr);
    # RTSPServer& fOurRTSPServer;
    # Boolean fIsMulticast, fStreamAfterSETUP;
    # unsigned char fTCPStreamIdCount;
    # Boolean usesTCPTransport() const;
    # TaskToken fLivenessCheckTask;
    # unsigned fNumStreamStates;
}
RTSPServer +- -> RTSPClientSession
ClientSession <|- - RTSPClientSession


class streamState {
    ServerMediaSubsession* subsession;
    int tcpSocketNum;
    void* streamToken;
}
RTSPClientSession +- -> streamState


class ServerMediaSessionIterator {
    + ServerMediaSessionIterator(RTSPServer& server);
    + virtual ~ServerMediaSessionIterator();
    + ServerMediaSession* next();
    - HashTable::Iterator* fOurIterator;
}
RTSPServer +- -> ServerMediaSessionIterator


class ParamsForREGISTER {
    + ParamsForREGISTER(RTSPClientConnection* ourConnection, char const* url, char const* urlSuffix,
        Boolean reuseConnection, Boolean deliverViaTCP, char const* proxyURLSuffix);
    + virtual ~ParamsForREGISTER();
    - friend class RTSPClientConnection;
    - RTSPClientConnection* fOurConnection;
    - char* fURL;
    - char* fURLSuffix;
    - Boolean fReuseConnection, fDeliverViaTCP;
    - char* fProxyURLSuffix;
}
RTSPClientConnection +- -> ParamsForREGISTER


class RTSPServerSupportingHTTPStreaming {
    + static RTSPServerSupportingHTTPStreaming* createNew(UsageEnvironment& env, Port rtspPort = 554,
        UserAuthenticationDatabase* authDatabase = NULL,
        unsigned reclamationTestSeconds = 65);

    + Boolean setHTTPPort(Port httpPort) { return setUpTunnelingOverHTTP(httpPort); }
    # RTSPServerSupportingHTTPStreaming(UsageEnvironment& env,
        int ourSocket, Port ourPort,
        UserAuthenticationDatabase* authDatabase,
        unsigned reclamationTestSeconds);
    # virtual ~RTSPServerSupportingHTTPStreaming();
    # virtual RTSPClientConnection* createNewClientConnection(int clientSocket, struct sockaddr_in clientAddr);
}
RTSPServer <|- - RTSPServerSupportingHTTPStreaming


class RTSPClientConnectionSupportingHTTPStreaming {
    + RTSPClientConnectionSupportingHTTPStreaming(RTSPServer& ourServer, int clientSocket, struct sockaddr_in clientAddr);
    + virtual ~RTSPClientConnectionSupportingHTTPStreaming();
    # virtual void handleHTTPCmd_StreamingGET(char const* urlSuffix, char const* fullRequestStr);
    # static void afterStreaming(void* clientData);
    - u_int32_t fClientSessionId;
    - FramedSource* fStreamSource;
    - ByteStreamMemoryBufferSource* fPlaylistSource;
    - TCPStreamSink* fTCPSink;
}
RTSPServerSupportingHTTPStreaming +- -> RTSPClientConnectionSupportingHTTPStreaming
RTSPClientConnection <|- - RTSPClientConnectionSupportingHTTPStreaming


class DynamicRTSPServer {
    + static DynamicRTSPServer* createNew(UsageEnvironment& env, Port ourPort,
        UserAuthenticationDatabase* authDatabase,
        unsigned reclamationTestSeconds = 65);
    # DynamicRTSPServer(UsageEnvironment& env, int ourSocket, Port ourPort,
        UserAuthenticationDatabase* authDatabase, unsigned reclamationTestSeconds);
    # virtual ~DynamicRTSPServer();
    # virtual ServerMediaSession*
    # lookupServerMediaSession(char const* streamName, Boolean isFirstLookupInSession);
}
RTSPServerSupportingHTTPStreaming <|- - DynamicRTSPServer


class RTSPClient {
    + static RTSPClient* createNew(UsageEnvironment& env, char const* rtspURL,
          int verbosityLevel = 0,
          char const* applicationName = NULL,
          portNumBits tunnelOverHTTPPortNum = 0,
          int socketNumToServer = -1);
    + typedef void(responseHandler)(RTSPClient* rtspClient,
          int resultCode, char* resultString);
    + unsigned sendDescribeCommand(responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendOptionsCommand(responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendAnnounceCommand(char const* sdpDescription, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendSetupCommand(MediaSubsession& subsession, responseHandler* responseHandler,
          Boolean streamOutgoing = False,
          Boolean streamUsingTCP = False,
          Boolean forceMulticastOnUnspecified = False,
          Authenticator* authenticator = NULL);
    + unsigned sendPlayCommand(MediaSession& session, responseHandler* responseHandler,
    +     double start = 0.0f, double end = -1.0f, float scale = 1.0f,
    +     Authenticator* authenticator = NULL);
    + unsigned sendPlayCommand(MediaSubsession& subsession, responseHandler* responseHandler,
          double start = 0.0f, double end = -1.0f, float scale = 1.0f,
          Authenticator* authenticator = NULL);
    + unsigned sendPlayCommand(MediaSession& session, responseHandler* responseHandler,
          char const* absStartTime, char const* absEndTime = NULL, float scale = 1.0f,
          Authenticator* authenticator = NULL);
    + unsigned sendPlayCommand(MediaSubsession& subsession, responseHandler* responseHandler,
          char const* absStartTime, char const* absEndTime = NULL, float scale = 1.0f,
          Authenticator* authenticator = NULL);
    + unsigned sendPauseCommand(MediaSession& session, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendPauseCommand(MediaSubsession& subsession, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendRecordCommand(MediaSession& session, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendRecordCommand(MediaSubsession& subsession, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendTeardownCommand(MediaSession& session, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendTeardownCommand(MediaSubsession& subsession, responseHandler* responseHandler, Authenticator* authenticator = NULL);
    + unsigned sendSetParameterCommand(MediaSession& session, responseHandler* responseHandler,
          char const* parameterName, char const* parameterValue,
          Authenticator* authenticator = NULL);
    + unsigned sendGetParameterCommand(MediaSession& session, responseHandler* responseHandler, char const* parameterName,
          Authenticator* authenticator = NULL);
    + void sendDummyUDPPackets(MediaSession& session, unsigned numDummyPackets = 2);
    + void sendDummyUDPPackets(MediaSubsession& subsession, unsigned numDummyPackets = 2);
    + void setSpeed(MediaSession& session, float speed = 1.0f);
    + Boolean changeResponseHandler(unsigned cseq, responseHandler* newResponseHandler);
    + int socketNum() const { return fInputSocketNum; }
    + static Boolean lookupByName(UsageEnvironment& env,
          char const* sourceName,
          RTSPClient*& resultClient);
    + static Boolean parseRTSPURL(UsageEnvironment& env, char const* url,
          char*& username, char*& password, NetAddress& address, portNumBits& portNum, char const** urlSuffix = NULL);
    + void setUserAgentString(char const* userAgentName);
    + void disallowBasicAuthentication() { fAllowBasicAuthentication = False; }
    + unsigned sessionTimeoutParameter() const { return fSessionTimeoutParameter; }
    + char const* url() const { return fBaseURL; }
    + static unsigned responseBufferSize;
    # RTSPClient(UsageEnvironment& env, char const* rtspURL,
          int verbosityLevel, char const* applicationName, portNumBits tunnelOverHTTPPortNum, int socketNumToServer);
    # virtual ~RTSPClient();
    # void reset();
    # void setBaseURL(char const* url);
    # int grabSocket(); // allows a subclass to reuse our input socket, so that it won't get closed when we're deleted
    # virtual unsigned sendRequest(RequestRecord* request);
    # virtual Boolean setRequestFields(RequestRecord* request,
        char*& cmdURL, Boolean& cmdURLWasAllocated,
        char const*& protocolStr,
        char*& extraHeaders, Boolean& extraHeadersWereAllocated);
    - virtual Boolean isRTSPClient() const;
    - void resetTCPSockets();
    - void resetResponseBuffer();
    - int openConnection(); // -1: failure; 0: pending; 1: success
    - int connectToServer(int socketNum, portNumBits remotePortNum); // used to implement "openConnection()"; result values are the same
    - char* createAuthenticatorString(char const* cmd, char const* url);
    - char* createBlocksizeString(Boolean streamUsingTCP);
    - void handleRequestError(RequestRecord* request);
    - Boolean parseResponseCode(char const* line, unsigned& responseCode, char const*& responseString);
    - void handleIncomingRequest();
    - static Boolean checkForHeader(char const* line, char const* headerName, unsigned headerNameLength, char const*& headerParams);
    - Boolean parseTransportParams(char const* paramsStr,
          char*& serverAddressStr, portNumBits& serverPortNum,
          unsigned char& rtpChannelId, unsigned char& rtcpChannelId);
    - Boolean parseScaleParam(char const* paramStr, float& scale);
    - Boolean parseSpeedParam(char const* paramStr, float& speed);
    - Boolean parseRTPInfoParams(char const*& paramStr, u_int16_t& seqNum, u_int32_t& timestamp);
    - Boolean handleSETUPResponse(MediaSubsession& subsession, char const* sessionParamsStr, char const* transportParamsStr,
          Boolean streamUsingTCP);
    - Boolean handlePLAYResponse(MediaSession& session, MediaSubsession& subsession,
          char const* scaleParamsStr, const char* speedParamsStr,
          char const* rangeParamsStr, char const* rtpInfoParamsStr);
    - Boolean handleTEARDOWNResponse(MediaSession& session, MediaSubsession& subsession);
    - Boolean handleGET_PARAMETERResponse(char const* parameterName, char*& resultValueString);
    - Boolean handleAuthenticationFailure(char const* wwwAuthenticateParamsStr);
    - Boolean resendCommand(RequestRecord* request);
    - char const* sessionURL(MediaSession const& session) const;
    - static void handleAlternativeRequestByte(void*, u_int8_t requestByte);
    - void handleAlternativeRequestByte1(u_int8_t requestByte);
    - void constructSubsessionURL(MediaSubsession const& subsession,
          char const*& prefix,
          char const*& separator,
          char const*& suffix);
    - Boolean setupHTTPTunneling1(); // send the HTTP "GET"
    - static void responseHandlerForHTTP_GET(RTSPClient* rtspClient, int responseCode, char* responseString);
    - void responseHandlerForHTTP_GET1(int responseCode, char* responseString);
    - Boolean setupHTTPTunneling2(); // send the HTTP "POST"
    - static void connectionHandler(void*, int /*mask*/);
    - void connectionHandler1();
    - static void incomingDataHandler(void*, int /*mask*/);
    - void incomingDataHandler1();
    - void handleResponseBytes(int newBytesRead);
    + u_int16_t desiredMaxIncomingPacketSize;
    # int fVerbosityLevel;
    # unsigned fCSeq;
    # Authenticator fCurrentAuthenticator;
    # Boolean fAllowBasicAuthentication;
    # netAddressBits fServerAddress;
    - portNumBits fTunnelOverHTTPPortNum;
    - char* fUserAgentHeaderStr;
    - unsigned fUserAgentHeaderStrLen;
    - int fInputSocketNum, fOutputSocketNum;
    - char* fBaseURL;
    - unsigned char fTCPStreamIdCount; // used for (optional) RTP/TCP
    - char* fLastSessionId;
    - unsigned fSessionTimeoutParameter; // optionally set in response "Session:" headers
    - char* fResponseBuffer;
    - unsigned fResponseBytesAlreadySeen, fResponseBufferBytesLeft;
    - RequestQueue fRequestsAwaitingConnection, fRequestsAwaitingHTTPTunneling, fRequestsAwaitingResponse;
    - char fSessionCookie[33];
    - unsigned fSessionCookieCounter;
    - Boolean fHTTPTunnelingConnectionIsPending;
}
Medium <|.. RTSPClient


class RequestQueue {
    + RequestQueue();
    + RequestQueue(RequestQueue& origQueue);
    + virtual ~RequestQueue();
    + void enqueue(RequestRecord* request);
    + RequestRecord* dequeue();
    + void putAtHead(RequestRecord* request);
    + RequestRecord* findByCSeq(unsigned cseq);
    + Boolean isEmpty() const { return fHead == NULL; }
    - RequestRecord* fHead;
    - RequestRecord* fTail;
}
RTSPClient *- - RequestQueue


class RequestRecord {
    + RequestRecord(unsigned cseq, char const* commandName, responseHandler* handler,
          MediaSession* session = NULL, MediaSubsession* subsession = NULL, u_int32_t booleanFlags = 0,
          double start = 0.0f, double end = -1.0f, float scale = 1.0f, char const* contentStr = NULL);
    + RequestRecord(unsigned cseq, responseHandler* handler,
          char const* absStartTime, char const* absEndTime = NULL, float scale = 1.0f,
          MediaSession* session = NULL, MediaSubsession* subsession = NULL);
    + virtual ~RequestRecord();
    + RequestRecord*& next() { return fNext; }
    + unsigned& cseq() { return fCSeq; }
    + char const* commandName() const { return fCommandName; }
    + MediaSession* session() const { return fSession; }
    + MediaSubsession* subsession() const { return fSubsession; }
    + u_int32_t booleanFlags() const { return fBooleanFlags; }
    + double start() const { return fStart; }
    + double end() const { return fEnd; }
    + char const* absStartTime() const { return fAbsStartTime; }
    + char const* absEndTime() const { return fAbsEndTime; }
    + float scale() const { return fScale; }
    + char* contentStr() const { return fContentStr; }
    + responseHandler*& handler() { return fHandler; }
    - RequestRecord* fNext;
    - unsigned fCSeq;
    - char const* fCommandName;
    - MediaSession* fSession;
    - MediaSubsession* fSubsession;
    - u_int32_t fBooleanFlags;
    - double fStart, fEnd;
    - char *fAbsStartTime, *fAbsEndTime;
    - float fScale;
    - char* fContentStr;
    - responseHandler* fHandler;
}
RTSPClient *- - RequestRecord


class ProxyRTSPClient {
    + ProxyRTSPClient(class ProxyServerMediaSession& ourServerMediaSession, char const* rtspURL,
        char const* username, char const* password,
        portNumBits tunnelOverHTTPPortNum, int verbosityLevel, int socketNumToServer);
    + virtual ~ProxyRTSPClient();
    + void continueAfterDESCRIBE(char const* sdpDescription);
    + void continueAfterLivenessCommand(int resultCode, Boolean serverSupportsGetParameter);
    + void continueAfterSETUP();
    - void reset();
    - Authenticator* auth() { return fOurAuthenticator; }
    - void scheduleLivenessCommand();
    - static void sendLivenessCommand(void* clientData);
    - void scheduleDESCRIBECommand();
    - static void sendDESCRIBE(void* clientData);
    - static void subsessionTimeout(void* clientData);
    - void handleSubsessionTimeout();
    - friend class ProxyServerMediaSession;
    - friend class ProxyServerMediaSubsession;
    - ProxyServerMediaSession& fOurServerMediaSession;
    - char* fOurURL;
    - Authenticator* fOurAuthenticator;
    - Boolean fStreamRTPOverTCP;
    - class ProxyServerMediaSubsession *fSetupQueueHead, *fSetupQueueTail;
    - unsigned fNumSetupsDone;
    - unsigned fNextDESCRIBEDelay; // in seconds
    - Boolean fServerSupportsGetParameter, fLastCommandWasPLAY;
    - TaskToken fLivenessCommandTask, fDESCRIBECommandTask, fSubsessionTimerTask;
}
RTSPClient <|- - ProxyRTSPClient
ProxyRTSPClient - -> ProxyServerMediaSession
ProxyRTSPClient - -> ProxyServerMediaSubsession


class ServerMediaSession {
    + static ServerMediaSession* createNew(UsageEnvironment& env,
                        char const* streamName = NULL,
                        char const* info = NULL,
                        char const* description = NULL,
                        Boolean isSSM = False,
                        char const* miscSDPLines = NULL);
    + static Boolean lookupByName(UsageEnvironment& env,
                                char const* mediumName,
                                ServerMediaSession*& resultSession);
    + char* generateSDPDescription(); // based on the entire session
    + char const* streamName() const { return fStreamName; }
    + Boolean addSubsession(ServerMediaSubsession* subsession);
    + unsigned numSubsessions() const { return fSubsessionCounter; }
    + void testScaleFactor(float& scale); // sets "scale" to the actual supported scale
    + float duration() const;
    + unsigned referenceCount() const { return fReferenceCount; }
    + void incrementReferenceCount() { ++fReferenceCount; }
    + void decrementReferenceCount() { if (fReferenceCount > 0) - -fReferenceCount; }
    + Boolean& deleteWhenUnreferenced() { return fDeleteWhenUnreferenced; }
    + void deleteAllSubsessions();
    # ServerMediaSession(UsageEnvironment& env, char const* streamName,
                char const* info, char const* description,
                Boolean isSSM, char const* miscSDPLines);
    # virtual ~ServerMediaSession();
    - virtual Boolean isServerMediaSession() const;
    - Boolean fIsSSM;
    - friend class ServerMediaSubsessionIterator;
    - ServerMediaSubsession* fSubsessionsHead;
    - ServerMediaSubsession* fSubsessionsTail;
    - unsigned fSubsessionCounter;
    - char* fStreamName;
    - char* fInfoSDPString;
    - char* fDescriptionSDPString;
    - char* fMiscSDPLines;
    - struct timeval fCreationTime;
    - unsigned fReferenceCount;
    - Boolean fDeleteWhenUnreferenced;
}
Medium <|.. ServerMediaSession


class ServerMediaSubsession {
    + unsigned trackNumber() const { return fTrackNumber; }
    + char const* trackId();
    + virtual char const* sdpLines() = 0;
    + virtual void getStreamParameters(unsigned clientSessionId, // in
                    netAddressBits clientAddress, // in
                    Port const& clientRTPPort, // in
                    Port const& clientRTCPPort, // in
                    int tcpSocketNum, // in (-1 means use UDP, not TCP)
                    unsigned char rtpChannelId, // in (used if TCP)
                    unsigned char rtcpChannelId, // in (used if TCP)
                    netAddressBits& destinationAddress, // in out
                    u_int8_t& destinationTTL, // in out
                    Boolean& isMulticast, // out
                    Port& serverRTPPort, // out
                    Port& serverRTCPPort, // out
                    void*& streamToken // out
                    ) = 0;
    + virtual void startStream(unsigned clientSessionId, void* streamToken,
                TaskFunc* rtcpRRHandler,
                void* rtcpRRHandlerClientData,
                unsigned short& rtpSeqNum,
                unsigned& rtpTimestamp,
                ServerRequestAlternativeByteHandler* serverRequestAlternativeByteHandler,
                void* serverRequestAlternativeByteHandlerClientData) = 0;
    + virtual void pauseStream(unsigned clientSessionId, void* streamToken);
    + virtual void seekStream(unsigned clientSessionId, void* streamToken, double& seekNPT,
                double streamDuration, u_int64_t& numBytes);
    + virtual void seekStream(unsigned clientSessionId, void* streamToken, char*& absStart, char*& absEnd);
    + virtual void nullSeekStream(unsigned clientSessionId, void* streamToken,
                    double streamEndTime, u_int64_t& numBytes);
    + virtual void setStreamScale(unsigned clientSessionId, void* streamToken, float scale);
    + virtual float getCurrentNPT(void* streamToken);
    + virtual FramedSource* getStreamSource(void* streamToken);
    + virtual void deleteStream(unsigned clientSessionId, void*& streamToken);
    + virtual void testScaleFactor(float& scale); // sets "scale" to the actual supported scale
    + virtual float duration() const;
    + virtual void getAbsoluteTimeRange(char*& absStartTime, char*& absEndTime) const;
    + void setServerAddressAndPortForSDP(netAddressBits addressBits,
                        portNumBits portBits);
    # ServerMediaSubsession(UsageEnvironment& env);
    # virtual ~ServerMediaSubsession();
    # char const* rangeSDPLine() const;
    # ServerMediaSession* fParentSession;
    # netAddressBits fServerAddressForSDP;
    # portNumBits fPortNumForSDP;
    - friend class ServerMediaSession;
    - friend class ServerMediaSubsessionIterator;
    - ServerMediaSubsession* fNext;
    - unsigned fTrackNumber;
    - char const* fTrackId;
}
Medium <|.. ServerMediaSubsession



class ServerMediaSubsessionIterator {
    + ServerMediaSubsessionIterator(ServerMediaSession& session);
    + virtual ~ServerMediaSubsessionIterator();
    + ServerMediaSubsession* next(); // NULL if none
    + void reset();
    - ServerMediaSession& fOurSession;
    - ServerMediaSubsession* fNextPtr;
}
ServerMediaSubsessionIterator <- -ServerMediaSubsession


class ProxyServerMediaSession {
    + static ProxyServerMediaSession* createNew(UsageEnvironment& env,
        RTSPServer* ourRTSPServer,
        char const* inputStreamURL,
        char const* streamName = NULL,
        char const* username = NULL, char const* password = NULL,
        portNumBits tunnelOverHTTPPortNum = 0,
        int verbosityLevel = 0,
        int socketNumToServer = -1);
    + virtual ~ProxyServerMediaSession();
    + char const* url() const;
    + char describeCompletedFlag;
    + Boolean describeCompletedSuccessfully() const { return fClientMediaSession != NULL; }
    # ProxyServerMediaSession(UsageEnvironment& env, RTSPServer* ourRTSPServer,
        char const* inputStreamURL, char const* streamName,
        char const* username, char const* password,
        portNumBits tunnelOverHTTPPortNum, int verbosityLevel,
        int socketNumToServer,
        createNewProxyRTSPClientFunc* ourCreateNewProxyRTSPClientFunc
        = defaultCreateNewProxyRTSPClientFunc);
    # RTSPServer* fOurRTSPServer;
    # ProxyRTSPClient* fProxyRTSPClient;
    # MediaSession* fClientMediaSession;
    - friend class ProxyRTSPClient;
    - friend class ProxyServerMediaSubsession;
    - void continueAfterDESCRIBE(char const* sdpDescription);
    - void resetDESCRIBEState(); // undoes what was done by "contineAfterDESCRIBE()"
    - int fVerbosityLevel;
    - class PresentationTimeSessionNormalizer* fPresentationTimeSessionNormalizer;
    - createNewProxyRTSPClientFunc* fCreateNewProxyRTSPClientFunc;
}
ServerMediaSession <|- - ProxyServerMediaSession
ProxyServerMediaSession - -> ProxyServerMediaSubsession
ProxyServerMediaSession - -> ProxyRTSPClient


class FramedSource {
    + static Boolean lookupByName(UsageEnvironment& env, char const* sourceName,
          FramedSource*& resultSource);
    + typedef void(afterGettingFunc)(void* clientData, unsigned frameSize,
          unsigned numTruncatedBytes,
          struct timeval presentationTime,
          unsigned durationInMicroseconds);
    + typedef void(onCloseFunc)(void* clientData);
    + void getNextFrame(unsigned char* to, unsigned maxSize,
          afterGettingFunc* afterGettingFunc,
          void* afterGettingClientData,
          onCloseFunc* onCloseFunc,
          void* onCloseClientData);
    + static void handleClosure(void* clientData);
    + void handleClosure();
    + void stopGettingFrames();
    + virtual unsigned maxFrameSize() const;
    + virtual void doGetNextFrame() = 0;
    + Boolean isCurrentlyAwaitingData() const;
    + static void afterGetting(FramedSource* source);
    # FramedSource(UsageEnvironment& env);
    # virtual ~FramedSource();
    # virtual void doStopGettingFrames();
    # unsigned char* fTo;
    # unsigned fMaxSize;
    # unsigned fFrameSize;
    # unsigned fNumTruncatedBytes;
    # struct timeval fPresentationTime;
    # unsigned fDurationInMicroseconds;
    - virtual Boolean isFramedSource() const;
    - afterGettingFunc* fAfterGettingFunc;
    - void* fAfterGettingClientData;
    - onCloseFunc* fOnCloseFunc;
    - void* fOnCloseClientData;
    - Boolean fIsCurrentlyAwaitingData;
}


class FramedFilter {
    + FramedSource* inputSource() const;
    + void reassignInputSource(FramedSource* newInputSource);
    + void detachInputSource();
    # FramedFilter(UsageEnvironment& env, FramedSource* inputSource);
    # virtual ~FramedFilter();
    # virtual char const* MIMEtype() const;
    # virtual void getAttributes() const;
    # virtual void doStopGettingFrames();
    # FramedSource* fInputSource;
}
FramedSource <|.. FramedFilter


class PresentationTimeSubsessionNormalizer {
    + void setRTPSink(RTPSink* rtpSink);
    - friend class PresentationTimeSessionNormalizer;
    - PresentationTimeSubsessionNormalizer(PresentationTimeSessionNormalizer& parent, FramedSource* inputSource, RTPSource* rtpSource,
          char const* codecName, PresentationTimeSubsessionNormalizer* next);
    - virtual ~PresentationTimeSubsessionNormalizer();
    - static void afterGettingFrame(void* clientData, unsigned frameSize, unsigned numTruncatedBytes,
          struct timeval presentationTime, unsigned durationInMicroseconds);
    - void afterGettingFrame(unsigned frameSize, unsigned numTruncatedBytes, struct timeval presentationTime, unsigned durationInMicroseconds);
    - virtual void doGetNextFrame();
    - PresentationTimeSessionNormalizer& fParent;
    - RTPSource* fRTPSource;
    - RTPSink* fRTPSink;
    - char const* fCodecName;
    - PresentationTimeSubsessionNormalizer* fNext;
}
FramedFilter <|- - PresentationTimeSubsessionNormalizer


class PresentationTimeSessionNormalizer {
    + PresentationTimeSessionNormalizer(UsageEnvironment& env);
    + virtual ~PresentationTimeSessionNormalizer();
    + PresentationTimeSubsessionNormalizer*
    + createNewPresentationTimeSubsessionNormalizer(FramedSource* inputSource, RTPSource* rtpSource, char const* codecName);

    - friend class PresentationTimeSubsessionNormalizer;
    - void normalizePresentationTime(PresentationTimeSubsessionNormalizer* ssNormalizer,
          struct timeval& toPT, struct timeval const& fromPT);
    - void removePresentationTimeSubsessionNormalizer(PresentationTimeSubsessionNormalizer* ssNormalizer);
    - PresentationTimeSubsessionNormalizer* fSubsessionNormalizers;
    - PresentationTimeSubsessionNormalizer* fMasterSSNormalizer;
    - struct timeval fPTAdjustment;
}
Medium <|- - PresentationTimeSessionNormalizer


class OnDemandServerMediaSubsession {
    protected: // we're a virtual base class
    # OnDemandServerMediaSubsession(UsageEnvironment& env, Boolean reuseFirstSource,
                portNumBits initialPortNum = 6970,
                Boolean multiplexRTCPWithRTP = False);
    # virtual ~OnDemandServerMediaSubsession();
    # virtual char const* sdpLines();
    # virtual void getStreamParameters(unsigned clientSessionId,
                                        netAddressBits clientAddress,
                                        Port const& clientRTPPort,
                                        Port const& clientRTCPPort,
                                        int tcpSocketNum,
                                        unsigned char rtpChannelId,
                                        unsigned char rtcpChannelId,
                                        netAddressBits& destinationAddress,
                                        u_int8_t& destinationTTL,
                                        Boolean& isMulticast,
                                        Port& serverRTPPort,
                                        Port& serverRTCPPort,
                                        void*& streamToken);
    # virtual void startStream(unsigned clientSessionId, void* streamToken,
                                TaskFunc* rtcpRRHandler,
                                void* rtcpRRHandlerClientData,
                                unsigned short& rtpSeqNum,
                                unsigned& rtpTimestamp,
                                ServerRequestAlternativeByteHandler* serverRequestAlternativeByteHandler,
                                void* serverRequestAlternativeByteHandlerClientData);
    # virtual void pauseStream(unsigned clientSessionId, void* streamToken);
    # virtual void seekStream(unsigned clientSessionId, void* streamToken, double& seekNPT, double streamDuration, u_int64_t& numBytes);
    # virtual void seekStream(unsigned clientSessionId, void* streamToken, char*& absStart, char*& absEnd);
    # virtual void nullSeekStream(unsigned clientSessionId, void* streamToken,
                      double streamEndTime, u_int64_t& numBytes);
    # virtual void setStreamScale(unsigned clientSessionId, void* streamToken, float scale);
    # virtual float getCurrentNPT(void* streamToken);
    # virtual FramedSource* getStreamSource(void* streamToken);
    # virtual void deleteStream(unsigned clientSessionId, void*& streamToken);
    # virtual char const* getAuxSDPLine(RTPSink* rtpSink,
                      FramedSource* inputSource);
    # virtual void seekStreamSource(FramedSource* inputSource, double& seekNPT, double streamDuration, u_int64_t& numBytes);
    # virtual void seekStreamSource(FramedSource* inputSource, char*& absStart, char*& absEnd);
    # virtual void setStreamSourceScale(FramedSource* inputSource, float scale);
    # virtual void setStreamSourceDuration(FramedSource* inputSource, double streamDuration, u_int64_t& numBytes);
    # virtual void closeStreamSource(FramedSource* inputSource);
    # protected: // new virtual functions, defined by all subclasses
    # virtual FramedSource* createNewStreamSource(unsigned clientSessionId,
                              unsigned& estBitrate) = 0;
    # virtual RTPSink* createNewRTPSink(Groupsock* rtpGroupsock,
                      unsigned char rtpPayloadTypeIfDynamic,
                      FramedSource* inputSource) = 0;
    # virtual Groupsock* createGroupsock(struct in_addr const& addr, Port port);
    + void multiplexRTCPWithRTP() { fMultiplexRTCPWithRTP = True; }
    + void setRTCPAppPacketHandler(RTCPAppHandlerFunc* handler, void* clientData);
    + void sendRTCPAppPacket(u_int8_t subtype, char const* name,
                u_int8_t* appDependentData, unsigned appDependentDataSize);
    - void setSDPLinesFromRTPSink(RTPSink* rtpSink, FramedSource* inputSource,
                    unsigned estBitrate);
    # char* fSDPLines;
    # HashTable* fDestinationsHashTable; // indexed by client session id
    # private:
    # Boolean fReuseFirstSource;
    # portNumBits fInitialPortNum;
    # Boolean fMultiplexRTCPWithRTP;
    # void* fLastStreamToken;
    # char fCNAME[100]; // for RTCP
    # RTCPAppHandlerFunc* fAppHandlerTask;
    # void* fAppHandlerClientData;
    # friend class StreamState;
}
ServerMediaSubsession <|- - OnDemandServerMediaSubsession


class Destinations {
    + Destinations(struct in_addr const& destAddr,
                    Port const& rtpDestPort,
                    Port const& rtcpDestPort);
    + Destinations(int tcpSockNum, unsigned char rtpChanId, unsigned char rtcpChanId);
    + Boolean isTCP;
    + struct in_addr addr;
    + Port rtpPort;
    + Port rtcpPort;
    + int tcpSocketNum;
    + unsigned char rtpChannelId, rtcpChannelId;
}
Destinations <- - OnDemandServerMediaSubsession
Destinations <- - StreamState


class StreamState {
    + StreamState(OnDemandServerMediaSubsession& master,
                Port const& serverRTPPort, Port const& serverRTCPPort,
                RTPSink* rtpSink, BasicUDPSink* udpSink,
                unsigned totalBW, FramedSource* mediaSource,
                Groupsock* rtpGS, Groupsock* rtcpGS);
    + virtual ~StreamState();
    + void startPlaying(Destinations* destinations,
                        TaskFunc* rtcpRRHandler, void* rtcpRRHandlerClientData,
                        ServerRequestAlternativeByteHandler* serverRequestAlternativeByteHandler,
                        void* serverRequestAlternativeByteHandlerClientData);
    + void pause();
    + void sendRTCPAppPacket(u_int8_t subtype, char const* name,
                u_int8_t* appDependentData, unsigned appDependentDataSize);
    + void endPlaying(Destinations* destinations);
    + void reclaim();
    + unsigned& referenceCount() { return fReferenceCount; }
    + Port const& serverRTPPort() const { return fServerRTPPort; }
    + Port const& serverRTCPPort() const { return fServerRTCPPort; }
    + RTPSink* rtpSink() const { return fRTPSink; }
    + float streamDuration() const { return fStreamDuration; }
    + FramedSource* mediaSource() const { return fMediaSource; }
    + float& startNPT() { return fStartNPT; }
    + private:
    + OnDemandServerMediaSubsession& fMaster;
    + Boolean fAreCurrentlyPlaying;
    + unsigned fReferenceCount;
    + Port fServerRTPPort, fServerRTCPPort;
    + RTPSink* fRTPSink;
    + BasicUDPSink* fUDPSink;
    + float fStreamDuration;
    + unsigned fTotalBW;
    + RTCPInstance* fRTCPInstance;
    + FramedSource* fMediaSource;
    + float fStartNPT;
    + Groupsock* fRTPgs;
    + Groupsock* fRTCPgs;
}
StreamState <- - OnDemandServerMediaSubsession


class ProxyServerMediaSubsession {
    + ProxyServerMediaSubsession(MediaSubsession& mediaSubsession);
    + virtual ~ProxyServerMediaSubsession();
    + char const* codecName() const { return fClientMediaSubsession.codecName(); }
    + char const* mediumName() const { return fClientMediaSubsession.mediumName(); }
    + unsigned char rtpPayloadFormat() const { return fClientMediaSubsession.rtpPayloadFormat(); }
    + virtual FramedSource* createNewStreamSource(unsigned clientSessionId,
          unsigned& estBitrate);
    + virtual void closeStreamSource(FramedSource* inputSource);
    + virtual RTPSink* createNewRTPSink(Groupsock* rtpGroupsock,
        unsigned char rtpPayloadTypeIfDynamic,
        FramedSource* inputSource);
    - static void subsessionByeHandler(void* clientData);
    - void subsessionByeHandler();
    - int verbosityLevel() const { return ((ProxyServerMediaSession*)fParentSession)->fVerbosityLevel; }
    - friend class ProxyRTSPClient;
    - MediaSubsession& fClientMediaSubsession; // the 'client' media subsession object that corresponds to this 'server' media subsession
    - ProxyServerMediaSubsession* fNext; // used when we're part of a queue
    - Boolean fHaveSetupStream;
}
OnDemandServerMediaSubsession <|- - ProxyServerMediaSubsession


class HandlerServerForREGISTERCommand {
    + static HandlerServerForREGISTERCommand* createNew(UsageEnvironment& env, onRTSPClientCreationFunc* creationFunc,
        Port ourPort = 0, UserAuthenticationDatabase* authDatabase = NULL,
        int verbosityLevel = 0, char const* applicationName = NULL);
    + portNumBits serverPortNum() const { return ntohs(fServerPort.num()); }
    # HandlerServerForREGISTERCommand(UsageEnvironment& env, onRTSPClientCreationFunc* creationFunc, int ourSocket, Port ourPort,
        UserAuthenticationDatabase* authDatabase, int verbosityLevel, char const* applicationName);
    # virtual ~HandlerServerForREGISTERCommand();
    # virtual RTSPClient* createNewRTSPClient(char const* rtspURL, int verbosityLevel, char const* applicationName,
        int socketNumToServer);
    # virtual char const* allowedCommandNames(); // we support "OPTIONS" and "REGISTER" only
    # virtual Boolean weImplementREGISTER(char const* proxyURLSuffix, char*& responseStr); // redefined to return True
    # virtual void implementCmd_REGISTER(char const* url, char const* urlSuffix, int socketToRemoteServer,
        Boolean deliverViaTCP, char const* proxyURLSuffix);
    - onRTSPClientCreationFunc* fCreationFunc;
    - int fVerbosityLevel;
    - char* fApplicationName;
}
RTSPServer <|- - HandlerServerForREGISTERCommand


@enduml

PlantUML version 1.2018.00(Fri Jan 05 03:42:56 CST 2018)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.8.0_131-b11
Operating System: Windows 10
OS Version: 10.0
Default Encoding: GBK
Language: zh
Country: CN
--></g></svg>